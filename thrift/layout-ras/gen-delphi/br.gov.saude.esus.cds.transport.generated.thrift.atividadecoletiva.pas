(**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *)

unit br.gov.saude.esus.cds.transport.generated.thrift.atividadecoletiva;

interface

uses
  Classes,
  SysUtils,
  Generics.Collections,
  Thrift,
  Thrift.Utils,
  Thrift.Collections,
  Thrift.Protocol,
  Thrift.Transport,
  br.gov.saude.esus.cds.transport.generated.thrift.common;

const
  cbr_gov_saude_esus_cds_transport_generated_thrift_atividadecoletiva_Option_AnsiStr_Binary = False;
  cbr_gov_saude_esus_cds_transport_generated_thrift_atividadecoletiva_Option_Register_Types = False;
  cbr_gov_saude_esus_cds_transport_generated_thrift_atividadecoletiva_Option_ConstPrefix    = False;
  cbr_gov_saude_esus_cds_transport_generated_thrift_atividadecoletiva_Option_Events         = False;
  cbr_gov_saude_esus_cds_transport_generated_thrift_atividadecoletiva_Option_XmlDoc         = False;

type
  IParticipanteRowItemThrift = interface;
  IProfissionalCboRowItemThrift = interface;
  IFichaAtividadeColetivaThrift = interface;

  IParticipanteRowItemThrift = interface(IBase)
    function GetCns: string;
    procedure SetCns( const Value: string);
    function GetDataNascimento: Int64;
    procedure SetDataNascimento( const Value: Int64);
    function GetAvaliacaoAlterada: Boolean;
    procedure SetAvaliacaoAlterada( const Value: Boolean);
    function GetPeso: Double;
    procedure SetPeso( const Value: Double);
    function GetAltura: Double;
    procedure SetAltura( const Value: Double);
    function GetCessouHabitoFumar: Boolean;
    procedure SetCessouHabitoFumar( const Value: Boolean);
    function GetAbandonouGrupo: Boolean;
    procedure SetAbandonouGrupo( const Value: Boolean);

    property Cns: string read GetCns write SetCns;
    property DataNascimento: Int64 read GetDataNascimento write SetDataNascimento;
    property AvaliacaoAlterada: Boolean read GetAvaliacaoAlterada write SetAvaliacaoAlterada;
    property Peso: Double read GetPeso write SetPeso;
    property Altura: Double read GetAltura write SetAltura;
    property CessouHabitoFumar: Boolean read GetCessouHabitoFumar write SetCessouHabitoFumar;
    property AbandonouGrupo: Boolean read GetAbandonouGrupo write SetAbandonouGrupo;

    function Get__isset_Cns: Boolean;
    function Get__isset_DataNascimento: Boolean;
    function Get__isset_AvaliacaoAlterada: Boolean;
    function Get__isset_Peso: Boolean;
    function Get__isset_Altura: Boolean;
    function Get__isset_CessouHabitoFumar: Boolean;
    function Get__isset_AbandonouGrupo: Boolean;

    property __isset_Cns: Boolean read Get__isset_Cns;
    property __isset_DataNascimento: Boolean read Get__isset_DataNascimento;
    property __isset_AvaliacaoAlterada: Boolean read Get__isset_AvaliacaoAlterada;
    property __isset_Peso: Boolean read Get__isset_Peso;
    property __isset_Altura: Boolean read Get__isset_Altura;
    property __isset_CessouHabitoFumar: Boolean read Get__isset_CessouHabitoFumar;
    property __isset_AbandonouGrupo: Boolean read Get__isset_AbandonouGrupo;
  end;

  TParticipanteRowItemThriftImpl = class(TInterfacedObject, IBase, IParticipanteRowItemThrift)
  private
    FCns: string;
    FDataNascimento: Int64;
    FAvaliacaoAlterada: Boolean;
    FPeso: Double;
    FAltura: Double;
    FCessouHabitoFumar: Boolean;
    FAbandonouGrupo: Boolean;
    
    F__isset_Cns: Boolean;
    F__isset_DataNascimento: Boolean;
    F__isset_AvaliacaoAlterada: Boolean;
    F__isset_Peso: Boolean;
    F__isset_Altura: Boolean;
    F__isset_CessouHabitoFumar: Boolean;
    F__isset_AbandonouGrupo: Boolean;
    
    function GetCns: string;
    procedure SetCns( const Value: string);
    function GetDataNascimento: Int64;
    procedure SetDataNascimento( const Value: Int64);
    function GetAvaliacaoAlterada: Boolean;
    procedure SetAvaliacaoAlterada( const Value: Boolean);
    function GetPeso: Double;
    procedure SetPeso( const Value: Double);
    function GetAltura: Double;
    procedure SetAltura( const Value: Double);
    function GetCessouHabitoFumar: Boolean;
    procedure SetCessouHabitoFumar( const Value: Boolean);
    function GetAbandonouGrupo: Boolean;
    procedure SetAbandonouGrupo( const Value: Boolean);

    function Get__isset_Cns: Boolean;
    function Get__isset_DataNascimento: Boolean;
    function Get__isset_AvaliacaoAlterada: Boolean;
    function Get__isset_Peso: Boolean;
    function Get__isset_Altura: Boolean;
    function Get__isset_CessouHabitoFumar: Boolean;
    function Get__isset_AbandonouGrupo: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property Cns: string read GetCns write SetCns;
    property DataNascimento: Int64 read GetDataNascimento write SetDataNascimento;
    property AvaliacaoAlterada: Boolean read GetAvaliacaoAlterada write SetAvaliacaoAlterada;
    property Peso: Double read GetPeso write SetPeso;
    property Altura: Double read GetAltura write SetAltura;
    property CessouHabitoFumar: Boolean read GetCessouHabitoFumar write SetCessouHabitoFumar;
    property AbandonouGrupo: Boolean read GetAbandonouGrupo write SetAbandonouGrupo;

    // isset
    property __isset_Cns: Boolean read Get__isset_Cns;
    property __isset_DataNascimento: Boolean read Get__isset_DataNascimento;
    property __isset_AvaliacaoAlterada: Boolean read Get__isset_AvaliacaoAlterada;
    property __isset_Peso: Boolean read Get__isset_Peso;
    property __isset_Altura: Boolean read Get__isset_Altura;
    property __isset_CessouHabitoFumar: Boolean read Get__isset_CessouHabitoFumar;
    property __isset_AbandonouGrupo: Boolean read Get__isset_AbandonouGrupo;
  end;

  IProfissionalCboRowItemThrift = interface(IBase)
    function GetCns: string;
    procedure SetCns( const Value: string);
    function GetCodigoCbo2002: string;
    procedure SetCodigoCbo2002( const Value: string);

    property Cns: string read GetCns write SetCns;
    property CodigoCbo2002: string read GetCodigoCbo2002 write SetCodigoCbo2002;

    function Get__isset_Cns: Boolean;
    function Get__isset_CodigoCbo2002: Boolean;

    property __isset_Cns: Boolean read Get__isset_Cns;
    property __isset_CodigoCbo2002: Boolean read Get__isset_CodigoCbo2002;
  end;

  TProfissionalCboRowItemThriftImpl = class(TInterfacedObject, IBase, IProfissionalCboRowItemThrift)
  private
    FCns: string;
    FCodigoCbo2002: string;
    
    F__isset_Cns: Boolean;
    F__isset_CodigoCbo2002: Boolean;
    
    function GetCns: string;
    procedure SetCns( const Value: string);
    function GetCodigoCbo2002: string;
    procedure SetCodigoCbo2002( const Value: string);

    function Get__isset_Cns: Boolean;
    function Get__isset_CodigoCbo2002: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property Cns: string read GetCns write SetCns;
    property CodigoCbo2002: string read GetCodigoCbo2002 write SetCodigoCbo2002;

    // isset
    property __isset_Cns: Boolean read Get__isset_Cns;
    property __isset_CodigoCbo2002: Boolean read Get__isset_CodigoCbo2002;
  end;

  IFichaAtividadeColetivaThrift = interface(IBase)
    function GetUuidFicha: string;
    procedure SetUuidFicha( const Value: string);
    function GetDtAtividadeColetiva: Int64;
    procedure SetDtAtividadeColetiva( const Value: Int64);
    function GetNumParticipantesProgramados: Integer;
    procedure SetNumParticipantesProgramados( const Value: Integer);
    function GetLocalAtividade: string;
    procedure SetLocalAtividade( const Value: string);
    function GetHoraInicio: Int64;
    procedure SetHoraInicio( const Value: Int64);
    function GetHoraFim: Int64;
    procedure SetHoraFim( const Value: Int64);
    function GetInep: Int64;
    procedure SetInep( const Value: Int64);
    function GetResponsavelCns: string;
    procedure SetResponsavelCns( const Value: string);
    function GetResponsavelCnesUnidade: string;
    procedure SetResponsavelCnesUnidade( const Value: string);
    function GetResponsavelNumIne: string;
    procedure SetResponsavelNumIne( const Value: string);
    function GetNumParticipantes: Integer;
    procedure SetNumParticipantes( const Value: Integer);
    function GetNumAvaliacoesAlteradas: Integer;
    procedure SetNumAvaliacoesAlteradas( const Value: Integer);
    function GetProfissionais: IThriftList<IProfissionalCboRowItemThrift>;
    procedure SetProfissionais( const Value: IThriftList<IProfissionalCboRowItemThrift>);
    function GetAtividadeTipo: Int64;
    procedure SetAtividadeTipo( const Value: Int64);
    function GetTemasParaReuniao: IThriftList<Int64>;
    procedure SetTemasParaReuniao( const Value: IThriftList<Int64>);
    function GetPublicoAlvo: IThriftList<Int64>;
    procedure SetPublicoAlvo( const Value: IThriftList<Int64>);
    function GetPraticasTemasParaSaude: IThriftList<Int64>;
    procedure SetPraticasTemasParaSaude( const Value: IThriftList<Int64>);
    function GetParticipantes: IThriftList<IParticipanteRowItemThrift>;
    procedure SetParticipantes( const Value: IThriftList<IParticipanteRowItemThrift>);
    function GetTbCdsOrigem: Integer;
    procedure SetTbCdsOrigem( const Value: Integer);
    function GetCodigoIbgeMunicipio: string;
    procedure SetCodigoIbgeMunicipio( const Value: string);

    property UuidFicha: string read GetUuidFicha write SetUuidFicha;
    property DtAtividadeColetiva: Int64 read GetDtAtividadeColetiva write SetDtAtividadeColetiva;
    property NumParticipantesProgramados: Integer read GetNumParticipantesProgramados write SetNumParticipantesProgramados;
    property LocalAtividade: string read GetLocalAtividade write SetLocalAtividade;
    property HoraInicio: Int64 read GetHoraInicio write SetHoraInicio;
    property HoraFim: Int64 read GetHoraFim write SetHoraFim;
    property Inep: Int64 read GetInep write SetInep;
    property ResponsavelCns: string read GetResponsavelCns write SetResponsavelCns;
    property ResponsavelCnesUnidade: string read GetResponsavelCnesUnidade write SetResponsavelCnesUnidade;
    property ResponsavelNumIne: string read GetResponsavelNumIne write SetResponsavelNumIne;
    property NumParticipantes: Integer read GetNumParticipantes write SetNumParticipantes;
    property NumAvaliacoesAlteradas: Integer read GetNumAvaliacoesAlteradas write SetNumAvaliacoesAlteradas;
    property Profissionais: IThriftList<IProfissionalCboRowItemThrift> read GetProfissionais write SetProfissionais;
    property AtividadeTipo: Int64 read GetAtividadeTipo write SetAtividadeTipo;
    property TemasParaReuniao: IThriftList<Int64> read GetTemasParaReuniao write SetTemasParaReuniao;
    property PublicoAlvo: IThriftList<Int64> read GetPublicoAlvo write SetPublicoAlvo;
    property PraticasTemasParaSaude: IThriftList<Int64> read GetPraticasTemasParaSaude write SetPraticasTemasParaSaude;
    property Participantes: IThriftList<IParticipanteRowItemThrift> read GetParticipantes write SetParticipantes;
    property TbCdsOrigem: Integer read GetTbCdsOrigem write SetTbCdsOrigem;
    property CodigoIbgeMunicipio: string read GetCodigoIbgeMunicipio write SetCodigoIbgeMunicipio;

    function Get__isset_DtAtividadeColetiva: Boolean;
    function Get__isset_NumParticipantesProgramados: Boolean;
    function Get__isset_LocalAtividade: Boolean;
    function Get__isset_HoraInicio: Boolean;
    function Get__isset_HoraFim: Boolean;
    function Get__isset_Inep: Boolean;
    function Get__isset_ResponsavelCns: Boolean;
    function Get__isset_ResponsavelNumIne: Boolean;
    function Get__isset_NumParticipantes: Boolean;
    function Get__isset_NumAvaliacoesAlteradas: Boolean;
    function Get__isset_Profissionais: Boolean;
    function Get__isset_AtividadeTipo: Boolean;
    function Get__isset_TemasParaReuniao: Boolean;
    function Get__isset_PublicoAlvo: Boolean;
    function Get__isset_PraticasTemasParaSaude: Boolean;
    function Get__isset_Participantes: Boolean;
    function Get__isset_TbCdsOrigem: Boolean;
    function Get__isset_CodigoIbgeMunicipio: Boolean;

    property __isset_DtAtividadeColetiva: Boolean read Get__isset_DtAtividadeColetiva;
    property __isset_NumParticipantesProgramados: Boolean read Get__isset_NumParticipantesProgramados;
    property __isset_LocalAtividade: Boolean read Get__isset_LocalAtividade;
    property __isset_HoraInicio: Boolean read Get__isset_HoraInicio;
    property __isset_HoraFim: Boolean read Get__isset_HoraFim;
    property __isset_Inep: Boolean read Get__isset_Inep;
    property __isset_ResponsavelCns: Boolean read Get__isset_ResponsavelCns;
    property __isset_ResponsavelNumIne: Boolean read Get__isset_ResponsavelNumIne;
    property __isset_NumParticipantes: Boolean read Get__isset_NumParticipantes;
    property __isset_NumAvaliacoesAlteradas: Boolean read Get__isset_NumAvaliacoesAlteradas;
    property __isset_Profissionais: Boolean read Get__isset_Profissionais;
    property __isset_AtividadeTipo: Boolean read Get__isset_AtividadeTipo;
    property __isset_TemasParaReuniao: Boolean read Get__isset_TemasParaReuniao;
    property __isset_PublicoAlvo: Boolean read Get__isset_PublicoAlvo;
    property __isset_PraticasTemasParaSaude: Boolean read Get__isset_PraticasTemasParaSaude;
    property __isset_Participantes: Boolean read Get__isset_Participantes;
    property __isset_TbCdsOrigem: Boolean read Get__isset_TbCdsOrigem;
    property __isset_CodigoIbgeMunicipio: Boolean read Get__isset_CodigoIbgeMunicipio;
  end;

  TFichaAtividadeColetivaThriftImpl = class(TInterfacedObject, IBase, IFichaAtividadeColetivaThrift)
  private
    FUuidFicha: string;
    FDtAtividadeColetiva: Int64;
    FNumParticipantesProgramados: Integer;
    FLocalAtividade: string;
    FHoraInicio: Int64;
    FHoraFim: Int64;
    FInep: Int64;
    FResponsavelCns: string;
    FResponsavelCnesUnidade: string;
    FResponsavelNumIne: string;
    FNumParticipantes: Integer;
    FNumAvaliacoesAlteradas: Integer;
    FProfissionais: IThriftList<IProfissionalCboRowItemThrift>;
    FAtividadeTipo: Int64;
    FTemasParaReuniao: IThriftList<Int64>;
    FPublicoAlvo: IThriftList<Int64>;
    FPraticasTemasParaSaude: IThriftList<Int64>;
    FParticipantes: IThriftList<IParticipanteRowItemThrift>;
    FTbCdsOrigem: Integer;
    FCodigoIbgeMunicipio: string;
    
    F__isset_DtAtividadeColetiva: Boolean;
    F__isset_NumParticipantesProgramados: Boolean;
    F__isset_LocalAtividade: Boolean;
    F__isset_HoraInicio: Boolean;
    F__isset_HoraFim: Boolean;
    F__isset_Inep: Boolean;
    F__isset_ResponsavelCns: Boolean;
    F__isset_ResponsavelNumIne: Boolean;
    F__isset_NumParticipantes: Boolean;
    F__isset_NumAvaliacoesAlteradas: Boolean;
    F__isset_Profissionais: Boolean;
    F__isset_AtividadeTipo: Boolean;
    F__isset_TemasParaReuniao: Boolean;
    F__isset_PublicoAlvo: Boolean;
    F__isset_PraticasTemasParaSaude: Boolean;
    F__isset_Participantes: Boolean;
    F__isset_TbCdsOrigem: Boolean;
    F__isset_CodigoIbgeMunicipio: Boolean;
    
    function GetUuidFicha: string;
    procedure SetUuidFicha( const Value: string);
    function GetDtAtividadeColetiva: Int64;
    procedure SetDtAtividadeColetiva( const Value: Int64);
    function GetNumParticipantesProgramados: Integer;
    procedure SetNumParticipantesProgramados( const Value: Integer);
    function GetLocalAtividade: string;
    procedure SetLocalAtividade( const Value: string);
    function GetHoraInicio: Int64;
    procedure SetHoraInicio( const Value: Int64);
    function GetHoraFim: Int64;
    procedure SetHoraFim( const Value: Int64);
    function GetInep: Int64;
    procedure SetInep( const Value: Int64);
    function GetResponsavelCns: string;
    procedure SetResponsavelCns( const Value: string);
    function GetResponsavelCnesUnidade: string;
    procedure SetResponsavelCnesUnidade( const Value: string);
    function GetResponsavelNumIne: string;
    procedure SetResponsavelNumIne( const Value: string);
    function GetNumParticipantes: Integer;
    procedure SetNumParticipantes( const Value: Integer);
    function GetNumAvaliacoesAlteradas: Integer;
    procedure SetNumAvaliacoesAlteradas( const Value: Integer);
    function GetProfissionais: IThriftList<IProfissionalCboRowItemThrift>;
    procedure SetProfissionais( const Value: IThriftList<IProfissionalCboRowItemThrift>);
    function GetAtividadeTipo: Int64;
    procedure SetAtividadeTipo( const Value: Int64);
    function GetTemasParaReuniao: IThriftList<Int64>;
    procedure SetTemasParaReuniao( const Value: IThriftList<Int64>);
    function GetPublicoAlvo: IThriftList<Int64>;
    procedure SetPublicoAlvo( const Value: IThriftList<Int64>);
    function GetPraticasTemasParaSaude: IThriftList<Int64>;
    procedure SetPraticasTemasParaSaude( const Value: IThriftList<Int64>);
    function GetParticipantes: IThriftList<IParticipanteRowItemThrift>;
    procedure SetParticipantes( const Value: IThriftList<IParticipanteRowItemThrift>);
    function GetTbCdsOrigem: Integer;
    procedure SetTbCdsOrigem( const Value: Integer);
    function GetCodigoIbgeMunicipio: string;
    procedure SetCodigoIbgeMunicipio( const Value: string);

    function Get__isset_DtAtividadeColetiva: Boolean;
    function Get__isset_NumParticipantesProgramados: Boolean;
    function Get__isset_LocalAtividade: Boolean;
    function Get__isset_HoraInicio: Boolean;
    function Get__isset_HoraFim: Boolean;
    function Get__isset_Inep: Boolean;
    function Get__isset_ResponsavelCns: Boolean;
    function Get__isset_ResponsavelNumIne: Boolean;
    function Get__isset_NumParticipantes: Boolean;
    function Get__isset_NumAvaliacoesAlteradas: Boolean;
    function Get__isset_Profissionais: Boolean;
    function Get__isset_AtividadeTipo: Boolean;
    function Get__isset_TemasParaReuniao: Boolean;
    function Get__isset_PublicoAlvo: Boolean;
    function Get__isset_PraticasTemasParaSaude: Boolean;
    function Get__isset_Participantes: Boolean;
    function Get__isset_TbCdsOrigem: Boolean;
    function Get__isset_CodigoIbgeMunicipio: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property UuidFicha: string read GetUuidFicha write SetUuidFicha;
    property DtAtividadeColetiva: Int64 read GetDtAtividadeColetiva write SetDtAtividadeColetiva;
    property NumParticipantesProgramados: Integer read GetNumParticipantesProgramados write SetNumParticipantesProgramados;
    property LocalAtividade: string read GetLocalAtividade write SetLocalAtividade;
    property HoraInicio: Int64 read GetHoraInicio write SetHoraInicio;
    property HoraFim: Int64 read GetHoraFim write SetHoraFim;
    property Inep: Int64 read GetInep write SetInep;
    property ResponsavelCns: string read GetResponsavelCns write SetResponsavelCns;
    property ResponsavelCnesUnidade: string read GetResponsavelCnesUnidade write SetResponsavelCnesUnidade;
    property ResponsavelNumIne: string read GetResponsavelNumIne write SetResponsavelNumIne;
    property NumParticipantes: Integer read GetNumParticipantes write SetNumParticipantes;
    property NumAvaliacoesAlteradas: Integer read GetNumAvaliacoesAlteradas write SetNumAvaliacoesAlteradas;
    property Profissionais: IThriftList<IProfissionalCboRowItemThrift> read GetProfissionais write SetProfissionais;
    property AtividadeTipo: Int64 read GetAtividadeTipo write SetAtividadeTipo;
    property TemasParaReuniao: IThriftList<Int64> read GetTemasParaReuniao write SetTemasParaReuniao;
    property PublicoAlvo: IThriftList<Int64> read GetPublicoAlvo write SetPublicoAlvo;
    property PraticasTemasParaSaude: IThriftList<Int64> read GetPraticasTemasParaSaude write SetPraticasTemasParaSaude;
    property Participantes: IThriftList<IParticipanteRowItemThrift> read GetParticipantes write SetParticipantes;
    property TbCdsOrigem: Integer read GetTbCdsOrigem write SetTbCdsOrigem;
    property CodigoIbgeMunicipio: string read GetCodigoIbgeMunicipio write SetCodigoIbgeMunicipio;

    // isset
    property __isset_DtAtividadeColetiva: Boolean read Get__isset_DtAtividadeColetiva;
    property __isset_NumParticipantesProgramados: Boolean read Get__isset_NumParticipantesProgramados;
    property __isset_LocalAtividade: Boolean read Get__isset_LocalAtividade;
    property __isset_HoraInicio: Boolean read Get__isset_HoraInicio;
    property __isset_HoraFim: Boolean read Get__isset_HoraFim;
    property __isset_Inep: Boolean read Get__isset_Inep;
    property __isset_ResponsavelCns: Boolean read Get__isset_ResponsavelCns;
    property __isset_ResponsavelNumIne: Boolean read Get__isset_ResponsavelNumIne;
    property __isset_NumParticipantes: Boolean read Get__isset_NumParticipantes;
    property __isset_NumAvaliacoesAlteradas: Boolean read Get__isset_NumAvaliacoesAlteradas;
    property __isset_Profissionais: Boolean read Get__isset_Profissionais;
    property __isset_AtividadeTipo: Boolean read Get__isset_AtividadeTipo;
    property __isset_TemasParaReuniao: Boolean read Get__isset_TemasParaReuniao;
    property __isset_PublicoAlvo: Boolean read Get__isset_PublicoAlvo;
    property __isset_PraticasTemasParaSaude: Boolean read Get__isset_PraticasTemasParaSaude;
    property __isset_Participantes: Boolean read Get__isset_Participantes;
    property __isset_TbCdsOrigem: Boolean read Get__isset_TbCdsOrigem;
    property __isset_CodigoIbgeMunicipio: Boolean read Get__isset_CodigoIbgeMunicipio;
  end;

implementation

constructor TParticipanteRowItemThriftImpl.Create;
begin
  inherited;
end;

destructor TParticipanteRowItemThriftImpl.Destroy;
begin
  inherited;
end;

function TParticipanteRowItemThriftImpl.GetCns: string;
begin
  Result := FCns;
end;

procedure TParticipanteRowItemThriftImpl.SetCns( const Value: string);
begin
  F__isset_Cns := True;
  FCns := Value;
end;

function TParticipanteRowItemThriftImpl.Get__isset_Cns: Boolean;
begin
  Result := F__isset_Cns;
end;

function TParticipanteRowItemThriftImpl.GetDataNascimento: Int64;
begin
  Result := FDataNascimento;
end;

procedure TParticipanteRowItemThriftImpl.SetDataNascimento( const Value: Int64);
begin
  F__isset_DataNascimento := True;
  FDataNascimento := Value;
end;

function TParticipanteRowItemThriftImpl.Get__isset_DataNascimento: Boolean;
begin
  Result := F__isset_DataNascimento;
end;

function TParticipanteRowItemThriftImpl.GetAvaliacaoAlterada: Boolean;
begin
  Result := FAvaliacaoAlterada;
end;

procedure TParticipanteRowItemThriftImpl.SetAvaliacaoAlterada( const Value: Boolean);
begin
  F__isset_AvaliacaoAlterada := True;
  FAvaliacaoAlterada := Value;
end;

function TParticipanteRowItemThriftImpl.Get__isset_AvaliacaoAlterada: Boolean;
begin
  Result := F__isset_AvaliacaoAlterada;
end;

function TParticipanteRowItemThriftImpl.GetPeso: Double;
begin
  Result := FPeso;
end;

procedure TParticipanteRowItemThriftImpl.SetPeso( const Value: Double);
begin
  F__isset_Peso := True;
  FPeso := Value;
end;

function TParticipanteRowItemThriftImpl.Get__isset_Peso: Boolean;
begin
  Result := F__isset_Peso;
end;

function TParticipanteRowItemThriftImpl.GetAltura: Double;
begin
  Result := FAltura;
end;

procedure TParticipanteRowItemThriftImpl.SetAltura( const Value: Double);
begin
  F__isset_Altura := True;
  FAltura := Value;
end;

function TParticipanteRowItemThriftImpl.Get__isset_Altura: Boolean;
begin
  Result := F__isset_Altura;
end;

function TParticipanteRowItemThriftImpl.GetCessouHabitoFumar: Boolean;
begin
  Result := FCessouHabitoFumar;
end;

procedure TParticipanteRowItemThriftImpl.SetCessouHabitoFumar( const Value: Boolean);
begin
  F__isset_CessouHabitoFumar := True;
  FCessouHabitoFumar := Value;
end;

function TParticipanteRowItemThriftImpl.Get__isset_CessouHabitoFumar: Boolean;
begin
  Result := F__isset_CessouHabitoFumar;
end;

function TParticipanteRowItemThriftImpl.GetAbandonouGrupo: Boolean;
begin
  Result := FAbandonouGrupo;
end;

procedure TParticipanteRowItemThriftImpl.SetAbandonouGrupo( const Value: Boolean);
begin
  F__isset_AbandonouGrupo := True;
  FAbandonouGrupo := Value;
end;

function TParticipanteRowItemThriftImpl.Get__isset_AbandonouGrupo: Boolean;
begin
  Result := F__isset_AbandonouGrupo;
end;

procedure TParticipanteRowItemThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;

begin
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.String_) then
          begin
            Cns := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.I64) then
          begin
            DataNascimento := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            AvaliacaoAlterada := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.Double_) then
          begin
            Peso := iprot.ReadDouble();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        5: begin
          if (field_.Type_ = TType.Double_) then
          begin
            Altura := iprot.ReadDouble();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        6: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            CessouHabitoFumar := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        7: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            AbandonouGrupo := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
end;

procedure TParticipanteRowItemThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
begin
  struc := TStructImpl.Create('ParticipanteRowItemThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  if (__isset_Cns) then
  begin
    field_.Name := 'cns';
    field_.Type_  := TType.String_;
    field_.ID := 1;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(Cns);
    oprot.WriteFieldEnd();
  end;
  if (__isset_DataNascimento) then
  begin
    field_.Name := 'dataNascimento';
    field_.Type_  := TType.I64;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(DataNascimento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_AvaliacaoAlterada) then
  begin
    field_.Name := 'avaliacaoAlterada';
    field_.Type_  := TType.Bool_;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(AvaliacaoAlterada);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Peso) then
  begin
    field_.Name := 'peso';
    field_.Type_  := TType.Double_;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    oprot.WriteDouble(Peso);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Altura) then
  begin
    field_.Name := 'altura';
    field_.Type_  := TType.Double_;
    field_.ID := 5;
    oprot.WriteFieldBegin(field_);
    oprot.WriteDouble(Altura);
    oprot.WriteFieldEnd();
  end;
  if (__isset_CessouHabitoFumar) then
  begin
    field_.Name := 'cessouHabitoFumar';
    field_.Type_  := TType.Bool_;
    field_.ID := 6;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(CessouHabitoFumar);
    oprot.WriteFieldEnd();
  end;
  if (__isset_AbandonouGrupo) then
  begin
    field_.Name := 'abandonouGrupo';
    field_.Type_  := TType.Bool_;
    field_.ID := 7;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(AbandonouGrupo);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TParticipanteRowItemThriftImpl.ToString: string;
var
  _sb0 : TThriftStringBuilder;
  _first1 : Boolean;
begin
  _sb0 := TThriftStringBuilder.Create('(');
  try
    _first1 := TRUE;
    if (__isset_Cns) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('Cns: ');
      _sb0.Append(Cns);
    end;
    if (__isset_DataNascimento) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('DataNascimento: ');
      _sb0.Append(DataNascimento);
    end;
    if (__isset_AvaliacaoAlterada) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('AvaliacaoAlterada: ');
      _sb0.Append(AvaliacaoAlterada);
    end;
    if (__isset_Peso) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('Peso: ');
      _sb0.Append(Peso);
    end;
    if (__isset_Altura) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('Altura: ');
      _sb0.Append(Altura);
    end;
    if (__isset_CessouHabitoFumar) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('CessouHabitoFumar: ');
      _sb0.Append(CessouHabitoFumar);
    end;
    if (__isset_AbandonouGrupo) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('AbandonouGrupo: ');
      _sb0.Append(AbandonouGrupo);
    end;
    _sb0.Append(')');
    Result := _sb0.ToString;
    if _first1 then {prevent warning};
  finally
    _sb0.Free;
  end;
end;

constructor TProfissionalCboRowItemThriftImpl.Create;
begin
  inherited;
end;

destructor TProfissionalCboRowItemThriftImpl.Destroy;
begin
  inherited;
end;

function TProfissionalCboRowItemThriftImpl.GetCns: string;
begin
  Result := FCns;
end;

procedure TProfissionalCboRowItemThriftImpl.SetCns( const Value: string);
begin
  F__isset_Cns := True;
  FCns := Value;
end;

function TProfissionalCboRowItemThriftImpl.Get__isset_Cns: Boolean;
begin
  Result := F__isset_Cns;
end;

function TProfissionalCboRowItemThriftImpl.GetCodigoCbo2002: string;
begin
  Result := FCodigoCbo2002;
end;

procedure TProfissionalCboRowItemThriftImpl.SetCodigoCbo2002( const Value: string);
begin
  F__isset_CodigoCbo2002 := True;
  FCodigoCbo2002 := Value;
end;

function TProfissionalCboRowItemThriftImpl.Get__isset_CodigoCbo2002: Boolean;
begin
  Result := F__isset_CodigoCbo2002;
end;

procedure TProfissionalCboRowItemThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;

begin
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.String_) then
          begin
            Cns := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.String_) then
          begin
            CodigoCbo2002 := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
end;

procedure TProfissionalCboRowItemThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
begin
  struc := TStructImpl.Create('ProfissionalCboRowItemThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  if (__isset_Cns) then
  begin
    field_.Name := 'cns';
    field_.Type_  := TType.String_;
    field_.ID := 1;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(Cns);
    oprot.WriteFieldEnd();
  end;
  if (__isset_CodigoCbo2002) then
  begin
    field_.Name := 'codigoCbo2002';
    field_.Type_  := TType.String_;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CodigoCbo2002);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TProfissionalCboRowItemThriftImpl.ToString: string;
var
  _sb2 : TThriftStringBuilder;
  _first3 : Boolean;
begin
  _sb2 := TThriftStringBuilder.Create('(');
  try
    _first3 := TRUE;
    if (__isset_Cns) then begin
      if not _first3 then _sb2.Append(',');
      _first3 := FALSE;
      _sb2.Append('Cns: ');
      _sb2.Append(Cns);
    end;
    if (__isset_CodigoCbo2002) then begin
      if not _first3 then _sb2.Append(',');
      _first3 := FALSE;
      _sb2.Append('CodigoCbo2002: ');
      _sb2.Append(CodigoCbo2002);
    end;
    _sb2.Append(')');
    Result := _sb2.ToString;
    if _first3 then {prevent warning};
  finally
    _sb2.Free;
  end;
end;

constructor TFichaAtividadeColetivaThriftImpl.Create;
begin
  inherited;
end;

destructor TFichaAtividadeColetivaThriftImpl.Destroy;
begin
  inherited;
end;

function TFichaAtividadeColetivaThriftImpl.GetUuidFicha: string;
begin
  Result := FUuidFicha;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetUuidFicha( const Value: string);
begin
  FUuidFicha := Value;
end;

function TFichaAtividadeColetivaThriftImpl.GetDtAtividadeColetiva: Int64;
begin
  Result := FDtAtividadeColetiva;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetDtAtividadeColetiva( const Value: Int64);
begin
  F__isset_DtAtividadeColetiva := True;
  FDtAtividadeColetiva := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_DtAtividadeColetiva: Boolean;
begin
  Result := F__isset_DtAtividadeColetiva;
end;

function TFichaAtividadeColetivaThriftImpl.GetNumParticipantesProgramados: Integer;
begin
  Result := FNumParticipantesProgramados;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetNumParticipantesProgramados( const Value: Integer);
begin
  F__isset_NumParticipantesProgramados := True;
  FNumParticipantesProgramados := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_NumParticipantesProgramados: Boolean;
begin
  Result := F__isset_NumParticipantesProgramados;
end;

function TFichaAtividadeColetivaThriftImpl.GetLocalAtividade: string;
begin
  Result := FLocalAtividade;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetLocalAtividade( const Value: string);
begin
  F__isset_LocalAtividade := True;
  FLocalAtividade := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_LocalAtividade: Boolean;
begin
  Result := F__isset_LocalAtividade;
end;

function TFichaAtividadeColetivaThriftImpl.GetHoraInicio: Int64;
begin
  Result := FHoraInicio;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetHoraInicio( const Value: Int64);
begin
  F__isset_HoraInicio := True;
  FHoraInicio := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_HoraInicio: Boolean;
begin
  Result := F__isset_HoraInicio;
end;

function TFichaAtividadeColetivaThriftImpl.GetHoraFim: Int64;
begin
  Result := FHoraFim;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetHoraFim( const Value: Int64);
begin
  F__isset_HoraFim := True;
  FHoraFim := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_HoraFim: Boolean;
begin
  Result := F__isset_HoraFim;
end;

function TFichaAtividadeColetivaThriftImpl.GetInep: Int64;
begin
  Result := FInep;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetInep( const Value: Int64);
begin
  F__isset_Inep := True;
  FInep := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_Inep: Boolean;
begin
  Result := F__isset_Inep;
end;

function TFichaAtividadeColetivaThriftImpl.GetResponsavelCns: string;
begin
  Result := FResponsavelCns;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetResponsavelCns( const Value: string);
begin
  F__isset_ResponsavelCns := True;
  FResponsavelCns := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_ResponsavelCns: Boolean;
begin
  Result := F__isset_ResponsavelCns;
end;

function TFichaAtividadeColetivaThriftImpl.GetResponsavelCnesUnidade: string;
begin
  Result := FResponsavelCnesUnidade;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetResponsavelCnesUnidade( const Value: string);
begin
  FResponsavelCnesUnidade := Value;
end;

function TFichaAtividadeColetivaThriftImpl.GetResponsavelNumIne: string;
begin
  Result := FResponsavelNumIne;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetResponsavelNumIne( const Value: string);
begin
  F__isset_ResponsavelNumIne := True;
  FResponsavelNumIne := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_ResponsavelNumIne: Boolean;
begin
  Result := F__isset_ResponsavelNumIne;
end;

function TFichaAtividadeColetivaThriftImpl.GetNumParticipantes: Integer;
begin
  Result := FNumParticipantes;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetNumParticipantes( const Value: Integer);
begin
  F__isset_NumParticipantes := True;
  FNumParticipantes := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_NumParticipantes: Boolean;
begin
  Result := F__isset_NumParticipantes;
end;

function TFichaAtividadeColetivaThriftImpl.GetNumAvaliacoesAlteradas: Integer;
begin
  Result := FNumAvaliacoesAlteradas;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetNumAvaliacoesAlteradas( const Value: Integer);
begin
  F__isset_NumAvaliacoesAlteradas := True;
  FNumAvaliacoesAlteradas := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_NumAvaliacoesAlteradas: Boolean;
begin
  Result := F__isset_NumAvaliacoesAlteradas;
end;

function TFichaAtividadeColetivaThriftImpl.GetProfissionais: IThriftList<IProfissionalCboRowItemThrift>;
begin
  Result := FProfissionais;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetProfissionais( const Value: IThriftList<IProfissionalCboRowItemThrift>);
begin
  F__isset_Profissionais := True;
  FProfissionais := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_Profissionais: Boolean;
begin
  Result := F__isset_Profissionais;
end;

function TFichaAtividadeColetivaThriftImpl.GetAtividadeTipo: Int64;
begin
  Result := FAtividadeTipo;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetAtividadeTipo( const Value: Int64);
begin
  F__isset_AtividadeTipo := True;
  FAtividadeTipo := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_AtividadeTipo: Boolean;
begin
  Result := F__isset_AtividadeTipo;
end;

function TFichaAtividadeColetivaThriftImpl.GetTemasParaReuniao: IThriftList<Int64>;
begin
  Result := FTemasParaReuniao;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetTemasParaReuniao( const Value: IThriftList<Int64>);
begin
  F__isset_TemasParaReuniao := True;
  FTemasParaReuniao := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_TemasParaReuniao: Boolean;
begin
  Result := F__isset_TemasParaReuniao;
end;

function TFichaAtividadeColetivaThriftImpl.GetPublicoAlvo: IThriftList<Int64>;
begin
  Result := FPublicoAlvo;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetPublicoAlvo( const Value: IThriftList<Int64>);
begin
  F__isset_PublicoAlvo := True;
  FPublicoAlvo := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_PublicoAlvo: Boolean;
begin
  Result := F__isset_PublicoAlvo;
end;

function TFichaAtividadeColetivaThriftImpl.GetPraticasTemasParaSaude: IThriftList<Int64>;
begin
  Result := FPraticasTemasParaSaude;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetPraticasTemasParaSaude( const Value: IThriftList<Int64>);
begin
  F__isset_PraticasTemasParaSaude := True;
  FPraticasTemasParaSaude := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_PraticasTemasParaSaude: Boolean;
begin
  Result := F__isset_PraticasTemasParaSaude;
end;

function TFichaAtividadeColetivaThriftImpl.GetParticipantes: IThriftList<IParticipanteRowItemThrift>;
begin
  Result := FParticipantes;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetParticipantes( const Value: IThriftList<IParticipanteRowItemThrift>);
begin
  F__isset_Participantes := True;
  FParticipantes := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_Participantes: Boolean;
begin
  Result := F__isset_Participantes;
end;

function TFichaAtividadeColetivaThriftImpl.GetTbCdsOrigem: Integer;
begin
  Result := FTbCdsOrigem;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetTbCdsOrigem( const Value: Integer);
begin
  F__isset_TbCdsOrigem := True;
  FTbCdsOrigem := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_TbCdsOrigem: Boolean;
begin
  Result := F__isset_TbCdsOrigem;
end;

function TFichaAtividadeColetivaThriftImpl.GetCodigoIbgeMunicipio: string;
begin
  Result := FCodigoIbgeMunicipio;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetCodigoIbgeMunicipio( const Value: string);
begin
  F__isset_CodigoIbgeMunicipio := True;
  FCodigoIbgeMunicipio := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_CodigoIbgeMunicipio: Boolean;
begin
  Result := F__isset_CodigoIbgeMunicipio;
end;

procedure TFichaAtividadeColetivaThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;
  _req_isset_UuidFicha : Boolean;
  _req_isset_ResponsavelCnesUnidade : Boolean;
  _list4: IList;
  _i5: Integer;
  _elem6: IProfissionalCboRowItemThrift;
  _list7: IList;
  _i8: Integer;
  _elem9: Int64;
  _list10: IList;
  _i11: Integer;
  _elem12: Int64;
  _list13: IList;
  _i14: Integer;
  _elem15: Int64;
  _list16: IList;
  _i17: Integer;
  _elem18: IParticipanteRowItemThrift;

begin
  _req_isset_UuidFicha := FALSE;
  _req_isset_ResponsavelCnesUnidade := FALSE;
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.String_) then
          begin
            UuidFicha := iprot.ReadString();
            _req_isset_UuidFicha := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.I64) then
          begin
            DtAtividadeColetiva := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.I32) then
          begin
            NumParticipantesProgramados := iprot.ReadI32();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.String_) then
          begin
            LocalAtividade := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        5: begin
          if (field_.Type_ = TType.I64) then
          begin
            HoraInicio := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        6: begin
          if (field_.Type_ = TType.I64) then
          begin
            HoraFim := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        7: begin
          if (field_.Type_ = TType.I64) then
          begin
            Inep := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        8: begin
          if (field_.Type_ = TType.String_) then
          begin
            ResponsavelCns := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        9: begin
          if (field_.Type_ = TType.String_) then
          begin
            ResponsavelCnesUnidade := iprot.ReadString();
            _req_isset_ResponsavelCnesUnidade := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        10: begin
          if (field_.Type_ = TType.String_) then
          begin
            ResponsavelNumIne := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        11: begin
          if (field_.Type_ = TType.I32) then
          begin
            NumParticipantes := iprot.ReadI32();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        12: begin
          if (field_.Type_ = TType.I32) then
          begin
            NumAvaliacoesAlteradas := iprot.ReadI32();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        13: begin
          if (field_.Type_ = TType.List) then
          begin
            Profissionais := TThriftListImpl<IProfissionalCboRowItemThrift>.Create;
            _list4 := iprot.ReadListBegin();
            for _i5 := 0 to _list4.Count - 1 do
            begin
              _elem6 := TProfissionalCboRowItemThriftImpl.Create;
              _elem6.Read(iprot);
              Profissionais.Add(_elem6);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        14: begin
          if (field_.Type_ = TType.I64) then
          begin
            AtividadeTipo := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        15: begin
          if (field_.Type_ = TType.List) then
          begin
            TemasParaReuniao := TThriftListImpl<Int64>.Create;
            _list7 := iprot.ReadListBegin();
            for _i8 := 0 to _list7.Count - 1 do
            begin
              _elem9 := iprot.ReadI64();
              TemasParaReuniao.Add(_elem9);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        16: begin
          if (field_.Type_ = TType.List) then
          begin
            PublicoAlvo := TThriftListImpl<Int64>.Create;
            _list10 := iprot.ReadListBegin();
            for _i11 := 0 to _list10.Count - 1 do
            begin
              _elem12 := iprot.ReadI64();
              PublicoAlvo.Add(_elem12);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        17: begin
          if (field_.Type_ = TType.List) then
          begin
            PraticasTemasParaSaude := TThriftListImpl<Int64>.Create;
            _list13 := iprot.ReadListBegin();
            for _i14 := 0 to _list13.Count - 1 do
            begin
              _elem15 := iprot.ReadI64();
              PraticasTemasParaSaude.Add(_elem15);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        18: begin
          if (field_.Type_ = TType.List) then
          begin
            Participantes := TThriftListImpl<IParticipanteRowItemThrift>.Create;
            _list16 := iprot.ReadListBegin();
            for _i17 := 0 to _list16.Count - 1 do
            begin
              _elem18 := TParticipanteRowItemThriftImpl.Create;
              _elem18.Read(iprot);
              Participantes.Add(_elem18);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        19: begin
          if (field_.Type_ = TType.I32) then
          begin
            TbCdsOrigem := iprot.ReadI32();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        20: begin
          if (field_.Type_ = TType.String_) then
          begin
            CodigoIbgeMunicipio := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
  if not _req_isset_UuidFicha
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'UuidFicha');
  if not _req_isset_ResponsavelCnesUnidade
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'ResponsavelCnesUnidade');
end;

procedure TFichaAtividadeColetivaThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
  list_19 : IList;
  _iter20: IProfissionalCboRowItemThrift;
  list_21 : IList;
  _iter22: Int64;
  list_23 : IList;
  _iter24: Int64;
  list_25 : IList;
  _iter26: Int64;
  list_27 : IList;
  _iter28: IParticipanteRowItemThrift;
begin
  struc := TStructImpl.Create('FichaAtividadeColetivaThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  // required field
  field_.Name := 'uuidFicha';
  field_.Type_  := TType.String_;
  field_.ID := 1;
  oprot.WriteFieldBegin(field_);
  oprot.WriteString(UuidFicha);
  oprot.WriteFieldEnd();
  if (__isset_DtAtividadeColetiva) then
  begin
    field_.Name := 'dtAtividadeColetiva';
    field_.Type_  := TType.I64;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(DtAtividadeColetiva);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NumParticipantesProgramados) then
  begin
    field_.Name := 'numParticipantesProgramados';
    field_.Type_  := TType.I32;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(NumParticipantesProgramados);
    oprot.WriteFieldEnd();
  end;
  if (__isset_LocalAtividade) then
  begin
    field_.Name := 'localAtividade';
    field_.Type_  := TType.String_;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(LocalAtividade);
    oprot.WriteFieldEnd();
  end;
  if (__isset_HoraInicio) then
  begin
    field_.Name := 'horaInicio';
    field_.Type_  := TType.I64;
    field_.ID := 5;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(HoraInicio);
    oprot.WriteFieldEnd();
  end;
  if (__isset_HoraFim) then
  begin
    field_.Name := 'horaFim';
    field_.Type_  := TType.I64;
    field_.ID := 6;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(HoraFim);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Inep) then
  begin
    field_.Name := 'inep';
    field_.Type_  := TType.I64;
    field_.ID := 7;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(Inep);
    oprot.WriteFieldEnd();
  end;
  if (__isset_ResponsavelCns) then
  begin
    field_.Name := 'responsavelCns';
    field_.Type_  := TType.String_;
    field_.ID := 8;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(ResponsavelCns);
    oprot.WriteFieldEnd();
  end;
  // required field
  field_.Name := 'responsavelCnesUnidade';
  field_.Type_  := TType.String_;
  field_.ID := 9;
  oprot.WriteFieldBegin(field_);
  oprot.WriteString(ResponsavelCnesUnidade);
  oprot.WriteFieldEnd();
  if (__isset_ResponsavelNumIne) then
  begin
    field_.Name := 'responsavelNumIne';
    field_.Type_  := TType.String_;
    field_.ID := 10;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(ResponsavelNumIne);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NumParticipantes) then
  begin
    field_.Name := 'numParticipantes';
    field_.Type_  := TType.I32;
    field_.ID := 11;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(NumParticipantes);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NumAvaliacoesAlteradas) then
  begin
    field_.Name := 'numAvaliacoesAlteradas';
    field_.Type_  := TType.I32;
    field_.ID := 12;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(NumAvaliacoesAlteradas);
    oprot.WriteFieldEnd();
  end;
  if (Profissionais <> nil) and __isset_Profissionais then
  begin
    field_.Name := 'profissionais';
    field_.Type_  := TType.List;
    field_.ID := 13;
    oprot.WriteFieldBegin(field_);
    list_19 := TListImpl.Create(TType.Struct, Profissionais.Count);
    oprot.WriteListBegin( list_19);
    for _iter20 in Profissionais do
    begin
      _iter20.Write(oprot);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (__isset_AtividadeTipo) then
  begin
    field_.Name := 'atividadeTipo';
    field_.Type_  := TType.I64;
    field_.ID := 14;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(AtividadeTipo);
    oprot.WriteFieldEnd();
  end;
  if (TemasParaReuniao <> nil) and __isset_TemasParaReuniao then
  begin
    field_.Name := 'temasParaReuniao';
    field_.Type_  := TType.List;
    field_.ID := 15;
    oprot.WriteFieldBegin(field_);
    list_21 := TListImpl.Create(TType.I64, TemasParaReuniao.Count);
    oprot.WriteListBegin( list_21);
    for _iter22 in TemasParaReuniao do
    begin
      oprot.WriteI64(_iter22);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (PublicoAlvo <> nil) and __isset_PublicoAlvo then
  begin
    field_.Name := 'publicoAlvo';
    field_.Type_  := TType.List;
    field_.ID := 16;
    oprot.WriteFieldBegin(field_);
    list_23 := TListImpl.Create(TType.I64, PublicoAlvo.Count);
    oprot.WriteListBegin( list_23);
    for _iter24 in PublicoAlvo do
    begin
      oprot.WriteI64(_iter24);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (PraticasTemasParaSaude <> nil) and __isset_PraticasTemasParaSaude then
  begin
    field_.Name := 'praticasTemasParaSaude';
    field_.Type_  := TType.List;
    field_.ID := 17;
    oprot.WriteFieldBegin(field_);
    list_25 := TListImpl.Create(TType.I64, PraticasTemasParaSaude.Count);
    oprot.WriteListBegin( list_25);
    for _iter26 in PraticasTemasParaSaude do
    begin
      oprot.WriteI64(_iter26);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (Participantes <> nil) and __isset_Participantes then
  begin
    field_.Name := 'participantes';
    field_.Type_  := TType.List;
    field_.ID := 18;
    oprot.WriteFieldBegin(field_);
    list_27 := TListImpl.Create(TType.Struct, Participantes.Count);
    oprot.WriteListBegin( list_27);
    for _iter28 in Participantes do
    begin
      _iter28.Write(oprot);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (__isset_TbCdsOrigem) then
  begin
    field_.Name := 'tbCdsOrigem';
    field_.Type_  := TType.I32;
    field_.ID := 19;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(TbCdsOrigem);
    oprot.WriteFieldEnd();
  end;
  if (__isset_CodigoIbgeMunicipio) then
  begin
    field_.Name := 'codigoIbgeMunicipio';
    field_.Type_  := TType.String_;
    field_.ID := 20;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CodigoIbgeMunicipio);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TFichaAtividadeColetivaThriftImpl.ToString: string;
var
  _sb29 : TThriftStringBuilder;
begin
  _sb29 := TThriftStringBuilder.Create('(');
  try
    _sb29.Append(', UuidFicha: ');
    _sb29.Append(UuidFicha);
    if (__isset_DtAtividadeColetiva) then begin
      _sb29.Append(', DtAtividadeColetiva: ');
      _sb29.Append(DtAtividadeColetiva);
    end;
    if (__isset_NumParticipantesProgramados) then begin
      _sb29.Append(', NumParticipantesProgramados: ');
      _sb29.Append(NumParticipantesProgramados);
    end;
    if (__isset_LocalAtividade) then begin
      _sb29.Append(', LocalAtividade: ');
      _sb29.Append(LocalAtividade);
    end;
    if (__isset_HoraInicio) then begin
      _sb29.Append(', HoraInicio: ');
      _sb29.Append(HoraInicio);
    end;
    if (__isset_HoraFim) then begin
      _sb29.Append(', HoraFim: ');
      _sb29.Append(HoraFim);
    end;
    if (__isset_Inep) then begin
      _sb29.Append(', Inep: ');
      _sb29.Append(Inep);
    end;
    if (__isset_ResponsavelCns) then begin
      _sb29.Append(', ResponsavelCns: ');
      _sb29.Append(ResponsavelCns);
    end;
    _sb29.Append(', ResponsavelCnesUnidade: ');
    _sb29.Append(ResponsavelCnesUnidade);
    if (__isset_ResponsavelNumIne) then begin
      _sb29.Append(', ResponsavelNumIne: ');
      _sb29.Append(ResponsavelNumIne);
    end;
    if (__isset_NumParticipantes) then begin
      _sb29.Append(', NumParticipantes: ');
      _sb29.Append(NumParticipantes);
    end;
    if (__isset_NumAvaliacoesAlteradas) then begin
      _sb29.Append(', NumAvaliacoesAlteradas: ');
      _sb29.Append(NumAvaliacoesAlteradas);
    end;
    if (Profissionais <> nil) and __isset_Profissionais then begin
      _sb29.Append(', Profissionais: ');
      _sb29.Append(Profissionais);
    end;
    if (__isset_AtividadeTipo) then begin
      _sb29.Append(', AtividadeTipo: ');
      _sb29.Append(AtividadeTipo);
    end;
    if (TemasParaReuniao <> nil) and __isset_TemasParaReuniao then begin
      _sb29.Append(', TemasParaReuniao: ');
      _sb29.Append(TemasParaReuniao);
    end;
    if (PublicoAlvo <> nil) and __isset_PublicoAlvo then begin
      _sb29.Append(', PublicoAlvo: ');
      _sb29.Append(PublicoAlvo);
    end;
    if (PraticasTemasParaSaude <> nil) and __isset_PraticasTemasParaSaude then begin
      _sb29.Append(', PraticasTemasParaSaude: ');
      _sb29.Append(PraticasTemasParaSaude);
    end;
    if (Participantes <> nil) and __isset_Participantes then begin
      _sb29.Append(', Participantes: ');
      _sb29.Append(Participantes);
    end;
    if (__isset_TbCdsOrigem) then begin
      _sb29.Append(', TbCdsOrigem: ');
      _sb29.Append(TbCdsOrigem);
    end;
    if (__isset_CodigoIbgeMunicipio) then begin
      _sb29.Append(', CodigoIbgeMunicipio: ');
      _sb29.Append(CodigoIbgeMunicipio);
    end;
    _sb29.Append(')');
    Result := _sb29.ToString;
  finally
    _sb29.Free;
  end;
end;


initialization

finalization


end.

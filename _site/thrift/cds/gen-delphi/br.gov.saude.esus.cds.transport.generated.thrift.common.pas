(**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *)

unit br.gov.saude.esus.cds.transport.generated.thrift.common;

interface

uses
  Classes,
  SysUtils,
  Generics.Collections,
  Thrift,
  Thrift.Utils,
  Thrift.Collections,
  Thrift.Protocol,
  Thrift.Transport;

const
  cbr_gov_saude_esus_cds_transport_generated_thrift_common_Option_AnsiStr_Binary = False;
  cbr_gov_saude_esus_cds_transport_generated_thrift_common_Option_Register_Types = False;
  cbr_gov_saude_esus_cds_transport_generated_thrift_common_Option_ConstPrefix    = False;
  cbr_gov_saude_esus_cds_transport_generated_thrift_common_Option_Events         = False;
  cbr_gov_saude_esus_cds_transport_generated_thrift_common_Option_XmlDoc         = False;

type
  IHeaderCdsCadastroThrift = interface;
  IUnicaLotacaoHeaderThrift = interface;
  IVariasLotacoesHeaderThrift = interface;
  IEnderecoLocalPermanenciaThrift = interface;

  IHeaderCdsCadastroThrift = interface(IBase)
    function GetCnesUnidadeSaude: string;
    procedure SetCnesUnidadeSaude( const Value: string);
    function GetCnsProfissional: string;
    procedure SetCnsProfissional( const Value: string);
    function GetCodigoIbgeMunicipio: string;
    procedure SetCodigoIbgeMunicipio( const Value: string);
    function GetDataAtendimento: Int64;
    procedure SetDataAtendimento( const Value: Int64);
    function GetIneEquipe: string;
    procedure SetIneEquipe( const Value: string);
    function GetMicroarea: Int64;
    procedure SetMicroarea( const Value: Int64);

    property CnesUnidadeSaude: string read GetCnesUnidadeSaude write SetCnesUnidadeSaude;
    property CnsProfissional: string read GetCnsProfissional write SetCnsProfissional;
    property CodigoIbgeMunicipio: string read GetCodigoIbgeMunicipio write SetCodigoIbgeMunicipio;
    property DataAtendimento: Int64 read GetDataAtendimento write SetDataAtendimento;
    property IneEquipe: string read GetIneEquipe write SetIneEquipe;
    property Microarea: Int64 read GetMicroarea write SetMicroarea;

    function Get__isset_CnsProfissional: Boolean;
    function Get__isset_CodigoIbgeMunicipio: Boolean;
    function Get__isset_DataAtendimento: Boolean;
    function Get__isset_IneEquipe: Boolean;
    function Get__isset_Microarea: Boolean;

    property __isset_CnsProfissional: Boolean read Get__isset_CnsProfissional;
    property __isset_CodigoIbgeMunicipio: Boolean read Get__isset_CodigoIbgeMunicipio;
    property __isset_DataAtendimento: Boolean read Get__isset_DataAtendimento;
    property __isset_IneEquipe: Boolean read Get__isset_IneEquipe;
    property __isset_Microarea: Boolean read Get__isset_Microarea;
  end;

  THeaderCdsCadastroThriftImpl = class(TInterfacedObject, IBase, IHeaderCdsCadastroThrift)
  private
    FCnesUnidadeSaude: string;
    FCnsProfissional: string;
    FCodigoIbgeMunicipio: string;
    FDataAtendimento: Int64;
    FIneEquipe: string;
    FMicroarea: Int64;
    
    F__isset_CnsProfissional: Boolean;
    F__isset_CodigoIbgeMunicipio: Boolean;
    F__isset_DataAtendimento: Boolean;
    F__isset_IneEquipe: Boolean;
    F__isset_Microarea: Boolean;
    
    function GetCnesUnidadeSaude: string;
    procedure SetCnesUnidadeSaude( const Value: string);
    function GetCnsProfissional: string;
    procedure SetCnsProfissional( const Value: string);
    function GetCodigoIbgeMunicipio: string;
    procedure SetCodigoIbgeMunicipio( const Value: string);
    function GetDataAtendimento: Int64;
    procedure SetDataAtendimento( const Value: Int64);
    function GetIneEquipe: string;
    procedure SetIneEquipe( const Value: string);
    function GetMicroarea: Int64;
    procedure SetMicroarea( const Value: Int64);

    function Get__isset_CnsProfissional: Boolean;
    function Get__isset_CodigoIbgeMunicipio: Boolean;
    function Get__isset_DataAtendimento: Boolean;
    function Get__isset_IneEquipe: Boolean;
    function Get__isset_Microarea: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property CnesUnidadeSaude: string read GetCnesUnidadeSaude write SetCnesUnidadeSaude;
    property CnsProfissional: string read GetCnsProfissional write SetCnsProfissional;
    property CodigoIbgeMunicipio: string read GetCodigoIbgeMunicipio write SetCodigoIbgeMunicipio;
    property DataAtendimento: Int64 read GetDataAtendimento write SetDataAtendimento;
    property IneEquipe: string read GetIneEquipe write SetIneEquipe;
    property Microarea: Int64 read GetMicroarea write SetMicroarea;

    // isset
    property __isset_CnsProfissional: Boolean read Get__isset_CnsProfissional;
    property __isset_CodigoIbgeMunicipio: Boolean read Get__isset_CodigoIbgeMunicipio;
    property __isset_DataAtendimento: Boolean read Get__isset_DataAtendimento;
    property __isset_IneEquipe: Boolean read Get__isset_IneEquipe;
    property __isset_Microarea: Boolean read Get__isset_Microarea;
  end;

  IUnicaLotacaoHeaderThrift = interface(IBase)
    function GetProfissionalCNS: string;
    procedure SetProfissionalCNS( const Value: string);
    function GetCboCodigo_2002: string;
    procedure SetCboCodigo_2002( const Value: string);
    function GetCnes: string;
    procedure SetCnes( const Value: string);
    function GetIne: string;
    procedure SetIne( const Value: string);
    function GetDataAtendimento: Int64;
    procedure SetDataAtendimento( const Value: Int64);
    function GetCodigoIbgeMunicipio: string;
    procedure SetCodigoIbgeMunicipio( const Value: string);

    property ProfissionalCNS: string read GetProfissionalCNS write SetProfissionalCNS;
    property CboCodigo_2002: string read GetCboCodigo_2002 write SetCboCodigo_2002;
    property Cnes: string read GetCnes write SetCnes;
    property Ine: string read GetIne write SetIne;
    property DataAtendimento: Int64 read GetDataAtendimento write SetDataAtendimento;
    property CodigoIbgeMunicipio: string read GetCodigoIbgeMunicipio write SetCodigoIbgeMunicipio;

    function Get__isset_ProfissionalCNS: Boolean;
    function Get__isset_CboCodigo_2002: Boolean;
    function Get__isset_Ine: Boolean;
    function Get__isset_DataAtendimento: Boolean;
    function Get__isset_CodigoIbgeMunicipio: Boolean;

    property __isset_ProfissionalCNS: Boolean read Get__isset_ProfissionalCNS;
    property __isset_CboCodigo_2002: Boolean read Get__isset_CboCodigo_2002;
    property __isset_Ine: Boolean read Get__isset_Ine;
    property __isset_DataAtendimento: Boolean read Get__isset_DataAtendimento;
    property __isset_CodigoIbgeMunicipio: Boolean read Get__isset_CodigoIbgeMunicipio;
  end;

  TUnicaLotacaoHeaderThriftImpl = class(TInterfacedObject, IBase, IUnicaLotacaoHeaderThrift)
  private
    FProfissionalCNS: string;
    FCboCodigo_2002: string;
    FCnes: string;
    FIne: string;
    FDataAtendimento: Int64;
    FCodigoIbgeMunicipio: string;
    
    F__isset_ProfissionalCNS: Boolean;
    F__isset_CboCodigo_2002: Boolean;
    F__isset_Ine: Boolean;
    F__isset_DataAtendimento: Boolean;
    F__isset_CodigoIbgeMunicipio: Boolean;
    
    function GetProfissionalCNS: string;
    procedure SetProfissionalCNS( const Value: string);
    function GetCboCodigo_2002: string;
    procedure SetCboCodigo_2002( const Value: string);
    function GetCnes: string;
    procedure SetCnes( const Value: string);
    function GetIne: string;
    procedure SetIne( const Value: string);
    function GetDataAtendimento: Int64;
    procedure SetDataAtendimento( const Value: Int64);
    function GetCodigoIbgeMunicipio: string;
    procedure SetCodigoIbgeMunicipio( const Value: string);

    function Get__isset_ProfissionalCNS: Boolean;
    function Get__isset_CboCodigo_2002: Boolean;
    function Get__isset_Ine: Boolean;
    function Get__isset_DataAtendimento: Boolean;
    function Get__isset_CodigoIbgeMunicipio: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property ProfissionalCNS: string read GetProfissionalCNS write SetProfissionalCNS;
    property CboCodigo_2002: string read GetCboCodigo_2002 write SetCboCodigo_2002;
    property Cnes: string read GetCnes write SetCnes;
    property Ine: string read GetIne write SetIne;
    property DataAtendimento: Int64 read GetDataAtendimento write SetDataAtendimento;
    property CodigoIbgeMunicipio: string read GetCodigoIbgeMunicipio write SetCodigoIbgeMunicipio;

    // isset
    property __isset_ProfissionalCNS: Boolean read Get__isset_ProfissionalCNS;
    property __isset_CboCodigo_2002: Boolean read Get__isset_CboCodigo_2002;
    property __isset_Ine: Boolean read Get__isset_Ine;
    property __isset_DataAtendimento: Boolean read Get__isset_DataAtendimento;
    property __isset_CodigoIbgeMunicipio: Boolean read Get__isset_CodigoIbgeMunicipio;
  end;

  IVariasLotacoesHeaderThrift = interface(IBase)
    function GetLotacaoForm: IUnicaLotacaoHeaderThrift;
    procedure SetLotacaoForm( const Value: IUnicaLotacaoHeaderThrift);
    function GetProfissionalCNS1: string;
    procedure SetProfissionalCNS1( const Value: string);
    function GetCboCodigo_2002_1: string;
    procedure SetCboCodigo_2002_1( const Value: string);
    function GetProfissionalCNS2: string;
    procedure SetProfissionalCNS2( const Value: string);
    function GetCboCodigo_2002_2: string;
    procedure SetCboCodigo_2002_2( const Value: string);

    property LotacaoForm: IUnicaLotacaoHeaderThrift read GetLotacaoForm write SetLotacaoForm;
    property ProfissionalCNS1: string read GetProfissionalCNS1 write SetProfissionalCNS1;
    property CboCodigo_2002_1: string read GetCboCodigo_2002_1 write SetCboCodigo_2002_1;
    property ProfissionalCNS2: string read GetProfissionalCNS2 write SetProfissionalCNS2;
    property CboCodigo_2002_2: string read GetCboCodigo_2002_2 write SetCboCodigo_2002_2;

    function Get__isset_ProfissionalCNS1: Boolean;
    function Get__isset_CboCodigo_2002_1: Boolean;
    function Get__isset_ProfissionalCNS2: Boolean;
    function Get__isset_CboCodigo_2002_2: Boolean;

    property __isset_ProfissionalCNS1: Boolean read Get__isset_ProfissionalCNS1;
    property __isset_CboCodigo_2002_1: Boolean read Get__isset_CboCodigo_2002_1;
    property __isset_ProfissionalCNS2: Boolean read Get__isset_ProfissionalCNS2;
    property __isset_CboCodigo_2002_2: Boolean read Get__isset_CboCodigo_2002_2;
  end;

  TVariasLotacoesHeaderThriftImpl = class(TInterfacedObject, IBase, IVariasLotacoesHeaderThrift)
  private
    FLotacaoForm: IUnicaLotacaoHeaderThrift;
    FProfissionalCNS1: string;
    FCboCodigo_2002_1: string;
    FProfissionalCNS2: string;
    FCboCodigo_2002_2: string;
    
    F__isset_ProfissionalCNS1: Boolean;
    F__isset_CboCodigo_2002_1: Boolean;
    F__isset_ProfissionalCNS2: Boolean;
    F__isset_CboCodigo_2002_2: Boolean;
    
    function GetLotacaoForm: IUnicaLotacaoHeaderThrift;
    procedure SetLotacaoForm( const Value: IUnicaLotacaoHeaderThrift);
    function GetProfissionalCNS1: string;
    procedure SetProfissionalCNS1( const Value: string);
    function GetCboCodigo_2002_1: string;
    procedure SetCboCodigo_2002_1( const Value: string);
    function GetProfissionalCNS2: string;
    procedure SetProfissionalCNS2( const Value: string);
    function GetCboCodigo_2002_2: string;
    procedure SetCboCodigo_2002_2( const Value: string);

    function Get__isset_ProfissionalCNS1: Boolean;
    function Get__isset_CboCodigo_2002_1: Boolean;
    function Get__isset_ProfissionalCNS2: Boolean;
    function Get__isset_CboCodigo_2002_2: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property LotacaoForm: IUnicaLotacaoHeaderThrift read GetLotacaoForm write SetLotacaoForm;
    property ProfissionalCNS1: string read GetProfissionalCNS1 write SetProfissionalCNS1;
    property CboCodigo_2002_1: string read GetCboCodigo_2002_1 write SetCboCodigo_2002_1;
    property ProfissionalCNS2: string read GetProfissionalCNS2 write SetProfissionalCNS2;
    property CboCodigo_2002_2: string read GetCboCodigo_2002_2 write SetCboCodigo_2002_2;

    // isset
    property __isset_ProfissionalCNS1: Boolean read Get__isset_ProfissionalCNS1;
    property __isset_CboCodigo_2002_1: Boolean read Get__isset_CboCodigo_2002_1;
    property __isset_ProfissionalCNS2: Boolean read Get__isset_ProfissionalCNS2;
    property __isset_CboCodigo_2002_2: Boolean read Get__isset_CboCodigo_2002_2;
  end;

  IEnderecoLocalPermanenciaThrift = interface(IBase)
    function GetBairro: string;
    procedure SetBairro( const Value: string);
    function GetCep: string;
    procedure SetCep( const Value: string);
    function GetCodigoIbgeMunicipio: string;
    procedure SetCodigoIbgeMunicipio( const Value: string);
    function GetComplemento: string;
    procedure SetComplemento( const Value: string);
    function GetNomeLogradouro: string;
    procedure SetNomeLogradouro( const Value: string);
    function GetNumero: string;
    procedure SetNumero( const Value: string);
    function GetNumeroDneUf: string;
    procedure SetNumeroDneUf( const Value: string);
    function GetTelReferencial: string;
    procedure SetTelReferencial( const Value: string);
    function GetTelResidencial: string;
    procedure SetTelResidencial( const Value: string);
    function GetTipoLogradouroNumeroDne: string;
    procedure SetTipoLogradouroNumeroDne( const Value: string);
    function GetStSemNumero: Boolean;
    procedure SetStSemNumero( const Value: Boolean);

    property Bairro: string read GetBairro write SetBairro;
    property Cep: string read GetCep write SetCep;
    property CodigoIbgeMunicipio: string read GetCodigoIbgeMunicipio write SetCodigoIbgeMunicipio;
    property Complemento: string read GetComplemento write SetComplemento;
    property NomeLogradouro: string read GetNomeLogradouro write SetNomeLogradouro;
    property Numero: string read GetNumero write SetNumero;
    property NumeroDneUf: string read GetNumeroDneUf write SetNumeroDneUf;
    property TelReferencial: string read GetTelReferencial write SetTelReferencial;
    property TelResidencial: string read GetTelResidencial write SetTelResidencial;
    property TipoLogradouroNumeroDne: string read GetTipoLogradouroNumeroDne write SetTipoLogradouroNumeroDne;
    property StSemNumero: Boolean read GetStSemNumero write SetStSemNumero;

    function Get__isset_Bairro: Boolean;
    function Get__isset_Cep: Boolean;
    function Get__isset_CodigoIbgeMunicipio: Boolean;
    function Get__isset_Complemento: Boolean;
    function Get__isset_NomeLogradouro: Boolean;
    function Get__isset_Numero: Boolean;
    function Get__isset_NumeroDneUf: Boolean;
    function Get__isset_TelReferencial: Boolean;
    function Get__isset_TelResidencial: Boolean;
    function Get__isset_TipoLogradouroNumeroDne: Boolean;
    function Get__isset_StSemNumero: Boolean;

    property __isset_Bairro: Boolean read Get__isset_Bairro;
    property __isset_Cep: Boolean read Get__isset_Cep;
    property __isset_CodigoIbgeMunicipio: Boolean read Get__isset_CodigoIbgeMunicipio;
    property __isset_Complemento: Boolean read Get__isset_Complemento;
    property __isset_NomeLogradouro: Boolean read Get__isset_NomeLogradouro;
    property __isset_Numero: Boolean read Get__isset_Numero;
    property __isset_NumeroDneUf: Boolean read Get__isset_NumeroDneUf;
    property __isset_TelReferencial: Boolean read Get__isset_TelReferencial;
    property __isset_TelResidencial: Boolean read Get__isset_TelResidencial;
    property __isset_TipoLogradouroNumeroDne: Boolean read Get__isset_TipoLogradouroNumeroDne;
    property __isset_StSemNumero: Boolean read Get__isset_StSemNumero;
  end;

  TEnderecoLocalPermanenciaThriftImpl = class(TInterfacedObject, IBase, IEnderecoLocalPermanenciaThrift)
  private
    FBairro: string;
    FCep: string;
    FCodigoIbgeMunicipio: string;
    FComplemento: string;
    FNomeLogradouro: string;
    FNumero: string;
    FNumeroDneUf: string;
    FTelReferencial: string;
    FTelResidencial: string;
    FTipoLogradouroNumeroDne: string;
    FStSemNumero: Boolean;
    
    F__isset_Bairro: Boolean;
    F__isset_Cep: Boolean;
    F__isset_CodigoIbgeMunicipio: Boolean;
    F__isset_Complemento: Boolean;
    F__isset_NomeLogradouro: Boolean;
    F__isset_Numero: Boolean;
    F__isset_NumeroDneUf: Boolean;
    F__isset_TelReferencial: Boolean;
    F__isset_TelResidencial: Boolean;
    F__isset_TipoLogradouroNumeroDne: Boolean;
    F__isset_StSemNumero: Boolean;
    
    function GetBairro: string;
    procedure SetBairro( const Value: string);
    function GetCep: string;
    procedure SetCep( const Value: string);
    function GetCodigoIbgeMunicipio: string;
    procedure SetCodigoIbgeMunicipio( const Value: string);
    function GetComplemento: string;
    procedure SetComplemento( const Value: string);
    function GetNomeLogradouro: string;
    procedure SetNomeLogradouro( const Value: string);
    function GetNumero: string;
    procedure SetNumero( const Value: string);
    function GetNumeroDneUf: string;
    procedure SetNumeroDneUf( const Value: string);
    function GetTelReferencial: string;
    procedure SetTelReferencial( const Value: string);
    function GetTelResidencial: string;
    procedure SetTelResidencial( const Value: string);
    function GetTipoLogradouroNumeroDne: string;
    procedure SetTipoLogradouroNumeroDne( const Value: string);
    function GetStSemNumero: Boolean;
    procedure SetStSemNumero( const Value: Boolean);

    function Get__isset_Bairro: Boolean;
    function Get__isset_Cep: Boolean;
    function Get__isset_CodigoIbgeMunicipio: Boolean;
    function Get__isset_Complemento: Boolean;
    function Get__isset_NomeLogradouro: Boolean;
    function Get__isset_Numero: Boolean;
    function Get__isset_NumeroDneUf: Boolean;
    function Get__isset_TelReferencial: Boolean;
    function Get__isset_TelResidencial: Boolean;
    function Get__isset_TipoLogradouroNumeroDne: Boolean;
    function Get__isset_StSemNumero: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property Bairro: string read GetBairro write SetBairro;
    property Cep: string read GetCep write SetCep;
    property CodigoIbgeMunicipio: string read GetCodigoIbgeMunicipio write SetCodigoIbgeMunicipio;
    property Complemento: string read GetComplemento write SetComplemento;
    property NomeLogradouro: string read GetNomeLogradouro write SetNomeLogradouro;
    property Numero: string read GetNumero write SetNumero;
    property NumeroDneUf: string read GetNumeroDneUf write SetNumeroDneUf;
    property TelReferencial: string read GetTelReferencial write SetTelReferencial;
    property TelResidencial: string read GetTelResidencial write SetTelResidencial;
    property TipoLogradouroNumeroDne: string read GetTipoLogradouroNumeroDne write SetTipoLogradouroNumeroDne;
    property StSemNumero: Boolean read GetStSemNumero write SetStSemNumero;

    // isset
    property __isset_Bairro: Boolean read Get__isset_Bairro;
    property __isset_Cep: Boolean read Get__isset_Cep;
    property __isset_CodigoIbgeMunicipio: Boolean read Get__isset_CodigoIbgeMunicipio;
    property __isset_Complemento: Boolean read Get__isset_Complemento;
    property __isset_NomeLogradouro: Boolean read Get__isset_NomeLogradouro;
    property __isset_Numero: Boolean read Get__isset_Numero;
    property __isset_NumeroDneUf: Boolean read Get__isset_NumeroDneUf;
    property __isset_TelReferencial: Boolean read Get__isset_TelReferencial;
    property __isset_TelResidencial: Boolean read Get__isset_TelResidencial;
    property __isset_TipoLogradouroNumeroDne: Boolean read Get__isset_TipoLogradouroNumeroDne;
    property __isset_StSemNumero: Boolean read Get__isset_StSemNumero;
  end;

implementation

constructor THeaderCdsCadastroThriftImpl.Create;
begin
  inherited;
end;

destructor THeaderCdsCadastroThriftImpl.Destroy;
begin
  inherited;
end;

function THeaderCdsCadastroThriftImpl.GetCnesUnidadeSaude: string;
begin
  Result := FCnesUnidadeSaude;
end;

procedure THeaderCdsCadastroThriftImpl.SetCnesUnidadeSaude( const Value: string);
begin
  FCnesUnidadeSaude := Value;
end;

function THeaderCdsCadastroThriftImpl.GetCnsProfissional: string;
begin
  Result := FCnsProfissional;
end;

procedure THeaderCdsCadastroThriftImpl.SetCnsProfissional( const Value: string);
begin
  F__isset_CnsProfissional := True;
  FCnsProfissional := Value;
end;

function THeaderCdsCadastroThriftImpl.Get__isset_CnsProfissional: Boolean;
begin
  Result := F__isset_CnsProfissional;
end;

function THeaderCdsCadastroThriftImpl.GetCodigoIbgeMunicipio: string;
begin
  Result := FCodigoIbgeMunicipio;
end;

procedure THeaderCdsCadastroThriftImpl.SetCodigoIbgeMunicipio( const Value: string);
begin
  F__isset_CodigoIbgeMunicipio := True;
  FCodigoIbgeMunicipio := Value;
end;

function THeaderCdsCadastroThriftImpl.Get__isset_CodigoIbgeMunicipio: Boolean;
begin
  Result := F__isset_CodigoIbgeMunicipio;
end;

function THeaderCdsCadastroThriftImpl.GetDataAtendimento: Int64;
begin
  Result := FDataAtendimento;
end;

procedure THeaderCdsCadastroThriftImpl.SetDataAtendimento( const Value: Int64);
begin
  F__isset_DataAtendimento := True;
  FDataAtendimento := Value;
end;

function THeaderCdsCadastroThriftImpl.Get__isset_DataAtendimento: Boolean;
begin
  Result := F__isset_DataAtendimento;
end;

function THeaderCdsCadastroThriftImpl.GetIneEquipe: string;
begin
  Result := FIneEquipe;
end;

procedure THeaderCdsCadastroThriftImpl.SetIneEquipe( const Value: string);
begin
  F__isset_IneEquipe := True;
  FIneEquipe := Value;
end;

function THeaderCdsCadastroThriftImpl.Get__isset_IneEquipe: Boolean;
begin
  Result := F__isset_IneEquipe;
end;

function THeaderCdsCadastroThriftImpl.GetMicroarea: Int64;
begin
  Result := FMicroarea;
end;

procedure THeaderCdsCadastroThriftImpl.SetMicroarea( const Value: Int64);
begin
  F__isset_Microarea := True;
  FMicroarea := Value;
end;

function THeaderCdsCadastroThriftImpl.Get__isset_Microarea: Boolean;
begin
  Result := F__isset_Microarea;
end;

procedure THeaderCdsCadastroThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;
  _req_isset_CnesUnidadeSaude : Boolean;

begin
  _req_isset_CnesUnidadeSaude := FALSE;
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.String_) then
          begin
            CnesUnidadeSaude := iprot.ReadString();
            _req_isset_CnesUnidadeSaude := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.String_) then
          begin
            CnsProfissional := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.String_) then
          begin
            CodigoIbgeMunicipio := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.I64) then
          begin
            DataAtendimento := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        5: begin
          if (field_.Type_ = TType.String_) then
          begin
            IneEquipe := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        6: begin
          if (field_.Type_ = TType.I64) then
          begin
            Microarea := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
  if not _req_isset_CnesUnidadeSaude
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'CnesUnidadeSaude');
end;

procedure THeaderCdsCadastroThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
begin
  struc := TStructImpl.Create('HeaderCdsCadastroThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  // required field
  field_.Name := 'cnesUnidadeSaude';
  field_.Type_  := TType.String_;
  field_.ID := 1;
  oprot.WriteFieldBegin(field_);
  oprot.WriteString(CnesUnidadeSaude);
  oprot.WriteFieldEnd();
  if (__isset_CnsProfissional) then
  begin
    field_.Name := 'cnsProfissional';
    field_.Type_  := TType.String_;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CnsProfissional);
    oprot.WriteFieldEnd();
  end;
  if (__isset_CodigoIbgeMunicipio) then
  begin
    field_.Name := 'codigoIbgeMunicipio';
    field_.Type_  := TType.String_;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CodigoIbgeMunicipio);
    oprot.WriteFieldEnd();
  end;
  if (__isset_DataAtendimento) then
  begin
    field_.Name := 'dataAtendimento';
    field_.Type_  := TType.I64;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(DataAtendimento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_IneEquipe) then
  begin
    field_.Name := 'ineEquipe';
    field_.Type_  := TType.String_;
    field_.ID := 5;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(IneEquipe);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Microarea) then
  begin
    field_.Name := 'microarea';
    field_.Type_  := TType.I64;
    field_.ID := 6;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(Microarea);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function THeaderCdsCadastroThriftImpl.ToString: string;
var
  _sb0 : TThriftStringBuilder;
begin
  _sb0 := TThriftStringBuilder.Create('(');
  try
    _sb0.Append(', CnesUnidadeSaude: ');
    _sb0.Append(CnesUnidadeSaude);
    if (__isset_CnsProfissional) then begin
      _sb0.Append(', CnsProfissional: ');
      _sb0.Append(CnsProfissional);
    end;
    if (__isset_CodigoIbgeMunicipio) then begin
      _sb0.Append(', CodigoIbgeMunicipio: ');
      _sb0.Append(CodigoIbgeMunicipio);
    end;
    if (__isset_DataAtendimento) then begin
      _sb0.Append(', DataAtendimento: ');
      _sb0.Append(DataAtendimento);
    end;
    if (__isset_IneEquipe) then begin
      _sb0.Append(', IneEquipe: ');
      _sb0.Append(IneEquipe);
    end;
    if (__isset_Microarea) then begin
      _sb0.Append(', Microarea: ');
      _sb0.Append(Microarea);
    end;
    _sb0.Append(')');
    Result := _sb0.ToString;
  finally
    _sb0.Free;
  end;
end;

constructor TUnicaLotacaoHeaderThriftImpl.Create;
begin
  inherited;
end;

destructor TUnicaLotacaoHeaderThriftImpl.Destroy;
begin
  inherited;
end;

function TUnicaLotacaoHeaderThriftImpl.GetProfissionalCNS: string;
begin
  Result := FProfissionalCNS;
end;

procedure TUnicaLotacaoHeaderThriftImpl.SetProfissionalCNS( const Value: string);
begin
  F__isset_ProfissionalCNS := True;
  FProfissionalCNS := Value;
end;

function TUnicaLotacaoHeaderThriftImpl.Get__isset_ProfissionalCNS: Boolean;
begin
  Result := F__isset_ProfissionalCNS;
end;

function TUnicaLotacaoHeaderThriftImpl.GetCboCodigo_2002: string;
begin
  Result := FCboCodigo_2002;
end;

procedure TUnicaLotacaoHeaderThriftImpl.SetCboCodigo_2002( const Value: string);
begin
  F__isset_CboCodigo_2002 := True;
  FCboCodigo_2002 := Value;
end;

function TUnicaLotacaoHeaderThriftImpl.Get__isset_CboCodigo_2002: Boolean;
begin
  Result := F__isset_CboCodigo_2002;
end;

function TUnicaLotacaoHeaderThriftImpl.GetCnes: string;
begin
  Result := FCnes;
end;

procedure TUnicaLotacaoHeaderThriftImpl.SetCnes( const Value: string);
begin
  FCnes := Value;
end;

function TUnicaLotacaoHeaderThriftImpl.GetIne: string;
begin
  Result := FIne;
end;

procedure TUnicaLotacaoHeaderThriftImpl.SetIne( const Value: string);
begin
  F__isset_Ine := True;
  FIne := Value;
end;

function TUnicaLotacaoHeaderThriftImpl.Get__isset_Ine: Boolean;
begin
  Result := F__isset_Ine;
end;

function TUnicaLotacaoHeaderThriftImpl.GetDataAtendimento: Int64;
begin
  Result := FDataAtendimento;
end;

procedure TUnicaLotacaoHeaderThriftImpl.SetDataAtendimento( const Value: Int64);
begin
  F__isset_DataAtendimento := True;
  FDataAtendimento := Value;
end;

function TUnicaLotacaoHeaderThriftImpl.Get__isset_DataAtendimento: Boolean;
begin
  Result := F__isset_DataAtendimento;
end;

function TUnicaLotacaoHeaderThriftImpl.GetCodigoIbgeMunicipio: string;
begin
  Result := FCodigoIbgeMunicipio;
end;

procedure TUnicaLotacaoHeaderThriftImpl.SetCodigoIbgeMunicipio( const Value: string);
begin
  F__isset_CodigoIbgeMunicipio := True;
  FCodigoIbgeMunicipio := Value;
end;

function TUnicaLotacaoHeaderThriftImpl.Get__isset_CodigoIbgeMunicipio: Boolean;
begin
  Result := F__isset_CodigoIbgeMunicipio;
end;

procedure TUnicaLotacaoHeaderThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;
  _req_isset_Cnes : Boolean;

begin
  _req_isset_Cnes := FALSE;
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.String_) then
          begin
            ProfissionalCNS := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.String_) then
          begin
            CboCodigo_2002 := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.String_) then
          begin
            Cnes := iprot.ReadString();
            _req_isset_Cnes := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.String_) then
          begin
            Ine := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        5: begin
          if (field_.Type_ = TType.I64) then
          begin
            DataAtendimento := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        6: begin
          if (field_.Type_ = TType.String_) then
          begin
            CodigoIbgeMunicipio := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
  if not _req_isset_Cnes
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'Cnes');
end;

procedure TUnicaLotacaoHeaderThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
begin
  struc := TStructImpl.Create('UnicaLotacaoHeaderThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  if (__isset_ProfissionalCNS) then
  begin
    field_.Name := 'profissionalCNS';
    field_.Type_  := TType.String_;
    field_.ID := 1;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(ProfissionalCNS);
    oprot.WriteFieldEnd();
  end;
  if (__isset_CboCodigo_2002) then
  begin
    field_.Name := 'cboCodigo_2002';
    field_.Type_  := TType.String_;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CboCodigo_2002);
    oprot.WriteFieldEnd();
  end;
  // required field
  field_.Name := 'cnes';
  field_.Type_  := TType.String_;
  field_.ID := 3;
  oprot.WriteFieldBegin(field_);
  oprot.WriteString(Cnes);
  oprot.WriteFieldEnd();
  if (__isset_Ine) then
  begin
    field_.Name := 'ine';
    field_.Type_  := TType.String_;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(Ine);
    oprot.WriteFieldEnd();
  end;
  if (__isset_DataAtendimento) then
  begin
    field_.Name := 'dataAtendimento';
    field_.Type_  := TType.I64;
    field_.ID := 5;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(DataAtendimento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_CodigoIbgeMunicipio) then
  begin
    field_.Name := 'codigoIbgeMunicipio';
    field_.Type_  := TType.String_;
    field_.ID := 6;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CodigoIbgeMunicipio);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TUnicaLotacaoHeaderThriftImpl.ToString: string;
var
  _sb2 : TThriftStringBuilder;
  _first3 : Boolean;
begin
  _sb2 := TThriftStringBuilder.Create('(');
  try
    _first3 := TRUE;
    if (__isset_ProfissionalCNS) then begin
      if not _first3 then _sb2.Append(',');
      _first3 := FALSE;
      _sb2.Append('ProfissionalCNS: ');
      _sb2.Append(ProfissionalCNS);
    end;
    if (__isset_CboCodigo_2002) then begin
      if not _first3 then _sb2.Append(',');
      _first3 := FALSE;
      _sb2.Append('CboCodigo_2002: ');
      _sb2.Append(CboCodigo_2002);
    end;
    if not _first3 then _sb2.Append(',');
    _sb2.Append('Cnes: ');
    _sb2.Append(Cnes);
    if (__isset_Ine) then begin
      _sb2.Append(', Ine: ');
      _sb2.Append(Ine);
    end;
    if (__isset_DataAtendimento) then begin
      _sb2.Append(', DataAtendimento: ');
      _sb2.Append(DataAtendimento);
    end;
    if (__isset_CodigoIbgeMunicipio) then begin
      _sb2.Append(', CodigoIbgeMunicipio: ');
      _sb2.Append(CodigoIbgeMunicipio);
    end;
    _sb2.Append(')');
    Result := _sb2.ToString;
    if _first3 then {prevent warning};
  finally
    _sb2.Free;
  end;
end;

constructor TVariasLotacoesHeaderThriftImpl.Create;
begin
  inherited;
end;

destructor TVariasLotacoesHeaderThriftImpl.Destroy;
begin
  inherited;
end;

function TVariasLotacoesHeaderThriftImpl.GetLotacaoForm: IUnicaLotacaoHeaderThrift;
begin
  Result := FLotacaoForm;
end;

procedure TVariasLotacoesHeaderThriftImpl.SetLotacaoForm( const Value: IUnicaLotacaoHeaderThrift);
begin
  FLotacaoForm := Value;
end;

function TVariasLotacoesHeaderThriftImpl.GetProfissionalCNS1: string;
begin
  Result := FProfissionalCNS1;
end;

procedure TVariasLotacoesHeaderThriftImpl.SetProfissionalCNS1( const Value: string);
begin
  F__isset_ProfissionalCNS1 := True;
  FProfissionalCNS1 := Value;
end;

function TVariasLotacoesHeaderThriftImpl.Get__isset_ProfissionalCNS1: Boolean;
begin
  Result := F__isset_ProfissionalCNS1;
end;

function TVariasLotacoesHeaderThriftImpl.GetCboCodigo_2002_1: string;
begin
  Result := FCboCodigo_2002_1;
end;

procedure TVariasLotacoesHeaderThriftImpl.SetCboCodigo_2002_1( const Value: string);
begin
  F__isset_CboCodigo_2002_1 := True;
  FCboCodigo_2002_1 := Value;
end;

function TVariasLotacoesHeaderThriftImpl.Get__isset_CboCodigo_2002_1: Boolean;
begin
  Result := F__isset_CboCodigo_2002_1;
end;

function TVariasLotacoesHeaderThriftImpl.GetProfissionalCNS2: string;
begin
  Result := FProfissionalCNS2;
end;

procedure TVariasLotacoesHeaderThriftImpl.SetProfissionalCNS2( const Value: string);
begin
  F__isset_ProfissionalCNS2 := True;
  FProfissionalCNS2 := Value;
end;

function TVariasLotacoesHeaderThriftImpl.Get__isset_ProfissionalCNS2: Boolean;
begin
  Result := F__isset_ProfissionalCNS2;
end;

function TVariasLotacoesHeaderThriftImpl.GetCboCodigo_2002_2: string;
begin
  Result := FCboCodigo_2002_2;
end;

procedure TVariasLotacoesHeaderThriftImpl.SetCboCodigo_2002_2( const Value: string);
begin
  F__isset_CboCodigo_2002_2 := True;
  FCboCodigo_2002_2 := Value;
end;

function TVariasLotacoesHeaderThriftImpl.Get__isset_CboCodigo_2002_2: Boolean;
begin
  Result := F__isset_CboCodigo_2002_2;
end;

procedure TVariasLotacoesHeaderThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;
  _req_isset_LotacaoForm : Boolean;

begin
  _req_isset_LotacaoForm := FALSE;
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.Struct) then
          begin
            LotacaoForm := TUnicaLotacaoHeaderThriftImpl.Create;
            LotacaoForm.Read(iprot);
            _req_isset_LotacaoForm := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.String_) then
          begin
            ProfissionalCNS1 := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.String_) then
          begin
            CboCodigo_2002_1 := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.String_) then
          begin
            ProfissionalCNS2 := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        5: begin
          if (field_.Type_ = TType.String_) then
          begin
            CboCodigo_2002_2 := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
  if not _req_isset_LotacaoForm
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'LotacaoForm');
end;

procedure TVariasLotacoesHeaderThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
begin
  struc := TStructImpl.Create('VariasLotacoesHeaderThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  if (LotacaoForm <> nil) then
  begin
    field_.Name := 'lotacaoForm';
    field_.Type_  := TType.Struct;
    field_.ID := 1;
    oprot.WriteFieldBegin(field_);
    LotacaoForm.Write(oprot);
    oprot.WriteFieldEnd();
  end;
  if (__isset_ProfissionalCNS1) then
  begin
    field_.Name := 'profissionalCNS1';
    field_.Type_  := TType.String_;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(ProfissionalCNS1);
    oprot.WriteFieldEnd();
  end;
  if (__isset_CboCodigo_2002_1) then
  begin
    field_.Name := 'cboCodigo_2002_1';
    field_.Type_  := TType.String_;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CboCodigo_2002_1);
    oprot.WriteFieldEnd();
  end;
  if (__isset_ProfissionalCNS2) then
  begin
    field_.Name := 'profissionalCNS2';
    field_.Type_  := TType.String_;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(ProfissionalCNS2);
    oprot.WriteFieldEnd();
  end;
  if (__isset_CboCodigo_2002_2) then
  begin
    field_.Name := 'cboCodigo_2002_2';
    field_.Type_  := TType.String_;
    field_.ID := 5;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CboCodigo_2002_2);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TVariasLotacoesHeaderThriftImpl.ToString: string;
var
  _sb4 : TThriftStringBuilder;
begin
  _sb4 := TThriftStringBuilder.Create('(');
  try
    if (LotacaoForm <> nil) then begin
      _sb4.Append(', LotacaoForm: ');
      if (LotacaoForm = nil) then _sb4.Append('<null>') else _sb4.Append(LotacaoForm.ToString());
    end;
    if (__isset_ProfissionalCNS1) then begin
      _sb4.Append(', ProfissionalCNS1: ');
      _sb4.Append(ProfissionalCNS1);
    end;
    if (__isset_CboCodigo_2002_1) then begin
      _sb4.Append(', CboCodigo_2002_1: ');
      _sb4.Append(CboCodigo_2002_1);
    end;
    if (__isset_ProfissionalCNS2) then begin
      _sb4.Append(', ProfissionalCNS2: ');
      _sb4.Append(ProfissionalCNS2);
    end;
    if (__isset_CboCodigo_2002_2) then begin
      _sb4.Append(', CboCodigo_2002_2: ');
      _sb4.Append(CboCodigo_2002_2);
    end;
    _sb4.Append(')');
    Result := _sb4.ToString;
  finally
    _sb4.Free;
  end;
end;

constructor TEnderecoLocalPermanenciaThriftImpl.Create;
begin
  inherited;
end;

destructor TEnderecoLocalPermanenciaThriftImpl.Destroy;
begin
  inherited;
end;

function TEnderecoLocalPermanenciaThriftImpl.GetBairro: string;
begin
  Result := FBairro;
end;

procedure TEnderecoLocalPermanenciaThriftImpl.SetBairro( const Value: string);
begin
  F__isset_Bairro := True;
  FBairro := Value;
end;

function TEnderecoLocalPermanenciaThriftImpl.Get__isset_Bairro: Boolean;
begin
  Result := F__isset_Bairro;
end;

function TEnderecoLocalPermanenciaThriftImpl.GetCep: string;
begin
  Result := FCep;
end;

procedure TEnderecoLocalPermanenciaThriftImpl.SetCep( const Value: string);
begin
  F__isset_Cep := True;
  FCep := Value;
end;

function TEnderecoLocalPermanenciaThriftImpl.Get__isset_Cep: Boolean;
begin
  Result := F__isset_Cep;
end;

function TEnderecoLocalPermanenciaThriftImpl.GetCodigoIbgeMunicipio: string;
begin
  Result := FCodigoIbgeMunicipio;
end;

procedure TEnderecoLocalPermanenciaThriftImpl.SetCodigoIbgeMunicipio( const Value: string);
begin
  F__isset_CodigoIbgeMunicipio := True;
  FCodigoIbgeMunicipio := Value;
end;

function TEnderecoLocalPermanenciaThriftImpl.Get__isset_CodigoIbgeMunicipio: Boolean;
begin
  Result := F__isset_CodigoIbgeMunicipio;
end;

function TEnderecoLocalPermanenciaThriftImpl.GetComplemento: string;
begin
  Result := FComplemento;
end;

procedure TEnderecoLocalPermanenciaThriftImpl.SetComplemento( const Value: string);
begin
  F__isset_Complemento := True;
  FComplemento := Value;
end;

function TEnderecoLocalPermanenciaThriftImpl.Get__isset_Complemento: Boolean;
begin
  Result := F__isset_Complemento;
end;

function TEnderecoLocalPermanenciaThriftImpl.GetNomeLogradouro: string;
begin
  Result := FNomeLogradouro;
end;

procedure TEnderecoLocalPermanenciaThriftImpl.SetNomeLogradouro( const Value: string);
begin
  F__isset_NomeLogradouro := True;
  FNomeLogradouro := Value;
end;

function TEnderecoLocalPermanenciaThriftImpl.Get__isset_NomeLogradouro: Boolean;
begin
  Result := F__isset_NomeLogradouro;
end;

function TEnderecoLocalPermanenciaThriftImpl.GetNumero: string;
begin
  Result := FNumero;
end;

procedure TEnderecoLocalPermanenciaThriftImpl.SetNumero( const Value: string);
begin
  F__isset_Numero := True;
  FNumero := Value;
end;

function TEnderecoLocalPermanenciaThriftImpl.Get__isset_Numero: Boolean;
begin
  Result := F__isset_Numero;
end;

function TEnderecoLocalPermanenciaThriftImpl.GetNumeroDneUf: string;
begin
  Result := FNumeroDneUf;
end;

procedure TEnderecoLocalPermanenciaThriftImpl.SetNumeroDneUf( const Value: string);
begin
  F__isset_NumeroDneUf := True;
  FNumeroDneUf := Value;
end;

function TEnderecoLocalPermanenciaThriftImpl.Get__isset_NumeroDneUf: Boolean;
begin
  Result := F__isset_NumeroDneUf;
end;

function TEnderecoLocalPermanenciaThriftImpl.GetTelReferencial: string;
begin
  Result := FTelReferencial;
end;

procedure TEnderecoLocalPermanenciaThriftImpl.SetTelReferencial( const Value: string);
begin
  F__isset_TelReferencial := True;
  FTelReferencial := Value;
end;

function TEnderecoLocalPermanenciaThriftImpl.Get__isset_TelReferencial: Boolean;
begin
  Result := F__isset_TelReferencial;
end;

function TEnderecoLocalPermanenciaThriftImpl.GetTelResidencial: string;
begin
  Result := FTelResidencial;
end;

procedure TEnderecoLocalPermanenciaThriftImpl.SetTelResidencial( const Value: string);
begin
  F__isset_TelResidencial := True;
  FTelResidencial := Value;
end;

function TEnderecoLocalPermanenciaThriftImpl.Get__isset_TelResidencial: Boolean;
begin
  Result := F__isset_TelResidencial;
end;

function TEnderecoLocalPermanenciaThriftImpl.GetTipoLogradouroNumeroDne: string;
begin
  Result := FTipoLogradouroNumeroDne;
end;

procedure TEnderecoLocalPermanenciaThriftImpl.SetTipoLogradouroNumeroDne( const Value: string);
begin
  F__isset_TipoLogradouroNumeroDne := True;
  FTipoLogradouroNumeroDne := Value;
end;

function TEnderecoLocalPermanenciaThriftImpl.Get__isset_TipoLogradouroNumeroDne: Boolean;
begin
  Result := F__isset_TipoLogradouroNumeroDne;
end;

function TEnderecoLocalPermanenciaThriftImpl.GetStSemNumero: Boolean;
begin
  Result := FStSemNumero;
end;

procedure TEnderecoLocalPermanenciaThriftImpl.SetStSemNumero( const Value: Boolean);
begin
  F__isset_StSemNumero := True;
  FStSemNumero := Value;
end;

function TEnderecoLocalPermanenciaThriftImpl.Get__isset_StSemNumero: Boolean;
begin
  Result := F__isset_StSemNumero;
end;

procedure TEnderecoLocalPermanenciaThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;

begin
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.String_) then
          begin
            Bairro := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.String_) then
          begin
            Cep := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.String_) then
          begin
            CodigoIbgeMunicipio := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.String_) then
          begin
            Complemento := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        5: begin
          if (field_.Type_ = TType.String_) then
          begin
            NomeLogradouro := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        6: begin
          if (field_.Type_ = TType.String_) then
          begin
            Numero := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        7: begin
          if (field_.Type_ = TType.String_) then
          begin
            NumeroDneUf := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        8: begin
          if (field_.Type_ = TType.String_) then
          begin
            TelReferencial := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        9: begin
          if (field_.Type_ = TType.String_) then
          begin
            TelResidencial := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        10: begin
          if (field_.Type_ = TType.String_) then
          begin
            TipoLogradouroNumeroDne := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        11: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            StSemNumero := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
end;

procedure TEnderecoLocalPermanenciaThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
begin
  struc := TStructImpl.Create('EnderecoLocalPermanenciaThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  if (__isset_Bairro) then
  begin
    field_.Name := 'bairro';
    field_.Type_  := TType.String_;
    field_.ID := 1;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(Bairro);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Cep) then
  begin
    field_.Name := 'cep';
    field_.Type_  := TType.String_;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(Cep);
    oprot.WriteFieldEnd();
  end;
  if (__isset_CodigoIbgeMunicipio) then
  begin
    field_.Name := 'codigoIbgeMunicipio';
    field_.Type_  := TType.String_;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CodigoIbgeMunicipio);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Complemento) then
  begin
    field_.Name := 'complemento';
    field_.Type_  := TType.String_;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(Complemento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NomeLogradouro) then
  begin
    field_.Name := 'nomeLogradouro';
    field_.Type_  := TType.String_;
    field_.ID := 5;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(NomeLogradouro);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Numero) then
  begin
    field_.Name := 'numero';
    field_.Type_  := TType.String_;
    field_.ID := 6;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(Numero);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NumeroDneUf) then
  begin
    field_.Name := 'numeroDneUf';
    field_.Type_  := TType.String_;
    field_.ID := 7;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(NumeroDneUf);
    oprot.WriteFieldEnd();
  end;
  if (__isset_TelReferencial) then
  begin
    field_.Name := 'telReferencial';
    field_.Type_  := TType.String_;
    field_.ID := 8;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(TelReferencial);
    oprot.WriteFieldEnd();
  end;
  if (__isset_TelResidencial) then
  begin
    field_.Name := 'telResidencial';
    field_.Type_  := TType.String_;
    field_.ID := 9;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(TelResidencial);
    oprot.WriteFieldEnd();
  end;
  if (__isset_TipoLogradouroNumeroDne) then
  begin
    field_.Name := 'tipoLogradouroNumeroDne';
    field_.Type_  := TType.String_;
    field_.ID := 10;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(TipoLogradouroNumeroDne);
    oprot.WriteFieldEnd();
  end;
  if (__isset_StSemNumero) then
  begin
    field_.Name := 'stSemNumero';
    field_.Type_  := TType.Bool_;
    field_.ID := 11;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(StSemNumero);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TEnderecoLocalPermanenciaThriftImpl.ToString: string;
var
  _sb6 : TThriftStringBuilder;
  _first7 : Boolean;
begin
  _sb6 := TThriftStringBuilder.Create('(');
  try
    _first7 := TRUE;
    if (__isset_Bairro) then begin
      if not _first7 then _sb6.Append(',');
      _first7 := FALSE;
      _sb6.Append('Bairro: ');
      _sb6.Append(Bairro);
    end;
    if (__isset_Cep) then begin
      if not _first7 then _sb6.Append(',');
      _first7 := FALSE;
      _sb6.Append('Cep: ');
      _sb6.Append(Cep);
    end;
    if (__isset_CodigoIbgeMunicipio) then begin
      if not _first7 then _sb6.Append(',');
      _first7 := FALSE;
      _sb6.Append('CodigoIbgeMunicipio: ');
      _sb6.Append(CodigoIbgeMunicipio);
    end;
    if (__isset_Complemento) then begin
      if not _first7 then _sb6.Append(',');
      _first7 := FALSE;
      _sb6.Append('Complemento: ');
      _sb6.Append(Complemento);
    end;
    if (__isset_NomeLogradouro) then begin
      if not _first7 then _sb6.Append(',');
      _first7 := FALSE;
      _sb6.Append('NomeLogradouro: ');
      _sb6.Append(NomeLogradouro);
    end;
    if (__isset_Numero) then begin
      if not _first7 then _sb6.Append(',');
      _first7 := FALSE;
      _sb6.Append('Numero: ');
      _sb6.Append(Numero);
    end;
    if (__isset_NumeroDneUf) then begin
      if not _first7 then _sb6.Append(',');
      _first7 := FALSE;
      _sb6.Append('NumeroDneUf: ');
      _sb6.Append(NumeroDneUf);
    end;
    if (__isset_TelReferencial) then begin
      if not _first7 then _sb6.Append(',');
      _first7 := FALSE;
      _sb6.Append('TelReferencial: ');
      _sb6.Append(TelReferencial);
    end;
    if (__isset_TelResidencial) then begin
      if not _first7 then _sb6.Append(',');
      _first7 := FALSE;
      _sb6.Append('TelResidencial: ');
      _sb6.Append(TelResidencial);
    end;
    if (__isset_TipoLogradouroNumeroDne) then begin
      if not _first7 then _sb6.Append(',');
      _first7 := FALSE;
      _sb6.Append('TipoLogradouroNumeroDne: ');
      _sb6.Append(TipoLogradouroNumeroDne);
    end;
    if (__isset_StSemNumero) then begin
      if not _first7 then _sb6.Append(',');
      _first7 := FALSE;
      _sb6.Append('StSemNumero: ');
      _sb6.Append(StSemNumero);
    end;
    _sb6.Append(')');
    Result := _sb6.ToString;
    if _first7 then {prevent warning};
  finally
    _sb6.Free;
  end;
end;


initialization

finalization


end.

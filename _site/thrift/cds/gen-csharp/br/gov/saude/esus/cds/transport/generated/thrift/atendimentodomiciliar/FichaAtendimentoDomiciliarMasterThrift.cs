/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace br.gov.saude.esus.cds.transport.generated.thrift.atendimentodomiciliar
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class FichaAtendimentoDomiciliarMasterThrift : TBase
  {
    private int _tpCdsOrigem;
    private List<FichaAtendimentoDomiciliarChildThrift> _atendimentosDomiciliares;

    public string UuidFicha { get; set; }

    public int TpCdsOrigem
    {
      get
      {
        return _tpCdsOrigem;
      }
      set
      {
        __isset.tpCdsOrigem = true;
        this._tpCdsOrigem = value;
      }
    }

    public br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift HeaderTransport { get; set; }

    public List<FichaAtendimentoDomiciliarChildThrift> AtendimentosDomiciliares
    {
      get
      {
        return _atendimentosDomiciliares;
      }
      set
      {
        __isset.atendimentosDomiciliares = true;
        this._atendimentosDomiciliares = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool tpCdsOrigem;
      public bool atendimentosDomiciliares;
    }

    public FichaAtendimentoDomiciliarMasterThrift() {
    }

    public FichaAtendimentoDomiciliarMasterThrift(string uuidFicha, br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift headerTransport) : this() {
      this.UuidFicha = uuidFicha;
      this.HeaderTransport = headerTransport;
    }

    public void Read (TProtocol iprot)
    {
      bool isset_uuidFicha = false;
      bool isset_headerTransport = false;
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.String) {
              UuidFicha = iprot.ReadString();
              isset_uuidFicha = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              TpCdsOrigem = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.Struct) {
              HeaderTransport = new br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift();
              HeaderTransport.Read(iprot);
              isset_headerTransport = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.List) {
              {
                AtendimentosDomiciliares = new List<FichaAtendimentoDomiciliarChildThrift>();
                TList _list12 = iprot.ReadListBegin();
                for( int _i13 = 0; _i13 < _list12.Count; ++_i13)
                {
                  FichaAtendimentoDomiciliarChildThrift _elem14;
                  _elem14 = new FichaAtendimentoDomiciliarChildThrift();
                  _elem14.Read(iprot);
                  AtendimentosDomiciliares.Add(_elem14);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
      if (!isset_uuidFicha)
        throw new TProtocolException(TProtocolException.INVALID_DATA);
      if (!isset_headerTransport)
        throw new TProtocolException(TProtocolException.INVALID_DATA);
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("FichaAtendimentoDomiciliarMasterThrift");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      field.Name = "uuidFicha";
      field.Type = TType.String;
      field.ID = 1;
      oprot.WriteFieldBegin(field);
      oprot.WriteString(UuidFicha);
      oprot.WriteFieldEnd();
      if (__isset.tpCdsOrigem) {
        field.Name = "tpCdsOrigem";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(TpCdsOrigem);
        oprot.WriteFieldEnd();
      }
      field.Name = "headerTransport";
      field.Type = TType.Struct;
      field.ID = 3;
      oprot.WriteFieldBegin(field);
      HeaderTransport.Write(oprot);
      oprot.WriteFieldEnd();
      if (AtendimentosDomiciliares != null && __isset.atendimentosDomiciliares) {
        field.Name = "atendimentosDomiciliares";
        field.Type = TType.List;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, AtendimentosDomiciliares.Count));
          foreach (FichaAtendimentoDomiciliarChildThrift _iter15 in AtendimentosDomiciliares)
          {
            _iter15.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("FichaAtendimentoDomiciliarMasterThrift(");
      __sb.Append(", UuidFicha: ");
      __sb.Append(UuidFicha);
      if (__isset.tpCdsOrigem) {
        __sb.Append(", TpCdsOrigem: ");
        __sb.Append(TpCdsOrigem);
      }
      __sb.Append(", HeaderTransport: ");
      __sb.Append(HeaderTransport== null ? "<null>" : HeaderTransport.ToString());
      if (AtendimentosDomiciliares != null && __isset.atendimentosDomiciliares) {
        __sb.Append(", AtendimentosDomiciliares: ");
        __sb.Append(AtendimentosDomiciliares);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}

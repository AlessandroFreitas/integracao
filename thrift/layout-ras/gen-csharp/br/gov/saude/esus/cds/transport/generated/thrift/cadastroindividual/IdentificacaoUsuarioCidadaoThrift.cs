/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace br.gov.saude.esus.cds.transport.generated.thrift.cadastroindividual
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class IdentificacaoUsuarioCidadaoThrift : TBase
  {
    private string _nomeSocialCidadao;
    private string _codigoIbgeMunicipioNascimento;
    private long _dataNascimentoCidadao;
    private long _dataNascimentoResponsavel;
    private bool _desconheceNomeMae;
    private string _emailCidadao;
    private long _nacionalidadeCidadao;
    private string _nomeCidadao;
    private string _nomeMaeCidadao;
    private string _numeroCartaoSus;
    private string _numeroCartaoSusResponsavel;
    private string _numeroCelularCidadao;
    private string _numeroNisPisPasep;
    private long _paisNascimento;
    private long _racaCorCidadao;
    private long _sexoCidadao;
    private bool _statusEhResponsavel;

    public string NomeSocialCidadao
    {
      get
      {
        return _nomeSocialCidadao;
      }
      set
      {
        __isset.nomeSocialCidadao = true;
        this._nomeSocialCidadao = value;
      }
    }

    public string CodigoIbgeMunicipioNascimento
    {
      get
      {
        return _codigoIbgeMunicipioNascimento;
      }
      set
      {
        __isset.codigoIbgeMunicipioNascimento = true;
        this._codigoIbgeMunicipioNascimento = value;
      }
    }

    public long DataNascimentoCidadao
    {
      get
      {
        return _dataNascimentoCidadao;
      }
      set
      {
        __isset.dataNascimentoCidadao = true;
        this._dataNascimentoCidadao = value;
      }
    }

    public long DataNascimentoResponsavel
    {
      get
      {
        return _dataNascimentoResponsavel;
      }
      set
      {
        __isset.dataNascimentoResponsavel = true;
        this._dataNascimentoResponsavel = value;
      }
    }

    public bool DesconheceNomeMae
    {
      get
      {
        return _desconheceNomeMae;
      }
      set
      {
        __isset.desconheceNomeMae = true;
        this._desconheceNomeMae = value;
      }
    }

    public string EmailCidadao
    {
      get
      {
        return _emailCidadao;
      }
      set
      {
        __isset.emailCidadao = true;
        this._emailCidadao = value;
      }
    }

    public long NacionalidadeCidadao
    {
      get
      {
        return _nacionalidadeCidadao;
      }
      set
      {
        __isset.nacionalidadeCidadao = true;
        this._nacionalidadeCidadao = value;
      }
    }

    public string NomeCidadao
    {
      get
      {
        return _nomeCidadao;
      }
      set
      {
        __isset.nomeCidadao = true;
        this._nomeCidadao = value;
      }
    }

    public string NomeMaeCidadao
    {
      get
      {
        return _nomeMaeCidadao;
      }
      set
      {
        __isset.nomeMaeCidadao = true;
        this._nomeMaeCidadao = value;
      }
    }

    public string NumeroCartaoSus
    {
      get
      {
        return _numeroCartaoSus;
      }
      set
      {
        __isset.numeroCartaoSus = true;
        this._numeroCartaoSus = value;
      }
    }

    public string NumeroCartaoSusResponsavel
    {
      get
      {
        return _numeroCartaoSusResponsavel;
      }
      set
      {
        __isset.numeroCartaoSusResponsavel = true;
        this._numeroCartaoSusResponsavel = value;
      }
    }

    public string NumeroCelularCidadao
    {
      get
      {
        return _numeroCelularCidadao;
      }
      set
      {
        __isset.numeroCelularCidadao = true;
        this._numeroCelularCidadao = value;
      }
    }

    public string NumeroNisPisPasep
    {
      get
      {
        return _numeroNisPisPasep;
      }
      set
      {
        __isset.numeroNisPisPasep = true;
        this._numeroNisPisPasep = value;
      }
    }

    public long PaisNascimento
    {
      get
      {
        return _paisNascimento;
      }
      set
      {
        __isset.paisNascimento = true;
        this._paisNascimento = value;
      }
    }

    public long RacaCorCidadao
    {
      get
      {
        return _racaCorCidadao;
      }
      set
      {
        __isset.racaCorCidadao = true;
        this._racaCorCidadao = value;
      }
    }

    public long SexoCidadao
    {
      get
      {
        return _sexoCidadao;
      }
      set
      {
        __isset.sexoCidadao = true;
        this._sexoCidadao = value;
      }
    }

    public bool StatusEhResponsavel
    {
      get
      {
        return _statusEhResponsavel;
      }
      set
      {
        __isset.statusEhResponsavel = true;
        this._statusEhResponsavel = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool nomeSocialCidadao;
      public bool codigoIbgeMunicipioNascimento;
      public bool dataNascimentoCidadao;
      public bool dataNascimentoResponsavel;
      public bool desconheceNomeMae;
      public bool emailCidadao;
      public bool nacionalidadeCidadao;
      public bool nomeCidadao;
      public bool nomeMaeCidadao;
      public bool numeroCartaoSus;
      public bool numeroCartaoSusResponsavel;
      public bool numeroCelularCidadao;
      public bool numeroNisPisPasep;
      public bool paisNascimento;
      public bool racaCorCidadao;
      public bool sexoCidadao;
      public bool statusEhResponsavel;
    }

    public IdentificacaoUsuarioCidadaoThrift() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.String) {
              NomeSocialCidadao = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              CodigoIbgeMunicipioNascimento = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I64) {
              DataNascimentoCidadao = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I64) {
              DataNascimentoResponsavel = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.Bool) {
              DesconheceNomeMae = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.String) {
              EmailCidadao = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I64) {
              NacionalidadeCidadao = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.String) {
              NomeCidadao = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.String) {
              NomeMaeCidadao = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.String) {
              NumeroCartaoSus = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.String) {
              NumeroCartaoSusResponsavel = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.String) {
              NumeroCelularCidadao = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 13:
            if (field.Type == TType.String) {
              NumeroNisPisPasep = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 14:
            if (field.Type == TType.I64) {
              PaisNascimento = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 15:
            if (field.Type == TType.I64) {
              RacaCorCidadao = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 16:
            if (field.Type == TType.I64) {
              SexoCidadao = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 17:
            if (field.Type == TType.Bool) {
              StatusEhResponsavel = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("IdentificacaoUsuarioCidadaoThrift");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (NomeSocialCidadao != null && __isset.nomeSocialCidadao) {
        field.Name = "nomeSocialCidadao";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(NomeSocialCidadao);
        oprot.WriteFieldEnd();
      }
      if (CodigoIbgeMunicipioNascimento != null && __isset.codigoIbgeMunicipioNascimento) {
        field.Name = "codigoIbgeMunicipioNascimento";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(CodigoIbgeMunicipioNascimento);
        oprot.WriteFieldEnd();
      }
      if (__isset.dataNascimentoCidadao) {
        field.Name = "dataNascimentoCidadao";
        field.Type = TType.I64;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(DataNascimentoCidadao);
        oprot.WriteFieldEnd();
      }
      if (__isset.dataNascimentoResponsavel) {
        field.Name = "dataNascimentoResponsavel";
        field.Type = TType.I64;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(DataNascimentoResponsavel);
        oprot.WriteFieldEnd();
      }
      if (__isset.desconheceNomeMae) {
        field.Name = "desconheceNomeMae";
        field.Type = TType.Bool;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(DesconheceNomeMae);
        oprot.WriteFieldEnd();
      }
      if (EmailCidadao != null && __isset.emailCidadao) {
        field.Name = "emailCidadao";
        field.Type = TType.String;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(EmailCidadao);
        oprot.WriteFieldEnd();
      }
      if (__isset.nacionalidadeCidadao) {
        field.Name = "nacionalidadeCidadao";
        field.Type = TType.I64;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(NacionalidadeCidadao);
        oprot.WriteFieldEnd();
      }
      if (NomeCidadao != null && __isset.nomeCidadao) {
        field.Name = "nomeCidadao";
        field.Type = TType.String;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(NomeCidadao);
        oprot.WriteFieldEnd();
      }
      if (NomeMaeCidadao != null && __isset.nomeMaeCidadao) {
        field.Name = "nomeMaeCidadao";
        field.Type = TType.String;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(NomeMaeCidadao);
        oprot.WriteFieldEnd();
      }
      if (NumeroCartaoSus != null && __isset.numeroCartaoSus) {
        field.Name = "numeroCartaoSus";
        field.Type = TType.String;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(NumeroCartaoSus);
        oprot.WriteFieldEnd();
      }
      if (NumeroCartaoSusResponsavel != null && __isset.numeroCartaoSusResponsavel) {
        field.Name = "numeroCartaoSusResponsavel";
        field.Type = TType.String;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(NumeroCartaoSusResponsavel);
        oprot.WriteFieldEnd();
      }
      if (NumeroCelularCidadao != null && __isset.numeroCelularCidadao) {
        field.Name = "numeroCelularCidadao";
        field.Type = TType.String;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(NumeroCelularCidadao);
        oprot.WriteFieldEnd();
      }
      if (NumeroNisPisPasep != null && __isset.numeroNisPisPasep) {
        field.Name = "numeroNisPisPasep";
        field.Type = TType.String;
        field.ID = 13;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(NumeroNisPisPasep);
        oprot.WriteFieldEnd();
      }
      if (__isset.paisNascimento) {
        field.Name = "paisNascimento";
        field.Type = TType.I64;
        field.ID = 14;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(PaisNascimento);
        oprot.WriteFieldEnd();
      }
      if (__isset.racaCorCidadao) {
        field.Name = "racaCorCidadao";
        field.Type = TType.I64;
        field.ID = 15;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(RacaCorCidadao);
        oprot.WriteFieldEnd();
      }
      if (__isset.sexoCidadao) {
        field.Name = "sexoCidadao";
        field.Type = TType.I64;
        field.ID = 16;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(SexoCidadao);
        oprot.WriteFieldEnd();
      }
      if (__isset.statusEhResponsavel) {
        field.Name = "statusEhResponsavel";
        field.Type = TType.Bool;
        field.ID = 17;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(StatusEhResponsavel);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("IdentificacaoUsuarioCidadaoThrift(");
      bool __first = true;
      if (NomeSocialCidadao != null && __isset.nomeSocialCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("NomeSocialCidadao: ");
        __sb.Append(NomeSocialCidadao);
      }
      if (CodigoIbgeMunicipioNascimento != null && __isset.codigoIbgeMunicipioNascimento) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("CodigoIbgeMunicipioNascimento: ");
        __sb.Append(CodigoIbgeMunicipioNascimento);
      }
      if (__isset.dataNascimentoCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("DataNascimentoCidadao: ");
        __sb.Append(DataNascimentoCidadao);
      }
      if (__isset.dataNascimentoResponsavel) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("DataNascimentoResponsavel: ");
        __sb.Append(DataNascimentoResponsavel);
      }
      if (__isset.desconheceNomeMae) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("DesconheceNomeMae: ");
        __sb.Append(DesconheceNomeMae);
      }
      if (EmailCidadao != null && __isset.emailCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("EmailCidadao: ");
        __sb.Append(EmailCidadao);
      }
      if (__isset.nacionalidadeCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("NacionalidadeCidadao: ");
        __sb.Append(NacionalidadeCidadao);
      }
      if (NomeCidadao != null && __isset.nomeCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("NomeCidadao: ");
        __sb.Append(NomeCidadao);
      }
      if (NomeMaeCidadao != null && __isset.nomeMaeCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("NomeMaeCidadao: ");
        __sb.Append(NomeMaeCidadao);
      }
      if (NumeroCartaoSus != null && __isset.numeroCartaoSus) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("NumeroCartaoSus: ");
        __sb.Append(NumeroCartaoSus);
      }
      if (NumeroCartaoSusResponsavel != null && __isset.numeroCartaoSusResponsavel) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("NumeroCartaoSusResponsavel: ");
        __sb.Append(NumeroCartaoSusResponsavel);
      }
      if (NumeroCelularCidadao != null && __isset.numeroCelularCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("NumeroCelularCidadao: ");
        __sb.Append(NumeroCelularCidadao);
      }
      if (NumeroNisPisPasep != null && __isset.numeroNisPisPasep) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("NumeroNisPisPasep: ");
        __sb.Append(NumeroNisPisPasep);
      }
      if (__isset.paisNascimento) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("PaisNascimento: ");
        __sb.Append(PaisNascimento);
      }
      if (__isset.racaCorCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RacaCorCidadao: ");
        __sb.Append(RacaCorCidadao);
      }
      if (__isset.sexoCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("SexoCidadao: ");
        __sb.Append(SexoCidadao);
      }
      if (__isset.statusEhResponsavel) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StatusEhResponsavel: ");
        __sb.Append(StatusEhResponsavel);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}

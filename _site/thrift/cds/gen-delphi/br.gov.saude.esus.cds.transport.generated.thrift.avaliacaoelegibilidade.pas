(**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *)

unit br.gov.saude.esus.cds.transport.generated.thrift.avaliacaoelegibilidade;

interface

uses
  Classes,
  SysUtils,
  Generics.Collections,
  Thrift,
  Thrift.Utils,
  Thrift.Collections,
  Thrift.Protocol,
  Thrift.Transport,
  br.gov.saude.esus.cds.transport.generated.thrift.common;

const
  cbr_gov_saude_esus_cds_transport_generated_thrift_avaliacaoelegibilidade_Option_AnsiStr_Binary = False;
  cbr_gov_saude_esus_cds_transport_generated_thrift_avaliacaoelegibilidade_Option_Register_Types = False;
  cbr_gov_saude_esus_cds_transport_generated_thrift_avaliacaoelegibilidade_Option_ConstPrefix    = False;
  cbr_gov_saude_esus_cds_transport_generated_thrift_avaliacaoelegibilidade_Option_Events         = False;
  cbr_gov_saude_esus_cds_transport_generated_thrift_avaliacaoelegibilidade_Option_XmlDoc         = False;

type
  IFichaAvaliacaoElegibilidadeThrift = interface;

  IFichaAvaliacaoElegibilidadeThrift = interface(IBase)
    function GetUuidFicha: string;
    procedure SetUuidFicha( const Value: string);
    function GetTpCdsOrigem: Integer;
    procedure SetTpCdsOrigem( const Value: Integer);
    function GetHeaderTransport: IUnicaLotacaoHeaderThrift;
    procedure SetHeaderTransport( const Value: IUnicaLotacaoHeaderThrift);
    function GetNumeroCartaoSus: string;
    procedure SetNumeroCartaoSus( const Value: string);
    function GetNomeCidadao: string;
    procedure SetNomeCidadao( const Value: string);
    function GetNomeSocialCidadao: string;
    procedure SetNomeSocialCidadao( const Value: string);
    function GetDataNascimentoCidadao: Int64;
    procedure SetDataNascimentoCidadao( const Value: Int64);
    function GetSexoCidadao: Int64;
    procedure SetSexoCidadao( const Value: Int64);
    function GetRacaCorCidadao: Int64;
    procedure SetRacaCorCidadao( const Value: Int64);
    function GetNomeMaeCidadao: string;
    procedure SetNomeMaeCidadao( const Value: string);
    function GetDesconheceNomeMae: Boolean;
    procedure SetDesconheceNomeMae( const Value: Boolean);
    function GetCodigoIbgeMunicipioNascimento: string;
    procedure SetCodigoIbgeMunicipioNascimento( const Value: string);
    function GetCodigoNacionalidade: Int64;
    procedure SetCodigoNacionalidade( const Value: Int64);
    function GetEmailCidadao: string;
    procedure SetEmailCidadao( const Value: string);
    function GetNumeroNisPisPasep: string;
    procedure SetNumeroNisPisPasep( const Value: string);
    function GetEndereco: IEnderecoLocalPermanenciaThrift;
    procedure SetEndereco( const Value: IEnderecoLocalPermanenciaThrift);
    function GetAtencaoDomiciliarOrigem: Int64;
    procedure SetAtencaoDomiciliarOrigem( const Value: Int64);
    function GetAtencaoDomiciliarModalidade: Int64;
    procedure SetAtencaoDomiciliarModalidade( const Value: Int64);
    function GetSituacoesPresentes: IThriftList<Int64>;
    procedure SetSituacoesPresentes( const Value: IThriftList<Int64>);
    function GetCid10Principal: string;
    procedure SetCid10Principal( const Value: string);
    function GetCid10Segundo: string;
    procedure SetCid10Segundo( const Value: string);
    function GetCid10Terceiro: string;
    procedure SetCid10Terceiro( const Value: string);
    function GetConclusaoDestinoElegivel: Int64;
    procedure SetConclusaoDestinoElegivel( const Value: Int64);
    function GetConclusaoDestinoInelegivel: IThriftList<Int64>;
    procedure SetConclusaoDestinoInelegivel( const Value: IThriftList<Int64>);
    function GetCuidadorCidadao: Int64;
    procedure SetCuidadorCidadao( const Value: Int64);

    property UuidFicha: string read GetUuidFicha write SetUuidFicha;
    property TpCdsOrigem: Integer read GetTpCdsOrigem write SetTpCdsOrigem;
    property HeaderTransport: IUnicaLotacaoHeaderThrift read GetHeaderTransport write SetHeaderTransport;
    property NumeroCartaoSus: string read GetNumeroCartaoSus write SetNumeroCartaoSus;
    property NomeCidadao: string read GetNomeCidadao write SetNomeCidadao;
    property NomeSocialCidadao: string read GetNomeSocialCidadao write SetNomeSocialCidadao;
    property DataNascimentoCidadao: Int64 read GetDataNascimentoCidadao write SetDataNascimentoCidadao;
    property SexoCidadao: Int64 read GetSexoCidadao write SetSexoCidadao;
    property RacaCorCidadao: Int64 read GetRacaCorCidadao write SetRacaCorCidadao;
    property NomeMaeCidadao: string read GetNomeMaeCidadao write SetNomeMaeCidadao;
    property DesconheceNomeMae: Boolean read GetDesconheceNomeMae write SetDesconheceNomeMae;
    property CodigoIbgeMunicipioNascimento: string read GetCodigoIbgeMunicipioNascimento write SetCodigoIbgeMunicipioNascimento;
    property CodigoNacionalidade: Int64 read GetCodigoNacionalidade write SetCodigoNacionalidade;
    property EmailCidadao: string read GetEmailCidadao write SetEmailCidadao;
    property NumeroNisPisPasep: string read GetNumeroNisPisPasep write SetNumeroNisPisPasep;
    property Endereco: IEnderecoLocalPermanenciaThrift read GetEndereco write SetEndereco;
    property AtencaoDomiciliarOrigem: Int64 read GetAtencaoDomiciliarOrigem write SetAtencaoDomiciliarOrigem;
    property AtencaoDomiciliarModalidade: Int64 read GetAtencaoDomiciliarModalidade write SetAtencaoDomiciliarModalidade;
    property SituacoesPresentes: IThriftList<Int64> read GetSituacoesPresentes write SetSituacoesPresentes;
    property Cid10Principal: string read GetCid10Principal write SetCid10Principal;
    property Cid10Segundo: string read GetCid10Segundo write SetCid10Segundo;
    property Cid10Terceiro: string read GetCid10Terceiro write SetCid10Terceiro;
    property ConclusaoDestinoElegivel: Int64 read GetConclusaoDestinoElegivel write SetConclusaoDestinoElegivel;
    property ConclusaoDestinoInelegivel: IThriftList<Int64> read GetConclusaoDestinoInelegivel write SetConclusaoDestinoInelegivel;
    property CuidadorCidadao: Int64 read GetCuidadorCidadao write SetCuidadorCidadao;

    function Get__isset_TpCdsOrigem: Boolean;
    function Get__isset_NumeroCartaoSus: Boolean;
    function Get__isset_NomeCidadao: Boolean;
    function Get__isset_NomeSocialCidadao: Boolean;
    function Get__isset_DataNascimentoCidadao: Boolean;
    function Get__isset_SexoCidadao: Boolean;
    function Get__isset_RacaCorCidadao: Boolean;
    function Get__isset_NomeMaeCidadao: Boolean;
    function Get__isset_DesconheceNomeMae: Boolean;
    function Get__isset_CodigoIbgeMunicipioNascimento: Boolean;
    function Get__isset_CodigoNacionalidade: Boolean;
    function Get__isset_EmailCidadao: Boolean;
    function Get__isset_NumeroNisPisPasep: Boolean;
    function Get__isset_Endereco: Boolean;
    function Get__isset_AtencaoDomiciliarOrigem: Boolean;
    function Get__isset_AtencaoDomiciliarModalidade: Boolean;
    function Get__isset_SituacoesPresentes: Boolean;
    function Get__isset_Cid10Principal: Boolean;
    function Get__isset_Cid10Segundo: Boolean;
    function Get__isset_Cid10Terceiro: Boolean;
    function Get__isset_ConclusaoDestinoElegivel: Boolean;
    function Get__isset_ConclusaoDestinoInelegivel: Boolean;
    function Get__isset_CuidadorCidadao: Boolean;

    property __isset_TpCdsOrigem: Boolean read Get__isset_TpCdsOrigem;
    property __isset_NumeroCartaoSus: Boolean read Get__isset_NumeroCartaoSus;
    property __isset_NomeCidadao: Boolean read Get__isset_NomeCidadao;
    property __isset_NomeSocialCidadao: Boolean read Get__isset_NomeSocialCidadao;
    property __isset_DataNascimentoCidadao: Boolean read Get__isset_DataNascimentoCidadao;
    property __isset_SexoCidadao: Boolean read Get__isset_SexoCidadao;
    property __isset_RacaCorCidadao: Boolean read Get__isset_RacaCorCidadao;
    property __isset_NomeMaeCidadao: Boolean read Get__isset_NomeMaeCidadao;
    property __isset_DesconheceNomeMae: Boolean read Get__isset_DesconheceNomeMae;
    property __isset_CodigoIbgeMunicipioNascimento: Boolean read Get__isset_CodigoIbgeMunicipioNascimento;
    property __isset_CodigoNacionalidade: Boolean read Get__isset_CodigoNacionalidade;
    property __isset_EmailCidadao: Boolean read Get__isset_EmailCidadao;
    property __isset_NumeroNisPisPasep: Boolean read Get__isset_NumeroNisPisPasep;
    property __isset_Endereco: Boolean read Get__isset_Endereco;
    property __isset_AtencaoDomiciliarOrigem: Boolean read Get__isset_AtencaoDomiciliarOrigem;
    property __isset_AtencaoDomiciliarModalidade: Boolean read Get__isset_AtencaoDomiciliarModalidade;
    property __isset_SituacoesPresentes: Boolean read Get__isset_SituacoesPresentes;
    property __isset_Cid10Principal: Boolean read Get__isset_Cid10Principal;
    property __isset_Cid10Segundo: Boolean read Get__isset_Cid10Segundo;
    property __isset_Cid10Terceiro: Boolean read Get__isset_Cid10Terceiro;
    property __isset_ConclusaoDestinoElegivel: Boolean read Get__isset_ConclusaoDestinoElegivel;
    property __isset_ConclusaoDestinoInelegivel: Boolean read Get__isset_ConclusaoDestinoInelegivel;
    property __isset_CuidadorCidadao: Boolean read Get__isset_CuidadorCidadao;
  end;

  TFichaAvaliacaoElegibilidadeThriftImpl = class(TInterfacedObject, IBase, IFichaAvaliacaoElegibilidadeThrift)
  private
    FUuidFicha: string;
    FTpCdsOrigem: Integer;
    FHeaderTransport: IUnicaLotacaoHeaderThrift;
    FNumeroCartaoSus: string;
    FNomeCidadao: string;
    FNomeSocialCidadao: string;
    FDataNascimentoCidadao: Int64;
    FSexoCidadao: Int64;
    FRacaCorCidadao: Int64;
    FNomeMaeCidadao: string;
    FDesconheceNomeMae: Boolean;
    FCodigoIbgeMunicipioNascimento: string;
    FCodigoNacionalidade: Int64;
    FEmailCidadao: string;
    FNumeroNisPisPasep: string;
    FEndereco: IEnderecoLocalPermanenciaThrift;
    FAtencaoDomiciliarOrigem: Int64;
    FAtencaoDomiciliarModalidade: Int64;
    FSituacoesPresentes: IThriftList<Int64>;
    FCid10Principal: string;
    FCid10Segundo: string;
    FCid10Terceiro: string;
    FConclusaoDestinoElegivel: Int64;
    FConclusaoDestinoInelegivel: IThriftList<Int64>;
    FCuidadorCidadao: Int64;
    
    F__isset_TpCdsOrigem: Boolean;
    F__isset_NumeroCartaoSus: Boolean;
    F__isset_NomeCidadao: Boolean;
    F__isset_NomeSocialCidadao: Boolean;
    F__isset_DataNascimentoCidadao: Boolean;
    F__isset_SexoCidadao: Boolean;
    F__isset_RacaCorCidadao: Boolean;
    F__isset_NomeMaeCidadao: Boolean;
    F__isset_DesconheceNomeMae: Boolean;
    F__isset_CodigoIbgeMunicipioNascimento: Boolean;
    F__isset_CodigoNacionalidade: Boolean;
    F__isset_EmailCidadao: Boolean;
    F__isset_NumeroNisPisPasep: Boolean;
    F__isset_Endereco: Boolean;
    F__isset_AtencaoDomiciliarOrigem: Boolean;
    F__isset_AtencaoDomiciliarModalidade: Boolean;
    F__isset_SituacoesPresentes: Boolean;
    F__isset_Cid10Principal: Boolean;
    F__isset_Cid10Segundo: Boolean;
    F__isset_Cid10Terceiro: Boolean;
    F__isset_ConclusaoDestinoElegivel: Boolean;
    F__isset_ConclusaoDestinoInelegivel: Boolean;
    F__isset_CuidadorCidadao: Boolean;
    
    function GetUuidFicha: string;
    procedure SetUuidFicha( const Value: string);
    function GetTpCdsOrigem: Integer;
    procedure SetTpCdsOrigem( const Value: Integer);
    function GetHeaderTransport: IUnicaLotacaoHeaderThrift;
    procedure SetHeaderTransport( const Value: IUnicaLotacaoHeaderThrift);
    function GetNumeroCartaoSus: string;
    procedure SetNumeroCartaoSus( const Value: string);
    function GetNomeCidadao: string;
    procedure SetNomeCidadao( const Value: string);
    function GetNomeSocialCidadao: string;
    procedure SetNomeSocialCidadao( const Value: string);
    function GetDataNascimentoCidadao: Int64;
    procedure SetDataNascimentoCidadao( const Value: Int64);
    function GetSexoCidadao: Int64;
    procedure SetSexoCidadao( const Value: Int64);
    function GetRacaCorCidadao: Int64;
    procedure SetRacaCorCidadao( const Value: Int64);
    function GetNomeMaeCidadao: string;
    procedure SetNomeMaeCidadao( const Value: string);
    function GetDesconheceNomeMae: Boolean;
    procedure SetDesconheceNomeMae( const Value: Boolean);
    function GetCodigoIbgeMunicipioNascimento: string;
    procedure SetCodigoIbgeMunicipioNascimento( const Value: string);
    function GetCodigoNacionalidade: Int64;
    procedure SetCodigoNacionalidade( const Value: Int64);
    function GetEmailCidadao: string;
    procedure SetEmailCidadao( const Value: string);
    function GetNumeroNisPisPasep: string;
    procedure SetNumeroNisPisPasep( const Value: string);
    function GetEndereco: IEnderecoLocalPermanenciaThrift;
    procedure SetEndereco( const Value: IEnderecoLocalPermanenciaThrift);
    function GetAtencaoDomiciliarOrigem: Int64;
    procedure SetAtencaoDomiciliarOrigem( const Value: Int64);
    function GetAtencaoDomiciliarModalidade: Int64;
    procedure SetAtencaoDomiciliarModalidade( const Value: Int64);
    function GetSituacoesPresentes: IThriftList<Int64>;
    procedure SetSituacoesPresentes( const Value: IThriftList<Int64>);
    function GetCid10Principal: string;
    procedure SetCid10Principal( const Value: string);
    function GetCid10Segundo: string;
    procedure SetCid10Segundo( const Value: string);
    function GetCid10Terceiro: string;
    procedure SetCid10Terceiro( const Value: string);
    function GetConclusaoDestinoElegivel: Int64;
    procedure SetConclusaoDestinoElegivel( const Value: Int64);
    function GetConclusaoDestinoInelegivel: IThriftList<Int64>;
    procedure SetConclusaoDestinoInelegivel( const Value: IThriftList<Int64>);
    function GetCuidadorCidadao: Int64;
    procedure SetCuidadorCidadao( const Value: Int64);

    function Get__isset_TpCdsOrigem: Boolean;
    function Get__isset_NumeroCartaoSus: Boolean;
    function Get__isset_NomeCidadao: Boolean;
    function Get__isset_NomeSocialCidadao: Boolean;
    function Get__isset_DataNascimentoCidadao: Boolean;
    function Get__isset_SexoCidadao: Boolean;
    function Get__isset_RacaCorCidadao: Boolean;
    function Get__isset_NomeMaeCidadao: Boolean;
    function Get__isset_DesconheceNomeMae: Boolean;
    function Get__isset_CodigoIbgeMunicipioNascimento: Boolean;
    function Get__isset_CodigoNacionalidade: Boolean;
    function Get__isset_EmailCidadao: Boolean;
    function Get__isset_NumeroNisPisPasep: Boolean;
    function Get__isset_Endereco: Boolean;
    function Get__isset_AtencaoDomiciliarOrigem: Boolean;
    function Get__isset_AtencaoDomiciliarModalidade: Boolean;
    function Get__isset_SituacoesPresentes: Boolean;
    function Get__isset_Cid10Principal: Boolean;
    function Get__isset_Cid10Segundo: Boolean;
    function Get__isset_Cid10Terceiro: Boolean;
    function Get__isset_ConclusaoDestinoElegivel: Boolean;
    function Get__isset_ConclusaoDestinoInelegivel: Boolean;
    function Get__isset_CuidadorCidadao: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property UuidFicha: string read GetUuidFicha write SetUuidFicha;
    property TpCdsOrigem: Integer read GetTpCdsOrigem write SetTpCdsOrigem;
    property HeaderTransport: IUnicaLotacaoHeaderThrift read GetHeaderTransport write SetHeaderTransport;
    property NumeroCartaoSus: string read GetNumeroCartaoSus write SetNumeroCartaoSus;
    property NomeCidadao: string read GetNomeCidadao write SetNomeCidadao;
    property NomeSocialCidadao: string read GetNomeSocialCidadao write SetNomeSocialCidadao;
    property DataNascimentoCidadao: Int64 read GetDataNascimentoCidadao write SetDataNascimentoCidadao;
    property SexoCidadao: Int64 read GetSexoCidadao write SetSexoCidadao;
    property RacaCorCidadao: Int64 read GetRacaCorCidadao write SetRacaCorCidadao;
    property NomeMaeCidadao: string read GetNomeMaeCidadao write SetNomeMaeCidadao;
    property DesconheceNomeMae: Boolean read GetDesconheceNomeMae write SetDesconheceNomeMae;
    property CodigoIbgeMunicipioNascimento: string read GetCodigoIbgeMunicipioNascimento write SetCodigoIbgeMunicipioNascimento;
    property CodigoNacionalidade: Int64 read GetCodigoNacionalidade write SetCodigoNacionalidade;
    property EmailCidadao: string read GetEmailCidadao write SetEmailCidadao;
    property NumeroNisPisPasep: string read GetNumeroNisPisPasep write SetNumeroNisPisPasep;
    property Endereco: IEnderecoLocalPermanenciaThrift read GetEndereco write SetEndereco;
    property AtencaoDomiciliarOrigem: Int64 read GetAtencaoDomiciliarOrigem write SetAtencaoDomiciliarOrigem;
    property AtencaoDomiciliarModalidade: Int64 read GetAtencaoDomiciliarModalidade write SetAtencaoDomiciliarModalidade;
    property SituacoesPresentes: IThriftList<Int64> read GetSituacoesPresentes write SetSituacoesPresentes;
    property Cid10Principal: string read GetCid10Principal write SetCid10Principal;
    property Cid10Segundo: string read GetCid10Segundo write SetCid10Segundo;
    property Cid10Terceiro: string read GetCid10Terceiro write SetCid10Terceiro;
    property ConclusaoDestinoElegivel: Int64 read GetConclusaoDestinoElegivel write SetConclusaoDestinoElegivel;
    property ConclusaoDestinoInelegivel: IThriftList<Int64> read GetConclusaoDestinoInelegivel write SetConclusaoDestinoInelegivel;
    property CuidadorCidadao: Int64 read GetCuidadorCidadao write SetCuidadorCidadao;

    // isset
    property __isset_TpCdsOrigem: Boolean read Get__isset_TpCdsOrigem;
    property __isset_NumeroCartaoSus: Boolean read Get__isset_NumeroCartaoSus;
    property __isset_NomeCidadao: Boolean read Get__isset_NomeCidadao;
    property __isset_NomeSocialCidadao: Boolean read Get__isset_NomeSocialCidadao;
    property __isset_DataNascimentoCidadao: Boolean read Get__isset_DataNascimentoCidadao;
    property __isset_SexoCidadao: Boolean read Get__isset_SexoCidadao;
    property __isset_RacaCorCidadao: Boolean read Get__isset_RacaCorCidadao;
    property __isset_NomeMaeCidadao: Boolean read Get__isset_NomeMaeCidadao;
    property __isset_DesconheceNomeMae: Boolean read Get__isset_DesconheceNomeMae;
    property __isset_CodigoIbgeMunicipioNascimento: Boolean read Get__isset_CodigoIbgeMunicipioNascimento;
    property __isset_CodigoNacionalidade: Boolean read Get__isset_CodigoNacionalidade;
    property __isset_EmailCidadao: Boolean read Get__isset_EmailCidadao;
    property __isset_NumeroNisPisPasep: Boolean read Get__isset_NumeroNisPisPasep;
    property __isset_Endereco: Boolean read Get__isset_Endereco;
    property __isset_AtencaoDomiciliarOrigem: Boolean read Get__isset_AtencaoDomiciliarOrigem;
    property __isset_AtencaoDomiciliarModalidade: Boolean read Get__isset_AtencaoDomiciliarModalidade;
    property __isset_SituacoesPresentes: Boolean read Get__isset_SituacoesPresentes;
    property __isset_Cid10Principal: Boolean read Get__isset_Cid10Principal;
    property __isset_Cid10Segundo: Boolean read Get__isset_Cid10Segundo;
    property __isset_Cid10Terceiro: Boolean read Get__isset_Cid10Terceiro;
    property __isset_ConclusaoDestinoElegivel: Boolean read Get__isset_ConclusaoDestinoElegivel;
    property __isset_ConclusaoDestinoInelegivel: Boolean read Get__isset_ConclusaoDestinoInelegivel;
    property __isset_CuidadorCidadao: Boolean read Get__isset_CuidadorCidadao;
  end;

implementation

constructor TFichaAvaliacaoElegibilidadeThriftImpl.Create;
begin
  inherited;
end;

destructor TFichaAvaliacaoElegibilidadeThriftImpl.Destroy;
begin
  inherited;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetUuidFicha: string;
begin
  Result := FUuidFicha;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetUuidFicha( const Value: string);
begin
  FUuidFicha := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetTpCdsOrigem: Integer;
begin
  Result := FTpCdsOrigem;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetTpCdsOrigem( const Value: Integer);
begin
  F__isset_TpCdsOrigem := True;
  FTpCdsOrigem := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.Get__isset_TpCdsOrigem: Boolean;
begin
  Result := F__isset_TpCdsOrigem;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetHeaderTransport: IUnicaLotacaoHeaderThrift;
begin
  Result := FHeaderTransport;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetHeaderTransport( const Value: IUnicaLotacaoHeaderThrift);
begin
  FHeaderTransport := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetNumeroCartaoSus: string;
begin
  Result := FNumeroCartaoSus;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetNumeroCartaoSus( const Value: string);
begin
  F__isset_NumeroCartaoSus := True;
  FNumeroCartaoSus := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.Get__isset_NumeroCartaoSus: Boolean;
begin
  Result := F__isset_NumeroCartaoSus;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetNomeCidadao: string;
begin
  Result := FNomeCidadao;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetNomeCidadao( const Value: string);
begin
  F__isset_NomeCidadao := True;
  FNomeCidadao := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.Get__isset_NomeCidadao: Boolean;
begin
  Result := F__isset_NomeCidadao;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetNomeSocialCidadao: string;
begin
  Result := FNomeSocialCidadao;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetNomeSocialCidadao( const Value: string);
begin
  F__isset_NomeSocialCidadao := True;
  FNomeSocialCidadao := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.Get__isset_NomeSocialCidadao: Boolean;
begin
  Result := F__isset_NomeSocialCidadao;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetDataNascimentoCidadao: Int64;
begin
  Result := FDataNascimentoCidadao;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetDataNascimentoCidadao( const Value: Int64);
begin
  F__isset_DataNascimentoCidadao := True;
  FDataNascimentoCidadao := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.Get__isset_DataNascimentoCidadao: Boolean;
begin
  Result := F__isset_DataNascimentoCidadao;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetSexoCidadao: Int64;
begin
  Result := FSexoCidadao;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetSexoCidadao( const Value: Int64);
begin
  F__isset_SexoCidadao := True;
  FSexoCidadao := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.Get__isset_SexoCidadao: Boolean;
begin
  Result := F__isset_SexoCidadao;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetRacaCorCidadao: Int64;
begin
  Result := FRacaCorCidadao;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetRacaCorCidadao( const Value: Int64);
begin
  F__isset_RacaCorCidadao := True;
  FRacaCorCidadao := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.Get__isset_RacaCorCidadao: Boolean;
begin
  Result := F__isset_RacaCorCidadao;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetNomeMaeCidadao: string;
begin
  Result := FNomeMaeCidadao;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetNomeMaeCidadao( const Value: string);
begin
  F__isset_NomeMaeCidadao := True;
  FNomeMaeCidadao := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.Get__isset_NomeMaeCidadao: Boolean;
begin
  Result := F__isset_NomeMaeCidadao;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetDesconheceNomeMae: Boolean;
begin
  Result := FDesconheceNomeMae;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetDesconheceNomeMae( const Value: Boolean);
begin
  F__isset_DesconheceNomeMae := True;
  FDesconheceNomeMae := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.Get__isset_DesconheceNomeMae: Boolean;
begin
  Result := F__isset_DesconheceNomeMae;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetCodigoIbgeMunicipioNascimento: string;
begin
  Result := FCodigoIbgeMunicipioNascimento;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetCodigoIbgeMunicipioNascimento( const Value: string);
begin
  F__isset_CodigoIbgeMunicipioNascimento := True;
  FCodigoIbgeMunicipioNascimento := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.Get__isset_CodigoIbgeMunicipioNascimento: Boolean;
begin
  Result := F__isset_CodigoIbgeMunicipioNascimento;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetCodigoNacionalidade: Int64;
begin
  Result := FCodigoNacionalidade;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetCodigoNacionalidade( const Value: Int64);
begin
  F__isset_CodigoNacionalidade := True;
  FCodigoNacionalidade := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.Get__isset_CodigoNacionalidade: Boolean;
begin
  Result := F__isset_CodigoNacionalidade;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetEmailCidadao: string;
begin
  Result := FEmailCidadao;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetEmailCidadao( const Value: string);
begin
  F__isset_EmailCidadao := True;
  FEmailCidadao := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.Get__isset_EmailCidadao: Boolean;
begin
  Result := F__isset_EmailCidadao;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetNumeroNisPisPasep: string;
begin
  Result := FNumeroNisPisPasep;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetNumeroNisPisPasep( const Value: string);
begin
  F__isset_NumeroNisPisPasep := True;
  FNumeroNisPisPasep := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.Get__isset_NumeroNisPisPasep: Boolean;
begin
  Result := F__isset_NumeroNisPisPasep;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetEndereco: IEnderecoLocalPermanenciaThrift;
begin
  Result := FEndereco;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetEndereco( const Value: IEnderecoLocalPermanenciaThrift);
begin
  F__isset_Endereco := True;
  FEndereco := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.Get__isset_Endereco: Boolean;
begin
  Result := F__isset_Endereco;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetAtencaoDomiciliarOrigem: Int64;
begin
  Result := FAtencaoDomiciliarOrigem;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetAtencaoDomiciliarOrigem( const Value: Int64);
begin
  F__isset_AtencaoDomiciliarOrigem := True;
  FAtencaoDomiciliarOrigem := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.Get__isset_AtencaoDomiciliarOrigem: Boolean;
begin
  Result := F__isset_AtencaoDomiciliarOrigem;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetAtencaoDomiciliarModalidade: Int64;
begin
  Result := FAtencaoDomiciliarModalidade;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetAtencaoDomiciliarModalidade( const Value: Int64);
begin
  F__isset_AtencaoDomiciliarModalidade := True;
  FAtencaoDomiciliarModalidade := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.Get__isset_AtencaoDomiciliarModalidade: Boolean;
begin
  Result := F__isset_AtencaoDomiciliarModalidade;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetSituacoesPresentes: IThriftList<Int64>;
begin
  Result := FSituacoesPresentes;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetSituacoesPresentes( const Value: IThriftList<Int64>);
begin
  F__isset_SituacoesPresentes := True;
  FSituacoesPresentes := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.Get__isset_SituacoesPresentes: Boolean;
begin
  Result := F__isset_SituacoesPresentes;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetCid10Principal: string;
begin
  Result := FCid10Principal;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetCid10Principal( const Value: string);
begin
  F__isset_Cid10Principal := True;
  FCid10Principal := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.Get__isset_Cid10Principal: Boolean;
begin
  Result := F__isset_Cid10Principal;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetCid10Segundo: string;
begin
  Result := FCid10Segundo;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetCid10Segundo( const Value: string);
begin
  F__isset_Cid10Segundo := True;
  FCid10Segundo := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.Get__isset_Cid10Segundo: Boolean;
begin
  Result := F__isset_Cid10Segundo;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetCid10Terceiro: string;
begin
  Result := FCid10Terceiro;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetCid10Terceiro( const Value: string);
begin
  F__isset_Cid10Terceiro := True;
  FCid10Terceiro := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.Get__isset_Cid10Terceiro: Boolean;
begin
  Result := F__isset_Cid10Terceiro;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetConclusaoDestinoElegivel: Int64;
begin
  Result := FConclusaoDestinoElegivel;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetConclusaoDestinoElegivel( const Value: Int64);
begin
  F__isset_ConclusaoDestinoElegivel := True;
  FConclusaoDestinoElegivel := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.Get__isset_ConclusaoDestinoElegivel: Boolean;
begin
  Result := F__isset_ConclusaoDestinoElegivel;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetConclusaoDestinoInelegivel: IThriftList<Int64>;
begin
  Result := FConclusaoDestinoInelegivel;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetConclusaoDestinoInelegivel( const Value: IThriftList<Int64>);
begin
  F__isset_ConclusaoDestinoInelegivel := True;
  FConclusaoDestinoInelegivel := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.Get__isset_ConclusaoDestinoInelegivel: Boolean;
begin
  Result := F__isset_ConclusaoDestinoInelegivel;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.GetCuidadorCidadao: Int64;
begin
  Result := FCuidadorCidadao;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.SetCuidadorCidadao( const Value: Int64);
begin
  F__isset_CuidadorCidadao := True;
  FCuidadorCidadao := Value;
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.Get__isset_CuidadorCidadao: Boolean;
begin
  Result := F__isset_CuidadorCidadao;
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;
  _req_isset_UuidFicha : Boolean;
  _req_isset_HeaderTransport : Boolean;
  _list0: IList;
  _i1: Integer;
  _elem2: Int64;
  _list3: IList;
  _i4: Integer;
  _elem5: Int64;

begin
  _req_isset_UuidFicha := FALSE;
  _req_isset_HeaderTransport := FALSE;
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.String_) then
          begin
            UuidFicha := iprot.ReadString();
            _req_isset_UuidFicha := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.I32) then
          begin
            TpCdsOrigem := iprot.ReadI32();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.Struct) then
          begin
            HeaderTransport := TUnicaLotacaoHeaderThriftImpl.Create;
            HeaderTransport.Read(iprot);
            _req_isset_HeaderTransport := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.String_) then
          begin
            NumeroCartaoSus := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        5: begin
          if (field_.Type_ = TType.String_) then
          begin
            NomeCidadao := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        6: begin
          if (field_.Type_ = TType.String_) then
          begin
            NomeSocialCidadao := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        7: begin
          if (field_.Type_ = TType.I64) then
          begin
            DataNascimentoCidadao := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        8: begin
          if (field_.Type_ = TType.I64) then
          begin
            SexoCidadao := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        9: begin
          if (field_.Type_ = TType.I64) then
          begin
            RacaCorCidadao := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        10: begin
          if (field_.Type_ = TType.String_) then
          begin
            NomeMaeCidadao := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        11: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            DesconheceNomeMae := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        12: begin
          if (field_.Type_ = TType.String_) then
          begin
            CodigoIbgeMunicipioNascimento := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        13: begin
          if (field_.Type_ = TType.I64) then
          begin
            CodigoNacionalidade := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        14: begin
          if (field_.Type_ = TType.String_) then
          begin
            EmailCidadao := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        15: begin
          if (field_.Type_ = TType.String_) then
          begin
            NumeroNisPisPasep := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        16: begin
          if (field_.Type_ = TType.Struct) then
          begin
            Endereco := TEnderecoLocalPermanenciaThriftImpl.Create;
            Endereco.Read(iprot);
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        17: begin
          if (field_.Type_ = TType.I64) then
          begin
            AtencaoDomiciliarOrigem := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        18: begin
          if (field_.Type_ = TType.I64) then
          begin
            AtencaoDomiciliarModalidade := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        19: begin
          if (field_.Type_ = TType.List) then
          begin
            SituacoesPresentes := TThriftListImpl<Int64>.Create;
            _list0 := iprot.ReadListBegin();
            for _i1 := 0 to _list0.Count - 1 do
            begin
              _elem2 := iprot.ReadI64();
              SituacoesPresentes.Add(_elem2);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        20: begin
          if (field_.Type_ = TType.String_) then
          begin
            Cid10Principal := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        21: begin
          if (field_.Type_ = TType.String_) then
          begin
            Cid10Segundo := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        22: begin
          if (field_.Type_ = TType.String_) then
          begin
            Cid10Terceiro := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        23: begin
          if (field_.Type_ = TType.I64) then
          begin
            ConclusaoDestinoElegivel := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        24: begin
          if (field_.Type_ = TType.List) then
          begin
            ConclusaoDestinoInelegivel := TThriftListImpl<Int64>.Create;
            _list3 := iprot.ReadListBegin();
            for _i4 := 0 to _list3.Count - 1 do
            begin
              _elem5 := iprot.ReadI64();
              ConclusaoDestinoInelegivel.Add(_elem5);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        25: begin
          if (field_.Type_ = TType.I64) then
          begin
            CuidadorCidadao := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
  if not _req_isset_UuidFicha
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'UuidFicha');
  if not _req_isset_HeaderTransport
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'HeaderTransport');
end;

procedure TFichaAvaliacaoElegibilidadeThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
  list_6 : IList;
  _iter7: Int64;
  list_8 : IList;
  _iter9: Int64;
begin
  struc := TStructImpl.Create('FichaAvaliacaoElegibilidadeThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  // required field
  field_.Name := 'uuidFicha';
  field_.Type_  := TType.String_;
  field_.ID := 1;
  oprot.WriteFieldBegin(field_);
  oprot.WriteString(UuidFicha);
  oprot.WriteFieldEnd();
  if (__isset_TpCdsOrigem) then
  begin
    field_.Name := 'tpCdsOrigem';
    field_.Type_  := TType.I32;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(TpCdsOrigem);
    oprot.WriteFieldEnd();
  end;
  if (HeaderTransport <> nil) then
  begin
    field_.Name := 'headerTransport';
    field_.Type_  := TType.Struct;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    HeaderTransport.Write(oprot);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NumeroCartaoSus) then
  begin
    field_.Name := 'numeroCartaoSus';
    field_.Type_  := TType.String_;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(NumeroCartaoSus);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NomeCidadao) then
  begin
    field_.Name := 'nomeCidadao';
    field_.Type_  := TType.String_;
    field_.ID := 5;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(NomeCidadao);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NomeSocialCidadao) then
  begin
    field_.Name := 'nomeSocialCidadao';
    field_.Type_  := TType.String_;
    field_.ID := 6;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(NomeSocialCidadao);
    oprot.WriteFieldEnd();
  end;
  if (__isset_DataNascimentoCidadao) then
  begin
    field_.Name := 'dataNascimentoCidadao';
    field_.Type_  := TType.I64;
    field_.ID := 7;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(DataNascimentoCidadao);
    oprot.WriteFieldEnd();
  end;
  if (__isset_SexoCidadao) then
  begin
    field_.Name := 'sexoCidadao';
    field_.Type_  := TType.I64;
    field_.ID := 8;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(SexoCidadao);
    oprot.WriteFieldEnd();
  end;
  if (__isset_RacaCorCidadao) then
  begin
    field_.Name := 'racaCorCidadao';
    field_.Type_  := TType.I64;
    field_.ID := 9;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(RacaCorCidadao);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NomeMaeCidadao) then
  begin
    field_.Name := 'nomeMaeCidadao';
    field_.Type_  := TType.String_;
    field_.ID := 10;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(NomeMaeCidadao);
    oprot.WriteFieldEnd();
  end;
  if (__isset_DesconheceNomeMae) then
  begin
    field_.Name := 'desconheceNomeMae';
    field_.Type_  := TType.Bool_;
    field_.ID := 11;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(DesconheceNomeMae);
    oprot.WriteFieldEnd();
  end;
  if (__isset_CodigoIbgeMunicipioNascimento) then
  begin
    field_.Name := 'codigoIbgeMunicipioNascimento';
    field_.Type_  := TType.String_;
    field_.ID := 12;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CodigoIbgeMunicipioNascimento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_CodigoNacionalidade) then
  begin
    field_.Name := 'codigoNacionalidade';
    field_.Type_  := TType.I64;
    field_.ID := 13;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(CodigoNacionalidade);
    oprot.WriteFieldEnd();
  end;
  if (__isset_EmailCidadao) then
  begin
    field_.Name := 'emailCidadao';
    field_.Type_  := TType.String_;
    field_.ID := 14;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(EmailCidadao);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NumeroNisPisPasep) then
  begin
    field_.Name := 'numeroNisPisPasep';
    field_.Type_  := TType.String_;
    field_.ID := 15;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(NumeroNisPisPasep);
    oprot.WriteFieldEnd();
  end;
  if (Endereco <> nil) and __isset_Endereco then
  begin
    field_.Name := 'endereco';
    field_.Type_  := TType.Struct;
    field_.ID := 16;
    oprot.WriteFieldBegin(field_);
    Endereco.Write(oprot);
    oprot.WriteFieldEnd();
  end;
  if (__isset_AtencaoDomiciliarOrigem) then
  begin
    field_.Name := 'atencaoDomiciliarOrigem';
    field_.Type_  := TType.I64;
    field_.ID := 17;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(AtencaoDomiciliarOrigem);
    oprot.WriteFieldEnd();
  end;
  if (__isset_AtencaoDomiciliarModalidade) then
  begin
    field_.Name := 'atencaoDomiciliarModalidade';
    field_.Type_  := TType.I64;
    field_.ID := 18;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(AtencaoDomiciliarModalidade);
    oprot.WriteFieldEnd();
  end;
  if (SituacoesPresentes <> nil) and __isset_SituacoesPresentes then
  begin
    field_.Name := 'situacoesPresentes';
    field_.Type_  := TType.List;
    field_.ID := 19;
    oprot.WriteFieldBegin(field_);
    list_6 := TListImpl.Create(TType.I64, SituacoesPresentes.Count);
    oprot.WriteListBegin( list_6);
    for _iter7 in SituacoesPresentes do
    begin
      oprot.WriteI64(_iter7);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (__isset_Cid10Principal) then
  begin
    field_.Name := 'cid10Principal';
    field_.Type_  := TType.String_;
    field_.ID := 20;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(Cid10Principal);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Cid10Segundo) then
  begin
    field_.Name := 'cid10Segundo';
    field_.Type_  := TType.String_;
    field_.ID := 21;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(Cid10Segundo);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Cid10Terceiro) then
  begin
    field_.Name := 'cid10Terceiro';
    field_.Type_  := TType.String_;
    field_.ID := 22;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(Cid10Terceiro);
    oprot.WriteFieldEnd();
  end;
  if (__isset_ConclusaoDestinoElegivel) then
  begin
    field_.Name := 'conclusaoDestinoElegivel';
    field_.Type_  := TType.I64;
    field_.ID := 23;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(ConclusaoDestinoElegivel);
    oprot.WriteFieldEnd();
  end;
  if (ConclusaoDestinoInelegivel <> nil) and __isset_ConclusaoDestinoInelegivel then
  begin
    field_.Name := 'conclusaoDestinoInelegivel';
    field_.Type_  := TType.List;
    field_.ID := 24;
    oprot.WriteFieldBegin(field_);
    list_8 := TListImpl.Create(TType.I64, ConclusaoDestinoInelegivel.Count);
    oprot.WriteListBegin( list_8);
    for _iter9 in ConclusaoDestinoInelegivel do
    begin
      oprot.WriteI64(_iter9);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (__isset_CuidadorCidadao) then
  begin
    field_.Name := 'cuidadorCidadao';
    field_.Type_  := TType.I64;
    field_.ID := 25;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(CuidadorCidadao);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TFichaAvaliacaoElegibilidadeThriftImpl.ToString: string;
var
  _sb10 : TThriftStringBuilder;
begin
  _sb10 := TThriftStringBuilder.Create('(');
  try
    _sb10.Append(', UuidFicha: ');
    _sb10.Append(UuidFicha);
    if (__isset_TpCdsOrigem) then begin
      _sb10.Append(', TpCdsOrigem: ');
      _sb10.Append(TpCdsOrigem);
    end;
    if (HeaderTransport <> nil) then begin
      _sb10.Append(', HeaderTransport: ');
      if (HeaderTransport = nil) then _sb10.Append('<null>') else _sb10.Append(HeaderTransport.ToString());
    end;
    if (__isset_NumeroCartaoSus) then begin
      _sb10.Append(', NumeroCartaoSus: ');
      _sb10.Append(NumeroCartaoSus);
    end;
    if (__isset_NomeCidadao) then begin
      _sb10.Append(', NomeCidadao: ');
      _sb10.Append(NomeCidadao);
    end;
    if (__isset_NomeSocialCidadao) then begin
      _sb10.Append(', NomeSocialCidadao: ');
      _sb10.Append(NomeSocialCidadao);
    end;
    if (__isset_DataNascimentoCidadao) then begin
      _sb10.Append(', DataNascimentoCidadao: ');
      _sb10.Append(DataNascimentoCidadao);
    end;
    if (__isset_SexoCidadao) then begin
      _sb10.Append(', SexoCidadao: ');
      _sb10.Append(SexoCidadao);
    end;
    if (__isset_RacaCorCidadao) then begin
      _sb10.Append(', RacaCorCidadao: ');
      _sb10.Append(RacaCorCidadao);
    end;
    if (__isset_NomeMaeCidadao) then begin
      _sb10.Append(', NomeMaeCidadao: ');
      _sb10.Append(NomeMaeCidadao);
    end;
    if (__isset_DesconheceNomeMae) then begin
      _sb10.Append(', DesconheceNomeMae: ');
      _sb10.Append(DesconheceNomeMae);
    end;
    if (__isset_CodigoIbgeMunicipioNascimento) then begin
      _sb10.Append(', CodigoIbgeMunicipioNascimento: ');
      _sb10.Append(CodigoIbgeMunicipioNascimento);
    end;
    if (__isset_CodigoNacionalidade) then begin
      _sb10.Append(', CodigoNacionalidade: ');
      _sb10.Append(CodigoNacionalidade);
    end;
    if (__isset_EmailCidadao) then begin
      _sb10.Append(', EmailCidadao: ');
      _sb10.Append(EmailCidadao);
    end;
    if (__isset_NumeroNisPisPasep) then begin
      _sb10.Append(', NumeroNisPisPasep: ');
      _sb10.Append(NumeroNisPisPasep);
    end;
    if (Endereco <> nil) and __isset_Endereco then begin
      _sb10.Append(', Endereco: ');
      if (Endereco = nil) then _sb10.Append('<null>') else _sb10.Append(Endereco.ToString());
    end;
    if (__isset_AtencaoDomiciliarOrigem) then begin
      _sb10.Append(', AtencaoDomiciliarOrigem: ');
      _sb10.Append(AtencaoDomiciliarOrigem);
    end;
    if (__isset_AtencaoDomiciliarModalidade) then begin
      _sb10.Append(', AtencaoDomiciliarModalidade: ');
      _sb10.Append(AtencaoDomiciliarModalidade);
    end;
    if (SituacoesPresentes <> nil) and __isset_SituacoesPresentes then begin
      _sb10.Append(', SituacoesPresentes: ');
      _sb10.Append(SituacoesPresentes);
    end;
    if (__isset_Cid10Principal) then begin
      _sb10.Append(', Cid10Principal: ');
      _sb10.Append(Cid10Principal);
    end;
    if (__isset_Cid10Segundo) then begin
      _sb10.Append(', Cid10Segundo: ');
      _sb10.Append(Cid10Segundo);
    end;
    if (__isset_Cid10Terceiro) then begin
      _sb10.Append(', Cid10Terceiro: ');
      _sb10.Append(Cid10Terceiro);
    end;
    if (__isset_ConclusaoDestinoElegivel) then begin
      _sb10.Append(', ConclusaoDestinoElegivel: ');
      _sb10.Append(ConclusaoDestinoElegivel);
    end;
    if (ConclusaoDestinoInelegivel <> nil) and __isset_ConclusaoDestinoInelegivel then begin
      _sb10.Append(', ConclusaoDestinoInelegivel: ');
      _sb10.Append(ConclusaoDestinoInelegivel);
    end;
    if (__isset_CuidadorCidadao) then begin
      _sb10.Append(', CuidadorCidadao: ');
      _sb10.Append(CuidadorCidadao);
    end;
    _sb10.Append(')');
    Result := _sb10.ToString;
  finally
    _sb10.Free;
  end;
end;


initialization

finalization


end.

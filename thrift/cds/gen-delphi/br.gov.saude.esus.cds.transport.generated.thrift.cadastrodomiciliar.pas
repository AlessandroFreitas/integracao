(**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *)

unit br.gov.saude.esus.cds.transport.generated.thrift.cadastrodomiciliar;

interface

uses
  Classes,
  SysUtils,
  Generics.Collections,
  Thrift,
  Thrift.Utils,
  Thrift.Collections,
  Thrift.Protocol,
  Thrift.Transport,
  br.gov.saude.esus.cds.transport.generated.thrift.common;

const
  cbr_gov_saude_esus_cds_transport_generated_thrift_cadastrodomiciliar_Option_AnsiStr_Binary = False;
  cbr_gov_saude_esus_cds_transport_generated_thrift_cadastrodomiciliar_Option_Register_Types = False;
  cbr_gov_saude_esus_cds_transport_generated_thrift_cadastrodomiciliar_Option_ConstPrefix    = False;
  cbr_gov_saude_esus_cds_transport_generated_thrift_cadastrodomiciliar_Option_Events         = False;
  cbr_gov_saude_esus_cds_transport_generated_thrift_cadastrodomiciliar_Option_XmlDoc         = False;

type
  ICondicaoMoradiaThrift = interface;
  IFamiliaRowThrift = interface;
  ICadastroDomiciliarThrift = interface;

  ICondicaoMoradiaThrift = interface(IBase)
    function GetAbastecimentoAgua: Int64;
    procedure SetAbastecimentoAgua( const Value: Int64);
    function GetAreaProducaoRural: Int64;
    procedure SetAreaProducaoRural( const Value: Int64);
    function GetDestinoLixo: Int64;
    procedure SetDestinoLixo( const Value: Int64);
    function GetFormaEscoamentoBanheiro: Int64;
    procedure SetFormaEscoamentoBanheiro( const Value: Int64);
    function GetLocalizacao: Int64;
    procedure SetLocalizacao( const Value: Int64);
    function GetMaterialPredominanteParedesExtDomicilio: Int64;
    procedure SetMaterialPredominanteParedesExtDomicilio( const Value: Int64);
    function GetNuComodos: string;
    procedure SetNuComodos( const Value: string);
    function GetNuMoradores: string;
    procedure SetNuMoradores( const Value: string);
    function GetSituacaoMoradiaPosseTerra: Int64;
    procedure SetSituacaoMoradiaPosseTerra( const Value: Int64);
    function GetStDiponibilidadeEnergiaeletrica: Boolean;
    procedure SetStDiponibilidadeEnergiaeletrica( const Value: Boolean);
    function GetTipoAcessoDomicilio: Int64;
    procedure SetTipoAcessoDomicilio( const Value: Int64);
    function GetTipoDomicilio: Int64;
    procedure SetTipoDomicilio( const Value: Int64);
    function GetTratamentoAguaDomicilio: Int64;
    procedure SetTratamentoAguaDomicilio( const Value: Int64);

    property AbastecimentoAgua: Int64 read GetAbastecimentoAgua write SetAbastecimentoAgua;
    property AreaProducaoRural: Int64 read GetAreaProducaoRural write SetAreaProducaoRural;
    property DestinoLixo: Int64 read GetDestinoLixo write SetDestinoLixo;
    property FormaEscoamentoBanheiro: Int64 read GetFormaEscoamentoBanheiro write SetFormaEscoamentoBanheiro;
    property Localizacao: Int64 read GetLocalizacao write SetLocalizacao;
    property MaterialPredominanteParedesExtDomicilio: Int64 read GetMaterialPredominanteParedesExtDomicilio write SetMaterialPredominanteParedesExtDomicilio;
    property NuComodos: string read GetNuComodos write SetNuComodos;
    property NuMoradores: string read GetNuMoradores write SetNuMoradores;
    property SituacaoMoradiaPosseTerra: Int64 read GetSituacaoMoradiaPosseTerra write SetSituacaoMoradiaPosseTerra;
    property StDiponibilidadeEnergiaeletrica: Boolean read GetStDiponibilidadeEnergiaeletrica write SetStDiponibilidadeEnergiaeletrica;
    property TipoAcessoDomicilio: Int64 read GetTipoAcessoDomicilio write SetTipoAcessoDomicilio;
    property TipoDomicilio: Int64 read GetTipoDomicilio write SetTipoDomicilio;
    property TratamentoAguaDomicilio: Int64 read GetTratamentoAguaDomicilio write SetTratamentoAguaDomicilio;

    function Get__isset_AbastecimentoAgua: Boolean;
    function Get__isset_AreaProducaoRural: Boolean;
    function Get__isset_DestinoLixo: Boolean;
    function Get__isset_FormaEscoamentoBanheiro: Boolean;
    function Get__isset_Localizacao: Boolean;
    function Get__isset_MaterialPredominanteParedesExtDomicilio: Boolean;
    function Get__isset_NuComodos: Boolean;
    function Get__isset_NuMoradores: Boolean;
    function Get__isset_SituacaoMoradiaPosseTerra: Boolean;
    function Get__isset_StDiponibilidadeEnergiaeletrica: Boolean;
    function Get__isset_TipoAcessoDomicilio: Boolean;
    function Get__isset_TipoDomicilio: Boolean;
    function Get__isset_TratamentoAguaDomicilio: Boolean;

    property __isset_AbastecimentoAgua: Boolean read Get__isset_AbastecimentoAgua;
    property __isset_AreaProducaoRural: Boolean read Get__isset_AreaProducaoRural;
    property __isset_DestinoLixo: Boolean read Get__isset_DestinoLixo;
    property __isset_FormaEscoamentoBanheiro: Boolean read Get__isset_FormaEscoamentoBanheiro;
    property __isset_Localizacao: Boolean read Get__isset_Localizacao;
    property __isset_MaterialPredominanteParedesExtDomicilio: Boolean read Get__isset_MaterialPredominanteParedesExtDomicilio;
    property __isset_NuComodos: Boolean read Get__isset_NuComodos;
    property __isset_NuMoradores: Boolean read Get__isset_NuMoradores;
    property __isset_SituacaoMoradiaPosseTerra: Boolean read Get__isset_SituacaoMoradiaPosseTerra;
    property __isset_StDiponibilidadeEnergiaeletrica: Boolean read Get__isset_StDiponibilidadeEnergiaeletrica;
    property __isset_TipoAcessoDomicilio: Boolean read Get__isset_TipoAcessoDomicilio;
    property __isset_TipoDomicilio: Boolean read Get__isset_TipoDomicilio;
    property __isset_TratamentoAguaDomicilio: Boolean read Get__isset_TratamentoAguaDomicilio;
  end;

  TCondicaoMoradiaThriftImpl = class(TInterfacedObject, IBase, ICondicaoMoradiaThrift)
  private
    FAbastecimentoAgua: Int64;
    FAreaProducaoRural: Int64;
    FDestinoLixo: Int64;
    FFormaEscoamentoBanheiro: Int64;
    FLocalizacao: Int64;
    FMaterialPredominanteParedesExtDomicilio: Int64;
    FNuComodos: string;
    FNuMoradores: string;
    FSituacaoMoradiaPosseTerra: Int64;
    FStDiponibilidadeEnergiaeletrica: Boolean;
    FTipoAcessoDomicilio: Int64;
    FTipoDomicilio: Int64;
    FTratamentoAguaDomicilio: Int64;
    
    F__isset_AbastecimentoAgua: Boolean;
    F__isset_AreaProducaoRural: Boolean;
    F__isset_DestinoLixo: Boolean;
    F__isset_FormaEscoamentoBanheiro: Boolean;
    F__isset_Localizacao: Boolean;
    F__isset_MaterialPredominanteParedesExtDomicilio: Boolean;
    F__isset_NuComodos: Boolean;
    F__isset_NuMoradores: Boolean;
    F__isset_SituacaoMoradiaPosseTerra: Boolean;
    F__isset_StDiponibilidadeEnergiaeletrica: Boolean;
    F__isset_TipoAcessoDomicilio: Boolean;
    F__isset_TipoDomicilio: Boolean;
    F__isset_TratamentoAguaDomicilio: Boolean;
    
    function GetAbastecimentoAgua: Int64;
    procedure SetAbastecimentoAgua( const Value: Int64);
    function GetAreaProducaoRural: Int64;
    procedure SetAreaProducaoRural( const Value: Int64);
    function GetDestinoLixo: Int64;
    procedure SetDestinoLixo( const Value: Int64);
    function GetFormaEscoamentoBanheiro: Int64;
    procedure SetFormaEscoamentoBanheiro( const Value: Int64);
    function GetLocalizacao: Int64;
    procedure SetLocalizacao( const Value: Int64);
    function GetMaterialPredominanteParedesExtDomicilio: Int64;
    procedure SetMaterialPredominanteParedesExtDomicilio( const Value: Int64);
    function GetNuComodos: string;
    procedure SetNuComodos( const Value: string);
    function GetNuMoradores: string;
    procedure SetNuMoradores( const Value: string);
    function GetSituacaoMoradiaPosseTerra: Int64;
    procedure SetSituacaoMoradiaPosseTerra( const Value: Int64);
    function GetStDiponibilidadeEnergiaeletrica: Boolean;
    procedure SetStDiponibilidadeEnergiaeletrica( const Value: Boolean);
    function GetTipoAcessoDomicilio: Int64;
    procedure SetTipoAcessoDomicilio( const Value: Int64);
    function GetTipoDomicilio: Int64;
    procedure SetTipoDomicilio( const Value: Int64);
    function GetTratamentoAguaDomicilio: Int64;
    procedure SetTratamentoAguaDomicilio( const Value: Int64);

    function Get__isset_AbastecimentoAgua: Boolean;
    function Get__isset_AreaProducaoRural: Boolean;
    function Get__isset_DestinoLixo: Boolean;
    function Get__isset_FormaEscoamentoBanheiro: Boolean;
    function Get__isset_Localizacao: Boolean;
    function Get__isset_MaterialPredominanteParedesExtDomicilio: Boolean;
    function Get__isset_NuComodos: Boolean;
    function Get__isset_NuMoradores: Boolean;
    function Get__isset_SituacaoMoradiaPosseTerra: Boolean;
    function Get__isset_StDiponibilidadeEnergiaeletrica: Boolean;
    function Get__isset_TipoAcessoDomicilio: Boolean;
    function Get__isset_TipoDomicilio: Boolean;
    function Get__isset_TratamentoAguaDomicilio: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property AbastecimentoAgua: Int64 read GetAbastecimentoAgua write SetAbastecimentoAgua;
    property AreaProducaoRural: Int64 read GetAreaProducaoRural write SetAreaProducaoRural;
    property DestinoLixo: Int64 read GetDestinoLixo write SetDestinoLixo;
    property FormaEscoamentoBanheiro: Int64 read GetFormaEscoamentoBanheiro write SetFormaEscoamentoBanheiro;
    property Localizacao: Int64 read GetLocalizacao write SetLocalizacao;
    property MaterialPredominanteParedesExtDomicilio: Int64 read GetMaterialPredominanteParedesExtDomicilio write SetMaterialPredominanteParedesExtDomicilio;
    property NuComodos: string read GetNuComodos write SetNuComodos;
    property NuMoradores: string read GetNuMoradores write SetNuMoradores;
    property SituacaoMoradiaPosseTerra: Int64 read GetSituacaoMoradiaPosseTerra write SetSituacaoMoradiaPosseTerra;
    property StDiponibilidadeEnergiaeletrica: Boolean read GetStDiponibilidadeEnergiaeletrica write SetStDiponibilidadeEnergiaeletrica;
    property TipoAcessoDomicilio: Int64 read GetTipoAcessoDomicilio write SetTipoAcessoDomicilio;
    property TipoDomicilio: Int64 read GetTipoDomicilio write SetTipoDomicilio;
    property TratamentoAguaDomicilio: Int64 read GetTratamentoAguaDomicilio write SetTratamentoAguaDomicilio;

    // isset
    property __isset_AbastecimentoAgua: Boolean read Get__isset_AbastecimentoAgua;
    property __isset_AreaProducaoRural: Boolean read Get__isset_AreaProducaoRural;
    property __isset_DestinoLixo: Boolean read Get__isset_DestinoLixo;
    property __isset_FormaEscoamentoBanheiro: Boolean read Get__isset_FormaEscoamentoBanheiro;
    property __isset_Localizacao: Boolean read Get__isset_Localizacao;
    property __isset_MaterialPredominanteParedesExtDomicilio: Boolean read Get__isset_MaterialPredominanteParedesExtDomicilio;
    property __isset_NuComodos: Boolean read Get__isset_NuComodos;
    property __isset_NuMoradores: Boolean read Get__isset_NuMoradores;
    property __isset_SituacaoMoradiaPosseTerra: Boolean read Get__isset_SituacaoMoradiaPosseTerra;
    property __isset_StDiponibilidadeEnergiaeletrica: Boolean read Get__isset_StDiponibilidadeEnergiaeletrica;
    property __isset_TipoAcessoDomicilio: Boolean read Get__isset_TipoAcessoDomicilio;
    property __isset_TipoDomicilio: Boolean read Get__isset_TipoDomicilio;
    property __isset_TratamentoAguaDomicilio: Boolean read Get__isset_TratamentoAguaDomicilio;
  end;

  IFamiliaRowThrift = interface(IBase)
    function GetDataNascimentoResponsavel: Int64;
    procedure SetDataNascimentoResponsavel( const Value: Int64);
    function GetNumeroCnsResponsavel: string;
    procedure SetNumeroCnsResponsavel( const Value: string);
    function GetNumeroMembrosFamilia: Integer;
    procedure SetNumeroMembrosFamilia( const Value: Integer);
    function GetNumeroProntuario: string;
    procedure SetNumeroProntuario( const Value: string);
    function GetRendaFamiliar: Int64;
    procedure SetRendaFamiliar( const Value: Int64);
    function GetResideDesde: Int64;
    procedure SetResideDesde( const Value: Int64);
    function GetStMudanca: Boolean;
    procedure SetStMudanca( const Value: Boolean);

    property DataNascimentoResponsavel: Int64 read GetDataNascimentoResponsavel write SetDataNascimentoResponsavel;
    property NumeroCnsResponsavel: string read GetNumeroCnsResponsavel write SetNumeroCnsResponsavel;
    property NumeroMembrosFamilia: Integer read GetNumeroMembrosFamilia write SetNumeroMembrosFamilia;
    property NumeroProntuario: string read GetNumeroProntuario write SetNumeroProntuario;
    property RendaFamiliar: Int64 read GetRendaFamiliar write SetRendaFamiliar;
    property ResideDesde: Int64 read GetResideDesde write SetResideDesde;
    property StMudanca: Boolean read GetStMudanca write SetStMudanca;

    function Get__isset_DataNascimentoResponsavel: Boolean;
    function Get__isset_NumeroCnsResponsavel: Boolean;
    function Get__isset_NumeroMembrosFamilia: Boolean;
    function Get__isset_NumeroProntuario: Boolean;
    function Get__isset_RendaFamiliar: Boolean;
    function Get__isset_ResideDesde: Boolean;
    function Get__isset_StMudanca: Boolean;

    property __isset_DataNascimentoResponsavel: Boolean read Get__isset_DataNascimentoResponsavel;
    property __isset_NumeroCnsResponsavel: Boolean read Get__isset_NumeroCnsResponsavel;
    property __isset_NumeroMembrosFamilia: Boolean read Get__isset_NumeroMembrosFamilia;
    property __isset_NumeroProntuario: Boolean read Get__isset_NumeroProntuario;
    property __isset_RendaFamiliar: Boolean read Get__isset_RendaFamiliar;
    property __isset_ResideDesde: Boolean read Get__isset_ResideDesde;
    property __isset_StMudanca: Boolean read Get__isset_StMudanca;
  end;

  TFamiliaRowThriftImpl = class(TInterfacedObject, IBase, IFamiliaRowThrift)
  private
    FDataNascimentoResponsavel: Int64;
    FNumeroCnsResponsavel: string;
    FNumeroMembrosFamilia: Integer;
    FNumeroProntuario: string;
    FRendaFamiliar: Int64;
    FResideDesde: Int64;
    FStMudanca: Boolean;
    
    F__isset_DataNascimentoResponsavel: Boolean;
    F__isset_NumeroCnsResponsavel: Boolean;
    F__isset_NumeroMembrosFamilia: Boolean;
    F__isset_NumeroProntuario: Boolean;
    F__isset_RendaFamiliar: Boolean;
    F__isset_ResideDesde: Boolean;
    F__isset_StMudanca: Boolean;
    
    function GetDataNascimentoResponsavel: Int64;
    procedure SetDataNascimentoResponsavel( const Value: Int64);
    function GetNumeroCnsResponsavel: string;
    procedure SetNumeroCnsResponsavel( const Value: string);
    function GetNumeroMembrosFamilia: Integer;
    procedure SetNumeroMembrosFamilia( const Value: Integer);
    function GetNumeroProntuario: string;
    procedure SetNumeroProntuario( const Value: string);
    function GetRendaFamiliar: Int64;
    procedure SetRendaFamiliar( const Value: Int64);
    function GetResideDesde: Int64;
    procedure SetResideDesde( const Value: Int64);
    function GetStMudanca: Boolean;
    procedure SetStMudanca( const Value: Boolean);

    function Get__isset_DataNascimentoResponsavel: Boolean;
    function Get__isset_NumeroCnsResponsavel: Boolean;
    function Get__isset_NumeroMembrosFamilia: Boolean;
    function Get__isset_NumeroProntuario: Boolean;
    function Get__isset_RendaFamiliar: Boolean;
    function Get__isset_ResideDesde: Boolean;
    function Get__isset_StMudanca: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property DataNascimentoResponsavel: Int64 read GetDataNascimentoResponsavel write SetDataNascimentoResponsavel;
    property NumeroCnsResponsavel: string read GetNumeroCnsResponsavel write SetNumeroCnsResponsavel;
    property NumeroMembrosFamilia: Integer read GetNumeroMembrosFamilia write SetNumeroMembrosFamilia;
    property NumeroProntuario: string read GetNumeroProntuario write SetNumeroProntuario;
    property RendaFamiliar: Int64 read GetRendaFamiliar write SetRendaFamiliar;
    property ResideDesde: Int64 read GetResideDesde write SetResideDesde;
    property StMudanca: Boolean read GetStMudanca write SetStMudanca;

    // isset
    property __isset_DataNascimentoResponsavel: Boolean read Get__isset_DataNascimentoResponsavel;
    property __isset_NumeroCnsResponsavel: Boolean read Get__isset_NumeroCnsResponsavel;
    property __isset_NumeroMembrosFamilia: Boolean read Get__isset_NumeroMembrosFamilia;
    property __isset_NumeroProntuario: Boolean read Get__isset_NumeroProntuario;
    property __isset_RendaFamiliar: Boolean read Get__isset_RendaFamiliar;
    property __isset_ResideDesde: Boolean read Get__isset_ResideDesde;
    property __isset_StMudanca: Boolean read Get__isset_StMudanca;
  end;

  ICadastroDomiciliarThrift = interface(IBase)
    function GetAnimaisNoDomicilio: IThriftList<Int64>;
    procedure SetAnimaisNoDomicilio( const Value: IThriftList<Int64>);
    function GetCondicaoMoradia: ICondicaoMoradiaThrift;
    procedure SetCondicaoMoradia( const Value: ICondicaoMoradiaThrift);
    function GetDadosGerais: IHeaderCdsCadastroThrift;
    procedure SetDadosGerais( const Value: IHeaderCdsCadastroThrift);
    function GetEnderecoLocalPermanencia: IEnderecoLocalPermanenciaThrift;
    procedure SetEnderecoLocalPermanencia( const Value: IEnderecoLocalPermanenciaThrift);
    function GetFamilias: IThriftList<IFamiliaRowThrift>;
    procedure SetFamilias( const Value: IThriftList<IFamiliaRowThrift>);
    function GetFichaAtualizada: Boolean;
    procedure SetFichaAtualizada( const Value: Boolean);
    function GetQuantosAnimaisNoDomicilio: string;
    procedure SetQuantosAnimaisNoDomicilio( const Value: string);
    function GetStAnimaisNoDomicilio: Boolean;
    procedure SetStAnimaisNoDomicilio( const Value: Boolean);
    function GetStatusTermoRecusaCadastroDomiciliarAtencaoBasica: Boolean;
    procedure SetStatusTermoRecusaCadastroDomiciliarAtencaoBasica( const Value: Boolean);
    function GetTpCdsOrigem: Integer;
    procedure SetTpCdsOrigem( const Value: Integer);
    function GetUuid: string;
    procedure SetUuid( const Value: string);
    function GetUuidFichaOriginadora: string;
    procedure SetUuidFichaOriginadora( const Value: string);

    property AnimaisNoDomicilio: IThriftList<Int64> read GetAnimaisNoDomicilio write SetAnimaisNoDomicilio;
    property CondicaoMoradia: ICondicaoMoradiaThrift read GetCondicaoMoradia write SetCondicaoMoradia;
    property DadosGerais: IHeaderCdsCadastroThrift read GetDadosGerais write SetDadosGerais;
    property EnderecoLocalPermanencia: IEnderecoLocalPermanenciaThrift read GetEnderecoLocalPermanencia write SetEnderecoLocalPermanencia;
    property Familias: IThriftList<IFamiliaRowThrift> read GetFamilias write SetFamilias;
    property FichaAtualizada: Boolean read GetFichaAtualizada write SetFichaAtualizada;
    property QuantosAnimaisNoDomicilio: string read GetQuantosAnimaisNoDomicilio write SetQuantosAnimaisNoDomicilio;
    property StAnimaisNoDomicilio: Boolean read GetStAnimaisNoDomicilio write SetStAnimaisNoDomicilio;
    property StatusTermoRecusaCadastroDomiciliarAtencaoBasica: Boolean read GetStatusTermoRecusaCadastroDomiciliarAtencaoBasica write SetStatusTermoRecusaCadastroDomiciliarAtencaoBasica;
    property TpCdsOrigem: Integer read GetTpCdsOrigem write SetTpCdsOrigem;
    property Uuid: string read GetUuid write SetUuid;
    property UuidFichaOriginadora: string read GetUuidFichaOriginadora write SetUuidFichaOriginadora;

    function Get__isset_AnimaisNoDomicilio: Boolean;
    function Get__isset_CondicaoMoradia: Boolean;
    function Get__isset_EnderecoLocalPermanencia: Boolean;
    function Get__isset_Familias: Boolean;
    function Get__isset_FichaAtualizada: Boolean;
    function Get__isset_QuantosAnimaisNoDomicilio: Boolean;
    function Get__isset_StAnimaisNoDomicilio: Boolean;
    function Get__isset_StatusTermoRecusaCadastroDomiciliarAtencaoBasica: Boolean;
    function Get__isset_TpCdsOrigem: Boolean;
    function Get__isset_UuidFichaOriginadora: Boolean;

    property __isset_AnimaisNoDomicilio: Boolean read Get__isset_AnimaisNoDomicilio;
    property __isset_CondicaoMoradia: Boolean read Get__isset_CondicaoMoradia;
    property __isset_EnderecoLocalPermanencia: Boolean read Get__isset_EnderecoLocalPermanencia;
    property __isset_Familias: Boolean read Get__isset_Familias;
    property __isset_FichaAtualizada: Boolean read Get__isset_FichaAtualizada;
    property __isset_QuantosAnimaisNoDomicilio: Boolean read Get__isset_QuantosAnimaisNoDomicilio;
    property __isset_StAnimaisNoDomicilio: Boolean read Get__isset_StAnimaisNoDomicilio;
    property __isset_StatusTermoRecusaCadastroDomiciliarAtencaoBasica: Boolean read Get__isset_StatusTermoRecusaCadastroDomiciliarAtencaoBasica;
    property __isset_TpCdsOrigem: Boolean read Get__isset_TpCdsOrigem;
    property __isset_UuidFichaOriginadora: Boolean read Get__isset_UuidFichaOriginadora;
  end;

  TCadastroDomiciliarThriftImpl = class(TInterfacedObject, IBase, ICadastroDomiciliarThrift)
  private
    FAnimaisNoDomicilio: IThriftList<Int64>;
    FCondicaoMoradia: ICondicaoMoradiaThrift;
    FDadosGerais: IHeaderCdsCadastroThrift;
    FEnderecoLocalPermanencia: IEnderecoLocalPermanenciaThrift;
    FFamilias: IThriftList<IFamiliaRowThrift>;
    FFichaAtualizada: Boolean;
    FQuantosAnimaisNoDomicilio: string;
    FStAnimaisNoDomicilio: Boolean;
    FStatusTermoRecusaCadastroDomiciliarAtencaoBasica: Boolean;
    FTpCdsOrigem: Integer;
    FUuid: string;
    FUuidFichaOriginadora: string;
    
    F__isset_AnimaisNoDomicilio: Boolean;
    F__isset_CondicaoMoradia: Boolean;
    F__isset_EnderecoLocalPermanencia: Boolean;
    F__isset_Familias: Boolean;
    F__isset_FichaAtualizada: Boolean;
    F__isset_QuantosAnimaisNoDomicilio: Boolean;
    F__isset_StAnimaisNoDomicilio: Boolean;
    F__isset_StatusTermoRecusaCadastroDomiciliarAtencaoBasica: Boolean;
    F__isset_TpCdsOrigem: Boolean;
    F__isset_UuidFichaOriginadora: Boolean;
    
    function GetAnimaisNoDomicilio: IThriftList<Int64>;
    procedure SetAnimaisNoDomicilio( const Value: IThriftList<Int64>);
    function GetCondicaoMoradia: ICondicaoMoradiaThrift;
    procedure SetCondicaoMoradia( const Value: ICondicaoMoradiaThrift);
    function GetDadosGerais: IHeaderCdsCadastroThrift;
    procedure SetDadosGerais( const Value: IHeaderCdsCadastroThrift);
    function GetEnderecoLocalPermanencia: IEnderecoLocalPermanenciaThrift;
    procedure SetEnderecoLocalPermanencia( const Value: IEnderecoLocalPermanenciaThrift);
    function GetFamilias: IThriftList<IFamiliaRowThrift>;
    procedure SetFamilias( const Value: IThriftList<IFamiliaRowThrift>);
    function GetFichaAtualizada: Boolean;
    procedure SetFichaAtualizada( const Value: Boolean);
    function GetQuantosAnimaisNoDomicilio: string;
    procedure SetQuantosAnimaisNoDomicilio( const Value: string);
    function GetStAnimaisNoDomicilio: Boolean;
    procedure SetStAnimaisNoDomicilio( const Value: Boolean);
    function GetStatusTermoRecusaCadastroDomiciliarAtencaoBasica: Boolean;
    procedure SetStatusTermoRecusaCadastroDomiciliarAtencaoBasica( const Value: Boolean);
    function GetTpCdsOrigem: Integer;
    procedure SetTpCdsOrigem( const Value: Integer);
    function GetUuid: string;
    procedure SetUuid( const Value: string);
    function GetUuidFichaOriginadora: string;
    procedure SetUuidFichaOriginadora( const Value: string);

    function Get__isset_AnimaisNoDomicilio: Boolean;
    function Get__isset_CondicaoMoradia: Boolean;
    function Get__isset_EnderecoLocalPermanencia: Boolean;
    function Get__isset_Familias: Boolean;
    function Get__isset_FichaAtualizada: Boolean;
    function Get__isset_QuantosAnimaisNoDomicilio: Boolean;
    function Get__isset_StAnimaisNoDomicilio: Boolean;
    function Get__isset_StatusTermoRecusaCadastroDomiciliarAtencaoBasica: Boolean;
    function Get__isset_TpCdsOrigem: Boolean;
    function Get__isset_UuidFichaOriginadora: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property AnimaisNoDomicilio: IThriftList<Int64> read GetAnimaisNoDomicilio write SetAnimaisNoDomicilio;
    property CondicaoMoradia: ICondicaoMoradiaThrift read GetCondicaoMoradia write SetCondicaoMoradia;
    property DadosGerais: IHeaderCdsCadastroThrift read GetDadosGerais write SetDadosGerais;
    property EnderecoLocalPermanencia: IEnderecoLocalPermanenciaThrift read GetEnderecoLocalPermanencia write SetEnderecoLocalPermanencia;
    property Familias: IThriftList<IFamiliaRowThrift> read GetFamilias write SetFamilias;
    property FichaAtualizada: Boolean read GetFichaAtualizada write SetFichaAtualizada;
    property QuantosAnimaisNoDomicilio: string read GetQuantosAnimaisNoDomicilio write SetQuantosAnimaisNoDomicilio;
    property StAnimaisNoDomicilio: Boolean read GetStAnimaisNoDomicilio write SetStAnimaisNoDomicilio;
    property StatusTermoRecusaCadastroDomiciliarAtencaoBasica: Boolean read GetStatusTermoRecusaCadastroDomiciliarAtencaoBasica write SetStatusTermoRecusaCadastroDomiciliarAtencaoBasica;
    property TpCdsOrigem: Integer read GetTpCdsOrigem write SetTpCdsOrigem;
    property Uuid: string read GetUuid write SetUuid;
    property UuidFichaOriginadora: string read GetUuidFichaOriginadora write SetUuidFichaOriginadora;

    // isset
    property __isset_AnimaisNoDomicilio: Boolean read Get__isset_AnimaisNoDomicilio;
    property __isset_CondicaoMoradia: Boolean read Get__isset_CondicaoMoradia;
    property __isset_EnderecoLocalPermanencia: Boolean read Get__isset_EnderecoLocalPermanencia;
    property __isset_Familias: Boolean read Get__isset_Familias;
    property __isset_FichaAtualizada: Boolean read Get__isset_FichaAtualizada;
    property __isset_QuantosAnimaisNoDomicilio: Boolean read Get__isset_QuantosAnimaisNoDomicilio;
    property __isset_StAnimaisNoDomicilio: Boolean read Get__isset_StAnimaisNoDomicilio;
    property __isset_StatusTermoRecusaCadastroDomiciliarAtencaoBasica: Boolean read Get__isset_StatusTermoRecusaCadastroDomiciliarAtencaoBasica;
    property __isset_TpCdsOrigem: Boolean read Get__isset_TpCdsOrigem;
    property __isset_UuidFichaOriginadora: Boolean read Get__isset_UuidFichaOriginadora;
  end;

implementation

constructor TCondicaoMoradiaThriftImpl.Create;
begin
  inherited;
end;

destructor TCondicaoMoradiaThriftImpl.Destroy;
begin
  inherited;
end;

function TCondicaoMoradiaThriftImpl.GetAbastecimentoAgua: Int64;
begin
  Result := FAbastecimentoAgua;
end;

procedure TCondicaoMoradiaThriftImpl.SetAbastecimentoAgua( const Value: Int64);
begin
  F__isset_AbastecimentoAgua := True;
  FAbastecimentoAgua := Value;
end;

function TCondicaoMoradiaThriftImpl.Get__isset_AbastecimentoAgua: Boolean;
begin
  Result := F__isset_AbastecimentoAgua;
end;

function TCondicaoMoradiaThriftImpl.GetAreaProducaoRural: Int64;
begin
  Result := FAreaProducaoRural;
end;

procedure TCondicaoMoradiaThriftImpl.SetAreaProducaoRural( const Value: Int64);
begin
  F__isset_AreaProducaoRural := True;
  FAreaProducaoRural := Value;
end;

function TCondicaoMoradiaThriftImpl.Get__isset_AreaProducaoRural: Boolean;
begin
  Result := F__isset_AreaProducaoRural;
end;

function TCondicaoMoradiaThriftImpl.GetDestinoLixo: Int64;
begin
  Result := FDestinoLixo;
end;

procedure TCondicaoMoradiaThriftImpl.SetDestinoLixo( const Value: Int64);
begin
  F__isset_DestinoLixo := True;
  FDestinoLixo := Value;
end;

function TCondicaoMoradiaThriftImpl.Get__isset_DestinoLixo: Boolean;
begin
  Result := F__isset_DestinoLixo;
end;

function TCondicaoMoradiaThriftImpl.GetFormaEscoamentoBanheiro: Int64;
begin
  Result := FFormaEscoamentoBanheiro;
end;

procedure TCondicaoMoradiaThriftImpl.SetFormaEscoamentoBanheiro( const Value: Int64);
begin
  F__isset_FormaEscoamentoBanheiro := True;
  FFormaEscoamentoBanheiro := Value;
end;

function TCondicaoMoradiaThriftImpl.Get__isset_FormaEscoamentoBanheiro: Boolean;
begin
  Result := F__isset_FormaEscoamentoBanheiro;
end;

function TCondicaoMoradiaThriftImpl.GetLocalizacao: Int64;
begin
  Result := FLocalizacao;
end;

procedure TCondicaoMoradiaThriftImpl.SetLocalizacao( const Value: Int64);
begin
  F__isset_Localizacao := True;
  FLocalizacao := Value;
end;

function TCondicaoMoradiaThriftImpl.Get__isset_Localizacao: Boolean;
begin
  Result := F__isset_Localizacao;
end;

function TCondicaoMoradiaThriftImpl.GetMaterialPredominanteParedesExtDomicilio: Int64;
begin
  Result := FMaterialPredominanteParedesExtDomicilio;
end;

procedure TCondicaoMoradiaThriftImpl.SetMaterialPredominanteParedesExtDomicilio( const Value: Int64);
begin
  F__isset_MaterialPredominanteParedesExtDomicilio := True;
  FMaterialPredominanteParedesExtDomicilio := Value;
end;

function TCondicaoMoradiaThriftImpl.Get__isset_MaterialPredominanteParedesExtDomicilio: Boolean;
begin
  Result := F__isset_MaterialPredominanteParedesExtDomicilio;
end;

function TCondicaoMoradiaThriftImpl.GetNuComodos: string;
begin
  Result := FNuComodos;
end;

procedure TCondicaoMoradiaThriftImpl.SetNuComodos( const Value: string);
begin
  F__isset_NuComodos := True;
  FNuComodos := Value;
end;

function TCondicaoMoradiaThriftImpl.Get__isset_NuComodos: Boolean;
begin
  Result := F__isset_NuComodos;
end;

function TCondicaoMoradiaThriftImpl.GetNuMoradores: string;
begin
  Result := FNuMoradores;
end;

procedure TCondicaoMoradiaThriftImpl.SetNuMoradores( const Value: string);
begin
  F__isset_NuMoradores := True;
  FNuMoradores := Value;
end;

function TCondicaoMoradiaThriftImpl.Get__isset_NuMoradores: Boolean;
begin
  Result := F__isset_NuMoradores;
end;

function TCondicaoMoradiaThriftImpl.GetSituacaoMoradiaPosseTerra: Int64;
begin
  Result := FSituacaoMoradiaPosseTerra;
end;

procedure TCondicaoMoradiaThriftImpl.SetSituacaoMoradiaPosseTerra( const Value: Int64);
begin
  F__isset_SituacaoMoradiaPosseTerra := True;
  FSituacaoMoradiaPosseTerra := Value;
end;

function TCondicaoMoradiaThriftImpl.Get__isset_SituacaoMoradiaPosseTerra: Boolean;
begin
  Result := F__isset_SituacaoMoradiaPosseTerra;
end;

function TCondicaoMoradiaThriftImpl.GetStDiponibilidadeEnergiaeletrica: Boolean;
begin
  Result := FStDiponibilidadeEnergiaeletrica;
end;

procedure TCondicaoMoradiaThriftImpl.SetStDiponibilidadeEnergiaeletrica( const Value: Boolean);
begin
  F__isset_StDiponibilidadeEnergiaeletrica := True;
  FStDiponibilidadeEnergiaeletrica := Value;
end;

function TCondicaoMoradiaThriftImpl.Get__isset_StDiponibilidadeEnergiaeletrica: Boolean;
begin
  Result := F__isset_StDiponibilidadeEnergiaeletrica;
end;

function TCondicaoMoradiaThriftImpl.GetTipoAcessoDomicilio: Int64;
begin
  Result := FTipoAcessoDomicilio;
end;

procedure TCondicaoMoradiaThriftImpl.SetTipoAcessoDomicilio( const Value: Int64);
begin
  F__isset_TipoAcessoDomicilio := True;
  FTipoAcessoDomicilio := Value;
end;

function TCondicaoMoradiaThriftImpl.Get__isset_TipoAcessoDomicilio: Boolean;
begin
  Result := F__isset_TipoAcessoDomicilio;
end;

function TCondicaoMoradiaThriftImpl.GetTipoDomicilio: Int64;
begin
  Result := FTipoDomicilio;
end;

procedure TCondicaoMoradiaThriftImpl.SetTipoDomicilio( const Value: Int64);
begin
  F__isset_TipoDomicilio := True;
  FTipoDomicilio := Value;
end;

function TCondicaoMoradiaThriftImpl.Get__isset_TipoDomicilio: Boolean;
begin
  Result := F__isset_TipoDomicilio;
end;

function TCondicaoMoradiaThriftImpl.GetTratamentoAguaDomicilio: Int64;
begin
  Result := FTratamentoAguaDomicilio;
end;

procedure TCondicaoMoradiaThriftImpl.SetTratamentoAguaDomicilio( const Value: Int64);
begin
  F__isset_TratamentoAguaDomicilio := True;
  FTratamentoAguaDomicilio := Value;
end;

function TCondicaoMoradiaThriftImpl.Get__isset_TratamentoAguaDomicilio: Boolean;
begin
  Result := F__isset_TratamentoAguaDomicilio;
end;

procedure TCondicaoMoradiaThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;

begin
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.I64) then
          begin
            AbastecimentoAgua := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.I64) then
          begin
            AreaProducaoRural := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.I64) then
          begin
            DestinoLixo := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.I64) then
          begin
            FormaEscoamentoBanheiro := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        5: begin
          if (field_.Type_ = TType.I64) then
          begin
            Localizacao := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        6: begin
          if (field_.Type_ = TType.I64) then
          begin
            MaterialPredominanteParedesExtDomicilio := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        7: begin
          if (field_.Type_ = TType.String_) then
          begin
            NuComodos := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        8: begin
          if (field_.Type_ = TType.String_) then
          begin
            NuMoradores := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        9: begin
          if (field_.Type_ = TType.I64) then
          begin
            SituacaoMoradiaPosseTerra := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        10: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            StDiponibilidadeEnergiaeletrica := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        11: begin
          if (field_.Type_ = TType.I64) then
          begin
            TipoAcessoDomicilio := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        12: begin
          if (field_.Type_ = TType.I64) then
          begin
            TipoDomicilio := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        13: begin
          if (field_.Type_ = TType.I64) then
          begin
            TratamentoAguaDomicilio := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
end;

procedure TCondicaoMoradiaThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
begin
  struc := TStructImpl.Create('CondicaoMoradiaThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  if (__isset_AbastecimentoAgua) then
  begin
    field_.Name := 'abastecimentoAgua';
    field_.Type_  := TType.I64;
    field_.ID := 1;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(AbastecimentoAgua);
    oprot.WriteFieldEnd();
  end;
  if (__isset_AreaProducaoRural) then
  begin
    field_.Name := 'areaProducaoRural';
    field_.Type_  := TType.I64;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(AreaProducaoRural);
    oprot.WriteFieldEnd();
  end;
  if (__isset_DestinoLixo) then
  begin
    field_.Name := 'destinoLixo';
    field_.Type_  := TType.I64;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(DestinoLixo);
    oprot.WriteFieldEnd();
  end;
  if (__isset_FormaEscoamentoBanheiro) then
  begin
    field_.Name := 'formaEscoamentoBanheiro';
    field_.Type_  := TType.I64;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(FormaEscoamentoBanheiro);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Localizacao) then
  begin
    field_.Name := 'localizacao';
    field_.Type_  := TType.I64;
    field_.ID := 5;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(Localizacao);
    oprot.WriteFieldEnd();
  end;
  if (__isset_MaterialPredominanteParedesExtDomicilio) then
  begin
    field_.Name := 'materialPredominanteParedesExtDomicilio';
    field_.Type_  := TType.I64;
    field_.ID := 6;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(MaterialPredominanteParedesExtDomicilio);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NuComodos) then
  begin
    field_.Name := 'nuComodos';
    field_.Type_  := TType.String_;
    field_.ID := 7;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(NuComodos);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NuMoradores) then
  begin
    field_.Name := 'nuMoradores';
    field_.Type_  := TType.String_;
    field_.ID := 8;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(NuMoradores);
    oprot.WriteFieldEnd();
  end;
  if (__isset_SituacaoMoradiaPosseTerra) then
  begin
    field_.Name := 'situacaoMoradiaPosseTerra';
    field_.Type_  := TType.I64;
    field_.ID := 9;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(SituacaoMoradiaPosseTerra);
    oprot.WriteFieldEnd();
  end;
  if (__isset_StDiponibilidadeEnergiaeletrica) then
  begin
    field_.Name := 'stDiponibilidadeEnergiaeletrica';
    field_.Type_  := TType.Bool_;
    field_.ID := 10;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(StDiponibilidadeEnergiaeletrica);
    oprot.WriteFieldEnd();
  end;
  if (__isset_TipoAcessoDomicilio) then
  begin
    field_.Name := 'tipoAcessoDomicilio';
    field_.Type_  := TType.I64;
    field_.ID := 11;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(TipoAcessoDomicilio);
    oprot.WriteFieldEnd();
  end;
  if (__isset_TipoDomicilio) then
  begin
    field_.Name := 'tipoDomicilio';
    field_.Type_  := TType.I64;
    field_.ID := 12;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(TipoDomicilio);
    oprot.WriteFieldEnd();
  end;
  if (__isset_TratamentoAguaDomicilio) then
  begin
    field_.Name := 'tratamentoAguaDomicilio';
    field_.Type_  := TType.I64;
    field_.ID := 13;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(TratamentoAguaDomicilio);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TCondicaoMoradiaThriftImpl.ToString: string;
var
  _sb0 : TThriftStringBuilder;
  _first1 : Boolean;
begin
  _sb0 := TThriftStringBuilder.Create('(');
  try
    _first1 := TRUE;
    if (__isset_AbastecimentoAgua) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('AbastecimentoAgua: ');
      _sb0.Append(AbastecimentoAgua);
    end;
    if (__isset_AreaProducaoRural) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('AreaProducaoRural: ');
      _sb0.Append(AreaProducaoRural);
    end;
    if (__isset_DestinoLixo) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('DestinoLixo: ');
      _sb0.Append(DestinoLixo);
    end;
    if (__isset_FormaEscoamentoBanheiro) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('FormaEscoamentoBanheiro: ');
      _sb0.Append(FormaEscoamentoBanheiro);
    end;
    if (__isset_Localizacao) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('Localizacao: ');
      _sb0.Append(Localizacao);
    end;
    if (__isset_MaterialPredominanteParedesExtDomicilio) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('MaterialPredominanteParedesExtDomicilio: ');
      _sb0.Append(MaterialPredominanteParedesExtDomicilio);
    end;
    if (__isset_NuComodos) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('NuComodos: ');
      _sb0.Append(NuComodos);
    end;
    if (__isset_NuMoradores) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('NuMoradores: ');
      _sb0.Append(NuMoradores);
    end;
    if (__isset_SituacaoMoradiaPosseTerra) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('SituacaoMoradiaPosseTerra: ');
      _sb0.Append(SituacaoMoradiaPosseTerra);
    end;
    if (__isset_StDiponibilidadeEnergiaeletrica) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('StDiponibilidadeEnergiaeletrica: ');
      _sb0.Append(StDiponibilidadeEnergiaeletrica);
    end;
    if (__isset_TipoAcessoDomicilio) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('TipoAcessoDomicilio: ');
      _sb0.Append(TipoAcessoDomicilio);
    end;
    if (__isset_TipoDomicilio) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('TipoDomicilio: ');
      _sb0.Append(TipoDomicilio);
    end;
    if (__isset_TratamentoAguaDomicilio) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('TratamentoAguaDomicilio: ');
      _sb0.Append(TratamentoAguaDomicilio);
    end;
    _sb0.Append(')');
    Result := _sb0.ToString;
    if _first1 then {prevent warning};
  finally
    _sb0.Free;
  end;
end;

constructor TFamiliaRowThriftImpl.Create;
begin
  inherited;
end;

destructor TFamiliaRowThriftImpl.Destroy;
begin
  inherited;
end;

function TFamiliaRowThriftImpl.GetDataNascimentoResponsavel: Int64;
begin
  Result := FDataNascimentoResponsavel;
end;

procedure TFamiliaRowThriftImpl.SetDataNascimentoResponsavel( const Value: Int64);
begin
  F__isset_DataNascimentoResponsavel := True;
  FDataNascimentoResponsavel := Value;
end;

function TFamiliaRowThriftImpl.Get__isset_DataNascimentoResponsavel: Boolean;
begin
  Result := F__isset_DataNascimentoResponsavel;
end;

function TFamiliaRowThriftImpl.GetNumeroCnsResponsavel: string;
begin
  Result := FNumeroCnsResponsavel;
end;

procedure TFamiliaRowThriftImpl.SetNumeroCnsResponsavel( const Value: string);
begin
  F__isset_NumeroCnsResponsavel := True;
  FNumeroCnsResponsavel := Value;
end;

function TFamiliaRowThriftImpl.Get__isset_NumeroCnsResponsavel: Boolean;
begin
  Result := F__isset_NumeroCnsResponsavel;
end;

function TFamiliaRowThriftImpl.GetNumeroMembrosFamilia: Integer;
begin
  Result := FNumeroMembrosFamilia;
end;

procedure TFamiliaRowThriftImpl.SetNumeroMembrosFamilia( const Value: Integer);
begin
  F__isset_NumeroMembrosFamilia := True;
  FNumeroMembrosFamilia := Value;
end;

function TFamiliaRowThriftImpl.Get__isset_NumeroMembrosFamilia: Boolean;
begin
  Result := F__isset_NumeroMembrosFamilia;
end;

function TFamiliaRowThriftImpl.GetNumeroProntuario: string;
begin
  Result := FNumeroProntuario;
end;

procedure TFamiliaRowThriftImpl.SetNumeroProntuario( const Value: string);
begin
  F__isset_NumeroProntuario := True;
  FNumeroProntuario := Value;
end;

function TFamiliaRowThriftImpl.Get__isset_NumeroProntuario: Boolean;
begin
  Result := F__isset_NumeroProntuario;
end;

function TFamiliaRowThriftImpl.GetRendaFamiliar: Int64;
begin
  Result := FRendaFamiliar;
end;

procedure TFamiliaRowThriftImpl.SetRendaFamiliar( const Value: Int64);
begin
  F__isset_RendaFamiliar := True;
  FRendaFamiliar := Value;
end;

function TFamiliaRowThriftImpl.Get__isset_RendaFamiliar: Boolean;
begin
  Result := F__isset_RendaFamiliar;
end;

function TFamiliaRowThriftImpl.GetResideDesde: Int64;
begin
  Result := FResideDesde;
end;

procedure TFamiliaRowThriftImpl.SetResideDesde( const Value: Int64);
begin
  F__isset_ResideDesde := True;
  FResideDesde := Value;
end;

function TFamiliaRowThriftImpl.Get__isset_ResideDesde: Boolean;
begin
  Result := F__isset_ResideDesde;
end;

function TFamiliaRowThriftImpl.GetStMudanca: Boolean;
begin
  Result := FStMudanca;
end;

procedure TFamiliaRowThriftImpl.SetStMudanca( const Value: Boolean);
begin
  F__isset_StMudanca := True;
  FStMudanca := Value;
end;

function TFamiliaRowThriftImpl.Get__isset_StMudanca: Boolean;
begin
  Result := F__isset_StMudanca;
end;

procedure TFamiliaRowThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;

begin
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.I64) then
          begin
            DataNascimentoResponsavel := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.String_) then
          begin
            NumeroCnsResponsavel := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.I32) then
          begin
            NumeroMembrosFamilia := iprot.ReadI32();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.String_) then
          begin
            NumeroProntuario := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        5: begin
          if (field_.Type_ = TType.I64) then
          begin
            RendaFamiliar := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        6: begin
          if (field_.Type_ = TType.I64) then
          begin
            ResideDesde := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        7: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            StMudanca := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
end;

procedure TFamiliaRowThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
begin
  struc := TStructImpl.Create('FamiliaRowThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  if (__isset_DataNascimentoResponsavel) then
  begin
    field_.Name := 'dataNascimentoResponsavel';
    field_.Type_  := TType.I64;
    field_.ID := 1;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(DataNascimentoResponsavel);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NumeroCnsResponsavel) then
  begin
    field_.Name := 'numeroCnsResponsavel';
    field_.Type_  := TType.String_;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(NumeroCnsResponsavel);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NumeroMembrosFamilia) then
  begin
    field_.Name := 'numeroMembrosFamilia';
    field_.Type_  := TType.I32;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(NumeroMembrosFamilia);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NumeroProntuario) then
  begin
    field_.Name := 'numeroProntuario';
    field_.Type_  := TType.String_;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(NumeroProntuario);
    oprot.WriteFieldEnd();
  end;
  if (__isset_RendaFamiliar) then
  begin
    field_.Name := 'rendaFamiliar';
    field_.Type_  := TType.I64;
    field_.ID := 5;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(RendaFamiliar);
    oprot.WriteFieldEnd();
  end;
  if (__isset_ResideDesde) then
  begin
    field_.Name := 'resideDesde';
    field_.Type_  := TType.I64;
    field_.ID := 6;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(ResideDesde);
    oprot.WriteFieldEnd();
  end;
  if (__isset_StMudanca) then
  begin
    field_.Name := 'stMudanca';
    field_.Type_  := TType.Bool_;
    field_.ID := 7;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(StMudanca);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TFamiliaRowThriftImpl.ToString: string;
var
  _sb2 : TThriftStringBuilder;
  _first3 : Boolean;
begin
  _sb2 := TThriftStringBuilder.Create('(');
  try
    _first3 := TRUE;
    if (__isset_DataNascimentoResponsavel) then begin
      if not _first3 then _sb2.Append(',');
      _first3 := FALSE;
      _sb2.Append('DataNascimentoResponsavel: ');
      _sb2.Append(DataNascimentoResponsavel);
    end;
    if (__isset_NumeroCnsResponsavel) then begin
      if not _first3 then _sb2.Append(',');
      _first3 := FALSE;
      _sb2.Append('NumeroCnsResponsavel: ');
      _sb2.Append(NumeroCnsResponsavel);
    end;
    if (__isset_NumeroMembrosFamilia) then begin
      if not _first3 then _sb2.Append(',');
      _first3 := FALSE;
      _sb2.Append('NumeroMembrosFamilia: ');
      _sb2.Append(NumeroMembrosFamilia);
    end;
    if (__isset_NumeroProntuario) then begin
      if not _first3 then _sb2.Append(',');
      _first3 := FALSE;
      _sb2.Append('NumeroProntuario: ');
      _sb2.Append(NumeroProntuario);
    end;
    if (__isset_RendaFamiliar) then begin
      if not _first3 then _sb2.Append(',');
      _first3 := FALSE;
      _sb2.Append('RendaFamiliar: ');
      _sb2.Append(RendaFamiliar);
    end;
    if (__isset_ResideDesde) then begin
      if not _first3 then _sb2.Append(',');
      _first3 := FALSE;
      _sb2.Append('ResideDesde: ');
      _sb2.Append(ResideDesde);
    end;
    if (__isset_StMudanca) then begin
      if not _first3 then _sb2.Append(',');
      _first3 := FALSE;
      _sb2.Append('StMudanca: ');
      _sb2.Append(StMudanca);
    end;
    _sb2.Append(')');
    Result := _sb2.ToString;
    if _first3 then {prevent warning};
  finally
    _sb2.Free;
  end;
end;

constructor TCadastroDomiciliarThriftImpl.Create;
begin
  inherited;
end;

destructor TCadastroDomiciliarThriftImpl.Destroy;
begin
  inherited;
end;

function TCadastroDomiciliarThriftImpl.GetAnimaisNoDomicilio: IThriftList<Int64>;
begin
  Result := FAnimaisNoDomicilio;
end;

procedure TCadastroDomiciliarThriftImpl.SetAnimaisNoDomicilio( const Value: IThriftList<Int64>);
begin
  F__isset_AnimaisNoDomicilio := True;
  FAnimaisNoDomicilio := Value;
end;

function TCadastroDomiciliarThriftImpl.Get__isset_AnimaisNoDomicilio: Boolean;
begin
  Result := F__isset_AnimaisNoDomicilio;
end;

function TCadastroDomiciliarThriftImpl.GetCondicaoMoradia: ICondicaoMoradiaThrift;
begin
  Result := FCondicaoMoradia;
end;

procedure TCadastroDomiciliarThriftImpl.SetCondicaoMoradia( const Value: ICondicaoMoradiaThrift);
begin
  F__isset_CondicaoMoradia := True;
  FCondicaoMoradia := Value;
end;

function TCadastroDomiciliarThriftImpl.Get__isset_CondicaoMoradia: Boolean;
begin
  Result := F__isset_CondicaoMoradia;
end;

function TCadastroDomiciliarThriftImpl.GetDadosGerais: IHeaderCdsCadastroThrift;
begin
  Result := FDadosGerais;
end;

procedure TCadastroDomiciliarThriftImpl.SetDadosGerais( const Value: IHeaderCdsCadastroThrift);
begin
  FDadosGerais := Value;
end;

function TCadastroDomiciliarThriftImpl.GetEnderecoLocalPermanencia: IEnderecoLocalPermanenciaThrift;
begin
  Result := FEnderecoLocalPermanencia;
end;

procedure TCadastroDomiciliarThriftImpl.SetEnderecoLocalPermanencia( const Value: IEnderecoLocalPermanenciaThrift);
begin
  F__isset_EnderecoLocalPermanencia := True;
  FEnderecoLocalPermanencia := Value;
end;

function TCadastroDomiciliarThriftImpl.Get__isset_EnderecoLocalPermanencia: Boolean;
begin
  Result := F__isset_EnderecoLocalPermanencia;
end;

function TCadastroDomiciliarThriftImpl.GetFamilias: IThriftList<IFamiliaRowThrift>;
begin
  Result := FFamilias;
end;

procedure TCadastroDomiciliarThriftImpl.SetFamilias( const Value: IThriftList<IFamiliaRowThrift>);
begin
  F__isset_Familias := True;
  FFamilias := Value;
end;

function TCadastroDomiciliarThriftImpl.Get__isset_Familias: Boolean;
begin
  Result := F__isset_Familias;
end;

function TCadastroDomiciliarThriftImpl.GetFichaAtualizada: Boolean;
begin
  Result := FFichaAtualizada;
end;

procedure TCadastroDomiciliarThriftImpl.SetFichaAtualizada( const Value: Boolean);
begin
  F__isset_FichaAtualizada := True;
  FFichaAtualizada := Value;
end;

function TCadastroDomiciliarThriftImpl.Get__isset_FichaAtualizada: Boolean;
begin
  Result := F__isset_FichaAtualizada;
end;

function TCadastroDomiciliarThriftImpl.GetQuantosAnimaisNoDomicilio: string;
begin
  Result := FQuantosAnimaisNoDomicilio;
end;

procedure TCadastroDomiciliarThriftImpl.SetQuantosAnimaisNoDomicilio( const Value: string);
begin
  F__isset_QuantosAnimaisNoDomicilio := True;
  FQuantosAnimaisNoDomicilio := Value;
end;

function TCadastroDomiciliarThriftImpl.Get__isset_QuantosAnimaisNoDomicilio: Boolean;
begin
  Result := F__isset_QuantosAnimaisNoDomicilio;
end;

function TCadastroDomiciliarThriftImpl.GetStAnimaisNoDomicilio: Boolean;
begin
  Result := FStAnimaisNoDomicilio;
end;

procedure TCadastroDomiciliarThriftImpl.SetStAnimaisNoDomicilio( const Value: Boolean);
begin
  F__isset_StAnimaisNoDomicilio := True;
  FStAnimaisNoDomicilio := Value;
end;

function TCadastroDomiciliarThriftImpl.Get__isset_StAnimaisNoDomicilio: Boolean;
begin
  Result := F__isset_StAnimaisNoDomicilio;
end;

function TCadastroDomiciliarThriftImpl.GetStatusTermoRecusaCadastroDomiciliarAtencaoBasica: Boolean;
begin
  Result := FStatusTermoRecusaCadastroDomiciliarAtencaoBasica;
end;

procedure TCadastroDomiciliarThriftImpl.SetStatusTermoRecusaCadastroDomiciliarAtencaoBasica( const Value: Boolean);
begin
  F__isset_StatusTermoRecusaCadastroDomiciliarAtencaoBasica := True;
  FStatusTermoRecusaCadastroDomiciliarAtencaoBasica := Value;
end;

function TCadastroDomiciliarThriftImpl.Get__isset_StatusTermoRecusaCadastroDomiciliarAtencaoBasica: Boolean;
begin
  Result := F__isset_StatusTermoRecusaCadastroDomiciliarAtencaoBasica;
end;

function TCadastroDomiciliarThriftImpl.GetTpCdsOrigem: Integer;
begin
  Result := FTpCdsOrigem;
end;

procedure TCadastroDomiciliarThriftImpl.SetTpCdsOrigem( const Value: Integer);
begin
  F__isset_TpCdsOrigem := True;
  FTpCdsOrigem := Value;
end;

function TCadastroDomiciliarThriftImpl.Get__isset_TpCdsOrigem: Boolean;
begin
  Result := F__isset_TpCdsOrigem;
end;

function TCadastroDomiciliarThriftImpl.GetUuid: string;
begin
  Result := FUuid;
end;

procedure TCadastroDomiciliarThriftImpl.SetUuid( const Value: string);
begin
  FUuid := Value;
end;

function TCadastroDomiciliarThriftImpl.GetUuidFichaOriginadora: string;
begin
  Result := FUuidFichaOriginadora;
end;

procedure TCadastroDomiciliarThriftImpl.SetUuidFichaOriginadora( const Value: string);
begin
  F__isset_UuidFichaOriginadora := True;
  FUuidFichaOriginadora := Value;
end;

function TCadastroDomiciliarThriftImpl.Get__isset_UuidFichaOriginadora: Boolean;
begin
  Result := F__isset_UuidFichaOriginadora;
end;

procedure TCadastroDomiciliarThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;
  _req_isset_DadosGerais : Boolean;
  _req_isset_Uuid : Boolean;
  _list4: IList;
  _i5: Integer;
  _elem6: Int64;
  _list7: IList;
  _i8: Integer;
  _elem9: IFamiliaRowThrift;

begin
  _req_isset_DadosGerais := FALSE;
  _req_isset_Uuid := FALSE;
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.List) then
          begin
            AnimaisNoDomicilio := TThriftListImpl<Int64>.Create;
            _list4 := iprot.ReadListBegin();
            for _i5 := 0 to _list4.Count - 1 do
            begin
              _elem6 := iprot.ReadI64();
              AnimaisNoDomicilio.Add(_elem6);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.Struct) then
          begin
            CondicaoMoradia := TCondicaoMoradiaThriftImpl.Create;
            CondicaoMoradia.Read(iprot);
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.Struct) then
          begin
            DadosGerais := THeaderCdsCadastroThriftImpl.Create;
            DadosGerais.Read(iprot);
            _req_isset_DadosGerais := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.Struct) then
          begin
            EnderecoLocalPermanencia := TEnderecoLocalPermanenciaThriftImpl.Create;
            EnderecoLocalPermanencia.Read(iprot);
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        5: begin
          if (field_.Type_ = TType.List) then
          begin
            Familias := TThriftListImpl<IFamiliaRowThrift>.Create;
            _list7 := iprot.ReadListBegin();
            for _i8 := 0 to _list7.Count - 1 do
            begin
              _elem9 := TFamiliaRowThriftImpl.Create;
              _elem9.Read(iprot);
              Familias.Add(_elem9);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        6: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            FichaAtualizada := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        7: begin
          if (field_.Type_ = TType.String_) then
          begin
            QuantosAnimaisNoDomicilio := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        8: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            StAnimaisNoDomicilio := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        9: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            StatusTermoRecusaCadastroDomiciliarAtencaoBasica := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        10: begin
          if (field_.Type_ = TType.I32) then
          begin
            TpCdsOrigem := iprot.ReadI32();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        11: begin
          if (field_.Type_ = TType.String_) then
          begin
            Uuid := iprot.ReadString();
            _req_isset_Uuid := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        12: begin
          if (field_.Type_ = TType.String_) then
          begin
            UuidFichaOriginadora := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
  if not _req_isset_DadosGerais
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'DadosGerais');
  if not _req_isset_Uuid
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'Uuid');
end;

procedure TCadastroDomiciliarThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
  list_10 : IList;
  _iter11: Int64;
  list_12 : IList;
  _iter13: IFamiliaRowThrift;
begin
  struc := TStructImpl.Create('CadastroDomiciliarThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  if (AnimaisNoDomicilio <> nil) and __isset_AnimaisNoDomicilio then
  begin
    field_.Name := 'animaisNoDomicilio';
    field_.Type_  := TType.List;
    field_.ID := 1;
    oprot.WriteFieldBegin(field_);
    list_10 := TListImpl.Create(TType.I64, AnimaisNoDomicilio.Count);
    oprot.WriteListBegin( list_10);
    for _iter11 in AnimaisNoDomicilio do
    begin
      oprot.WriteI64(_iter11);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (CondicaoMoradia <> nil) and __isset_CondicaoMoradia then
  begin
    field_.Name := 'condicaoMoradia';
    field_.Type_  := TType.Struct;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    CondicaoMoradia.Write(oprot);
    oprot.WriteFieldEnd();
  end;
  if (DadosGerais <> nil) then
  begin
    field_.Name := 'dadosGerais';
    field_.Type_  := TType.Struct;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    DadosGerais.Write(oprot);
    oprot.WriteFieldEnd();
  end;
  if (EnderecoLocalPermanencia <> nil) and __isset_EnderecoLocalPermanencia then
  begin
    field_.Name := 'enderecoLocalPermanencia';
    field_.Type_  := TType.Struct;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    EnderecoLocalPermanencia.Write(oprot);
    oprot.WriteFieldEnd();
  end;
  if (Familias <> nil) and __isset_Familias then
  begin
    field_.Name := 'familias';
    field_.Type_  := TType.List;
    field_.ID := 5;
    oprot.WriteFieldBegin(field_);
    list_12 := TListImpl.Create(TType.Struct, Familias.Count);
    oprot.WriteListBegin( list_12);
    for _iter13 in Familias do
    begin
      _iter13.Write(oprot);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (__isset_FichaAtualizada) then
  begin
    field_.Name := 'fichaAtualizada';
    field_.Type_  := TType.Bool_;
    field_.ID := 6;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(FichaAtualizada);
    oprot.WriteFieldEnd();
  end;
  if (__isset_QuantosAnimaisNoDomicilio) then
  begin
    field_.Name := 'quantosAnimaisNoDomicilio';
    field_.Type_  := TType.String_;
    field_.ID := 7;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(QuantosAnimaisNoDomicilio);
    oprot.WriteFieldEnd();
  end;
  if (__isset_StAnimaisNoDomicilio) then
  begin
    field_.Name := 'stAnimaisNoDomicilio';
    field_.Type_  := TType.Bool_;
    field_.ID := 8;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(StAnimaisNoDomicilio);
    oprot.WriteFieldEnd();
  end;
  if (__isset_StatusTermoRecusaCadastroDomiciliarAtencaoBasica) then
  begin
    field_.Name := 'statusTermoRecusaCadastroDomiciliarAtencaoBasica';
    field_.Type_  := TType.Bool_;
    field_.ID := 9;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(StatusTermoRecusaCadastroDomiciliarAtencaoBasica);
    oprot.WriteFieldEnd();
  end;
  if (__isset_TpCdsOrigem) then
  begin
    field_.Name := 'tpCdsOrigem';
    field_.Type_  := TType.I32;
    field_.ID := 10;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(TpCdsOrigem);
    oprot.WriteFieldEnd();
  end;
  // required field
  field_.Name := 'uuid';
  field_.Type_  := TType.String_;
  field_.ID := 11;
  oprot.WriteFieldBegin(field_);
  oprot.WriteString(Uuid);
  oprot.WriteFieldEnd();
  if (__isset_UuidFichaOriginadora) then
  begin
    field_.Name := 'uuidFichaOriginadora';
    field_.Type_  := TType.String_;
    field_.ID := 12;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(UuidFichaOriginadora);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TCadastroDomiciliarThriftImpl.ToString: string;
var
  _sb14 : TThriftStringBuilder;
  _first15 : Boolean;
begin
  _sb14 := TThriftStringBuilder.Create('(');
  try
    _first15 := TRUE;
    if (AnimaisNoDomicilio <> nil) and __isset_AnimaisNoDomicilio then begin
      if not _first15 then _sb14.Append(',');
      _first15 := FALSE;
      _sb14.Append('AnimaisNoDomicilio: ');
      _sb14.Append(AnimaisNoDomicilio);
    end;
    if (CondicaoMoradia <> nil) and __isset_CondicaoMoradia then begin
      if not _first15 then _sb14.Append(',');
      _first15 := FALSE;
      _sb14.Append('CondicaoMoradia: ');
      if (CondicaoMoradia = nil) then _sb14.Append('<null>') else _sb14.Append(CondicaoMoradia.ToString());
    end;
    if (DadosGerais <> nil) then begin
      if not _first15 then _sb14.Append(',');
      _sb14.Append('DadosGerais: ');
      if (DadosGerais = nil) then _sb14.Append('<null>') else _sb14.Append(DadosGerais.ToString());
    end;
    if (EnderecoLocalPermanencia <> nil) and __isset_EnderecoLocalPermanencia then begin
      _sb14.Append(', EnderecoLocalPermanencia: ');
      if (EnderecoLocalPermanencia = nil) then _sb14.Append('<null>') else _sb14.Append(EnderecoLocalPermanencia.ToString());
    end;
    if (Familias <> nil) and __isset_Familias then begin
      _sb14.Append(', Familias: ');
      _sb14.Append(Familias);
    end;
    if (__isset_FichaAtualizada) then begin
      _sb14.Append(', FichaAtualizada: ');
      _sb14.Append(FichaAtualizada);
    end;
    if (__isset_QuantosAnimaisNoDomicilio) then begin
      _sb14.Append(', QuantosAnimaisNoDomicilio: ');
      _sb14.Append(QuantosAnimaisNoDomicilio);
    end;
    if (__isset_StAnimaisNoDomicilio) then begin
      _sb14.Append(', StAnimaisNoDomicilio: ');
      _sb14.Append(StAnimaisNoDomicilio);
    end;
    if (__isset_StatusTermoRecusaCadastroDomiciliarAtencaoBasica) then begin
      _sb14.Append(', StatusTermoRecusaCadastroDomiciliarAtencaoBasica: ');
      _sb14.Append(StatusTermoRecusaCadastroDomiciliarAtencaoBasica);
    end;
    if (__isset_TpCdsOrigem) then begin
      _sb14.Append(', TpCdsOrigem: ');
      _sb14.Append(TpCdsOrigem);
    end;
    _sb14.Append(', Uuid: ');
    _sb14.Append(Uuid);
    if (__isset_UuidFichaOriginadora) then begin
      _sb14.Append(', UuidFichaOriginadora: ');
      _sb14.Append(UuidFichaOriginadora);
    end;
    _sb14.Append(')');
    Result := _sb14.ToString;
    if _first15 then {prevent warning};
  finally
    _sb14.Free;
  end;
end;


initialization

finalization


end.

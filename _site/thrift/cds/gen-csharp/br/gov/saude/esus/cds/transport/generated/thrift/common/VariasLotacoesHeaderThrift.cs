/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace br.gov.saude.esus.cds.transport.generated.thrift.common
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class VariasLotacoesHeaderThrift : TBase
  {
    private string _profissionalCNS1;
    private string _cboCodigo_2002_1;
    private string _profissionalCNS2;
    private string _cboCodigo_2002_2;

    public UnicaLotacaoHeaderThrift LotacaoForm { get; set; }

    public string ProfissionalCNS1
    {
      get
      {
        return _profissionalCNS1;
      }
      set
      {
        __isset.profissionalCNS1 = true;
        this._profissionalCNS1 = value;
      }
    }

    public string CboCodigo_2002_1
    {
      get
      {
        return _cboCodigo_2002_1;
      }
      set
      {
        __isset.cboCodigo_2002_1 = true;
        this._cboCodigo_2002_1 = value;
      }
    }

    public string ProfissionalCNS2
    {
      get
      {
        return _profissionalCNS2;
      }
      set
      {
        __isset.profissionalCNS2 = true;
        this._profissionalCNS2 = value;
      }
    }

    public string CboCodigo_2002_2
    {
      get
      {
        return _cboCodigo_2002_2;
      }
      set
      {
        __isset.cboCodigo_2002_2 = true;
        this._cboCodigo_2002_2 = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool profissionalCNS1;
      public bool cboCodigo_2002_1;
      public bool profissionalCNS2;
      public bool cboCodigo_2002_2;
    }

    public VariasLotacoesHeaderThrift() {
    }

    public VariasLotacoesHeaderThrift(UnicaLotacaoHeaderThrift lotacaoForm) : this() {
      this.LotacaoForm = lotacaoForm;
    }

    public void Read (TProtocol iprot)
    {
      bool isset_lotacaoForm = false;
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Struct) {
              LotacaoForm = new UnicaLotacaoHeaderThrift();
              LotacaoForm.Read(iprot);
              isset_lotacaoForm = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              ProfissionalCNS1 = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              CboCodigo_2002_1 = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              ProfissionalCNS2 = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.String) {
              CboCodigo_2002_2 = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
      if (!isset_lotacaoForm)
        throw new TProtocolException(TProtocolException.INVALID_DATA);
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("VariasLotacoesHeaderThrift");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      field.Name = "lotacaoForm";
      field.Type = TType.Struct;
      field.ID = 1;
      oprot.WriteFieldBegin(field);
      LotacaoForm.Write(oprot);
      oprot.WriteFieldEnd();
      if (ProfissionalCNS1 != null && __isset.profissionalCNS1) {
        field.Name = "profissionalCNS1";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ProfissionalCNS1);
        oprot.WriteFieldEnd();
      }
      if (CboCodigo_2002_1 != null && __isset.cboCodigo_2002_1) {
        field.Name = "cboCodigo_2002_1";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(CboCodigo_2002_1);
        oprot.WriteFieldEnd();
      }
      if (ProfissionalCNS2 != null && __isset.profissionalCNS2) {
        field.Name = "profissionalCNS2";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ProfissionalCNS2);
        oprot.WriteFieldEnd();
      }
      if (CboCodigo_2002_2 != null && __isset.cboCodigo_2002_2) {
        field.Name = "cboCodigo_2002_2";
        field.Type = TType.String;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(CboCodigo_2002_2);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("VariasLotacoesHeaderThrift(");
      __sb.Append(", LotacaoForm: ");
      __sb.Append(LotacaoForm== null ? "<null>" : LotacaoForm.ToString());
      if (ProfissionalCNS1 != null && __isset.profissionalCNS1) {
        __sb.Append(", ProfissionalCNS1: ");
        __sb.Append(ProfissionalCNS1);
      }
      if (CboCodigo_2002_1 != null && __isset.cboCodigo_2002_1) {
        __sb.Append(", CboCodigo_2002_1: ");
        __sb.Append(CboCodigo_2002_1);
      }
      if (ProfissionalCNS2 != null && __isset.profissionalCNS2) {
        __sb.Append(", ProfissionalCNS2: ");
        __sb.Append(ProfissionalCNS2);
      }
      if (CboCodigo_2002_2 != null && __isset.cboCodigo_2002_2) {
        __sb.Append(", CboCodigo_2002_2: ");
        __sb.Append(CboCodigo_2002_2);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
